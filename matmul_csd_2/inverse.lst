     1                                  ;CSD Assignment 1
     2                                  ;Problem: Inversion of a Matrix
     3                                  ;Author: Pankaj (CS10B042)
     4                                  
     5                                  
     6                                  global main
     7                                  
     8                                  extern scanf
     9                                  extern printf
    10                                  
    11                                  section .data
    12 00000000 0A00                    newline db "",10, 0
    13 00000002 256C6600                formatin: db "%lf", 0
    14 00000006 256C660A00              formatout: db "%lf", 10, 0 
    15 0000000B 44657465726D696E61-     formatdet: db "Determinant Value: %lf", 10, 0 
    16 00000014 6E742056616C75653A-
    17 0000001D 20256C660A00       
    18 00000023 44657465726D696E61-     formatdetzero: db "Determinant Value is Zero. Exiting.", 0
    19 0000002C 6E742056616C756520-
    20 00000035 6973205A65726F2E20-
    21 0000003E 45786974696E672E00 
    22                                  
    23 00000047 0000000000000000        fvr: dq 0
    24 0000004F 0000000000000000        tmp: dq 0
    25 00000057 00000000                tmp2: dd 0
    26                                  
    27 0000005B 0000000000000000        a: dq 0
    28 00000063 0000000000000000        b: dq 0
    29 0000006B 0000000000000000        c: dq 0
    30 00000073 0000000000000000        detval: dq 0
    31                                  
    32                                  
    33                                  section .bss
    34                                  
    35 00000000 <res 00000048>          array1: resq 9
    36 00000048 <res 00000048>          array2: resq 9
    37 00000090 <res 00000048>          array3: resq 9
    38                                  
    39                                  section .text
    40                                  
    41                                  main:
    42                                  
    43                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;; Reading mat ;;;;;;;;;;;;;;;;;;;;;;;;;;
    44                                  readmat:
    45 00000000 BB00000000                 mov ebx, 0;
    46                                  
    47                                  inputMat:
    48 00000005 E844040000                 call readfloat
    49 0000000A DD1CDD[00000000]           fstp qword [array1+ebx*8]
    50 00000011 43                         inc ebx;
    51                                     
    52 00000012 83FB09                     cmp ebx, 9
    53 00000015 7CEE                       jl inputMat
    54                                  
    55                                  ;;;;;;;;;;;;;;;;;;;;;;; Read mat over ;;;;;;;;;;;;;;;;;;;;;;
    56                                  
    57                                  ;;;;;;;;;;;;;;;;;;; Calculate mat determinant ;;;;;;;;;;;;;;
    58                                  
    59 00000017 B907000000              mov ecx, 7
    60 0000001C DD04CD[00000000]        fld qword [array1+ecx*8] ; 8th element
    61 00000023 B905000000              mov ecx, 5
    62 00000028 DC0CCD[00000000]        fmul qword [array1+ecx*8] ; 6th element 
    63 0000002F DD1D[5B000000]          fstp qword [a]
    64                                  
    65 00000035 B904000000              mov ecx, 4
    66 0000003A DD04CD[00000000]        fld qword [array1+ecx*8] ; 5th element
    67 00000041 B908000000              mov ecx, 8
    68 00000046 DC0CCD[00000000]        fmul qword [array1+ecx*8] ; 9th element
    69                                  
    70 0000004D DC25[5B000000]          fsub qword[a]
    71 00000053 DD1D[5B000000]          fstp qword [a]
    72                                  ;-----------------
    73                                  
    74 00000059 B906000000              mov ecx, 6
    75 0000005E DD04CD[00000000]        fld qword [array1+ecx*8] ; 7th element
    76 00000065 B905000000              mov ecx, 5
    77 0000006A DC0CCD[00000000]        fmul qword [array1+ecx*8] ; 6th element 
    78 00000071 DD1D[63000000]          fstp qword [b]
    79                                  
    80 00000077 B903000000              mov ecx, 3
    81 0000007C DD04CD[00000000]        fld qword [array1+ecx*8] ; 4th element
    82 00000083 B908000000              mov ecx, 8
    83 00000088 DC0CCD[00000000]        fmul qword [array1+ecx*8] ; 9th element
    84                                  
    85 0000008F DC25[63000000]          fsub qword[b]
    86 00000095 DD1D[63000000]          fstp qword [b]
    87                                  ;-----------------
    88                                  
    89 0000009B B906000000              mov ecx, 6
    90 000000A0 DD04CD[00000000]        fld qword [array1+ecx*8] ; 7th element
    91 000000A7 B904000000              mov ecx, 4
    92 000000AC DC0CCD[00000000]        fmul qword [array1+ecx*8] ; 5th element 
    93 000000B3 DD1D[6B000000]          fstp qword [c]
    94                                  
    95 000000B9 B903000000              mov ecx, 3
    96 000000BE DD04CD[00000000]        fld qword [array1+ecx*8] ; 4th element
    97 000000C5 B907000000              mov ecx, 7
    98 000000CA DC0CCD[00000000]        fmul qword [array1+ecx*8] ; 8th element
    99                                  
   100 000000D1 DC25[6B000000]          fsub qword[c]
   101 000000D7 DD1D[6B000000]          fstp qword [c]
   102                                  ;------------------------------------------
   103                                  
   104                                  
   105 000000DD DD05[5B000000]          fld qword[a]
   106 000000E3 DC0D[00000000]          fmul qword[array1]
   107 000000E9 DD1D[5B000000]          fstp qword [a]
   108                                  
   109 000000EF DD05[63000000]          fld qword[b]
   110 000000F5 DC0D[08000000]          fmul qword[array1+8]
   111 000000FB DD1D[63000000]          fstp qword [b]
   112                                  
   113 00000101 DD05[6B000000]          fld qword[c]
   114 00000107 DC0D[10000000]          fmul qword[array1+16]
   115 0000010D DD1D[6B000000]          fstp qword [c]
   116                                  
   117                                  ;-----------------------------------------
   118                                  
   119                                  
   120 00000113 DD05[5B000000]          fld qword[a]
   121 00000119 DC25[63000000]          fsub qword[b]
   122 0000011F DC05[6B000000]          fadd qword[c]
   123 00000125 DD1D[73000000]          fstp qword[detval]
   124                                  
   125 0000012B 833D[77000000]00        cmp dword [detval+4], 0
   126 00000132 0F8400030000            je detiszero
   127                                  
   128                                  
   129 00000138 FF35[77000000]          push dword [detval+4];
   130 0000013E FF35[73000000]          push dword [detval];
   131 00000144 68[0B000000]            push formatdet;
   132 00000149 E8(00000000)            call printf
   133 0000014E 83C40C                  add esp, 12
   134                                  
   135                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;; mat determinant over ;;;;;;;;;;;;;;;
   136                                  
   137                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;; creating tranpose ;;;;;;;;;;;;;;;;;;
   138 00000151 BB00000000               mov ebx, 0;
   139 00000156 DD04DD[00000000]         fld qword [array1+ebx*8]
   140 0000015D DD1CDD[48000000]         fstp qword [array2+ebx*8]
   141                                  
   142 00000164 BB01000000               mov ebx, 1
   143 00000169 DD04DD[00000000]         fld qword [array1+ebx*8]
   144 00000170 BB03000000               mov ebx, 3
   145 00000175 DD1CDD[48000000]         fstp qword [array2+ebx*8]
   146                                  
   147 0000017C BB02000000               mov ebx, 2
   148 00000181 DD04DD[00000000]         fld qword [array1+ebx*8]
   149 00000188 BB06000000               mov ebx, 6
   150 0000018D DD1CDD[48000000]         fstp qword [array2+ebx*8]
   151                                  
   152 00000194 BB03000000               mov ebx, 3
   153 00000199 DD04DD[00000000]         fld qword [array1+ebx*8]
   154 000001A0 BB01000000               mov ebx, 1
   155 000001A5 DD1CDD[48000000]         fstp qword [array2+ebx*8]
   156                                  
   157 000001AC BB03000000               mov ebx, 3
   158 000001B1 DD04DD[00000000]         fld qword [array1+ebx*8]
   159 000001B8 BB01000000               mov ebx, 1
   160 000001BD DD1CDD[48000000]         fstp qword [array2+ebx*8]
   161                                  
   162 000001C4 BB04000000               mov ebx, 4
   163 000001C9 DD04DD[00000000]         fld qword [array1+ebx*8]
   164 000001D0 DD1CDD[48000000]         fstp qword [array2+ebx*8]
   165                                  
   166 000001D7 BB05000000               mov ebx, 5
   167 000001DC DD04DD[00000000]         fld qword [array1+ebx*8]
   168 000001E3 BB07000000               mov ebx, 7
   169 000001E8 DD1CDD[48000000]         fstp qword [array2+ebx*8]
   170                                  
   171 000001EF BB06000000               mov ebx, 6
   172 000001F4 DD04DD[00000000]         fld qword [array1+ebx*8]
   173 000001FB BB02000000               mov ebx, 2
   174 00000200 DD1CDD[48000000]         fstp qword [array2+ebx*8]
   175                                  
   176 00000207 BB07000000               mov ebx, 7
   177 0000020C DD04DD[00000000]         fld qword [array1+ebx*8]
   178 00000213 BB05000000               mov ebx, 5
   179 00000218 DD1CDD[48000000]         fstp qword [array2+ebx*8]
   180                                  
   181 0000021F BB08000000               mov ebx, 8
   182 00000224 DD04DD[00000000]         fld qword [array1+ebx*8]
   183 0000022B DD1CDD[48000000]         fstp qword [array2+ebx*8]
   184                                  
   185                                  ;;;;;;;;;;;;;;;;;;;;;;;;; creating transpose over ;;;;;;;;;;;;;;;;;;;;;
   186                                  
   187                                  
   188                                  ;;;;;;;;;;;;;;;;;;;;; getting cofactor ;;;;;;;;;;;;;;;;;;
   189 00000232 6A05                    push 5
   190 00000234 6A07                    push 7
   191 00000236 6A08                    push 8
   192 00000238 6A04                    push 4
   193 0000023A E82D020000              call getDet
   194 0000023F 5B                      pop ebx
   195 00000240 5B                      pop ebx
   196 00000241 5B                      pop ebx
   197 00000242 5B                      pop ebx
   198 00000243 B900000000              mov ecx, 0
   199 00000248 DD1CCD[90000000]        fstp qword [array3+ecx*8]
   200                                  
   201                                  
   202                                  
   203                                  ;---------
   204 0000024F 6A05                    push 5
   205 00000251 6A06                    push 6
   206 00000253 6A08                    push 8
   207 00000255 6A03                    push 3
   208 00000257 E810020000              call getDet
   209 0000025C 5B                      pop ebx
   210 0000025D 5B                      pop ebx
   211 0000025E 5B                      pop ebx
   212 0000025F 5B                      pop ebx
   213 00000260 B901000000              mov ecx, 1
   214                                  
   215 00000265 DD1D[4F000000]          fstp qword [tmp]
   216 0000026B C705[47000000]0000-     mov dword [fvr], 0
   217 00000273 0000               
   218 00000275 C705[4B000000]0000-     mov dword [fvr+4], 0
   219 0000027D 0000               
   220 0000027F DD05[47000000]          fld qword [fvr]
   221 00000285 DC25[4F000000]          fsub qword [tmp]
   222                                  
   223 0000028B DD1CCD[90000000]        fstp qword [array3+ecx*8]
   224                                  
   225                                  ;---------
   226 00000292 6A04                    push 4
   227 00000294 6A06                    push 6
   228 00000296 6A07                    push 7
   229 00000298 6A03                    push 3
   230 0000029A E8CD010000              call getDet
   231 0000029F 5B                      pop ebx
   232 000002A0 5B                      pop ebx
   233 000002A1 5B                      pop ebx
   234 000002A2 5B                      pop ebx
   235 000002A3 B902000000              mov ecx, 2
   236 000002A8 DD1CCD[90000000]        fstp qword [array3+ecx*8]
   237                                  
   238                                  ;---------
   239 000002AF 6A02                    push 2
   240 000002B1 6A07                    push 7
   241 000002B3 6A08                    push 8
   242 000002B5 6A01                    push 1
   243 000002B7 E8B0010000              call getDet
   244 000002BC 5B                      pop ebx
   245 000002BD 5B                      pop ebx
   246 000002BE 5B                      pop ebx
   247 000002BF 5B                      pop ebx
   248 000002C0 B903000000              mov ecx, 3
   249                                  
   250 000002C5 DD1D[4F000000]          fstp qword [tmp]
   251 000002CB C705[47000000]0000-     mov dword [fvr], 0
   252 000002D3 0000               
   253 000002D5 C705[4B000000]0000-     mov dword [fvr+4], 0
   254 000002DD 0000               
   255 000002DF DD05[47000000]          fld qword [fvr]
   256 000002E5 DC25[4F000000]          fsub qword [tmp]
   257                                  
   258 000002EB DD1CCD[90000000]        fstp qword [array3+ecx*8]
   259                                  
   260                                  ;---------
   261 000002F2 6A02                    push 2
   262 000002F4 6A06                    push 6
   263 000002F6 6A08                    push 8
   264 000002F8 6A00                    push 0
   265 000002FA E86D010000              call getDet
   266 000002FF 5B                      pop ebx
   267 00000300 5B                      pop ebx
   268 00000301 5B                      pop ebx
   269 00000302 5B                      pop ebx
   270 00000303 B904000000              mov ecx, 4
   271 00000308 DD1CCD[90000000]        fstp qword [array3+ecx*8]
   272                                  
   273                                  ;---------
   274 0000030F 6A01                    push 1
   275 00000311 6A06                    push 6
   276 00000313 6A07                    push 7
   277 00000315 6A00                    push 0
   278 00000317 E850010000              call getDet
   279 0000031C 5B                      pop ebx
   280 0000031D 5B                      pop ebx
   281 0000031E 5B                      pop ebx
   282 0000031F 5B                      pop ebx
   283 00000320 B905000000              mov ecx, 5
   284                                  
   285 00000325 DD1D[4F000000]          fstp qword [tmp]
   286 0000032B C705[47000000]0000-     mov dword [fvr], 0
   287 00000333 0000               
   288 00000335 C705[4B000000]0000-     mov dword [fvr+4], 0
   289 0000033D 0000               
   290 0000033F DD05[47000000]          fld qword [fvr]
   291 00000345 DC25[4F000000]          fsub qword [tmp]
   292                                  
   293 0000034B DD1CCD[90000000]        fstp qword [array3+ecx*8]
   294                                  
   295                                  ;---------
   296 00000352 6A02                    push 2
   297 00000354 6A04                    push 4
   298 00000356 6A05                    push 5
   299 00000358 6A01                    push 1
   300 0000035A E80D010000              call getDet
   301 0000035F 5B                      pop ebx
   302 00000360 5B                      pop ebx
   303 00000361 5B                      pop ebx
   304 00000362 5B                      pop ebx
   305 00000363 B906000000              mov ecx, 6
   306 00000368 DD1CCD[90000000]        fstp qword [array3+ecx*8]
   307                                  
   308                                  ;---------
   309 0000036F 6A02                    push 2
   310 00000371 6A03                    push 3
   311 00000373 6A05                    push 5
   312 00000375 6A00                    push 0
   313 00000377 E8F0000000              call getDet
   314 0000037C 5B                      pop ebx
   315 0000037D 5B                      pop ebx
   316 0000037E 5B                      pop ebx
   317 0000037F 5B                      pop ebx
   318 00000380 B907000000              mov ecx, 7
   319                                  
   320                                  
   321 00000385 DD1D[4F000000]          fstp qword [tmp]
   322 0000038B C705[47000000]0000-     mov dword [fvr], 0
   323 00000393 0000               
   324 00000395 C705[4B000000]0000-     mov dword [fvr+4], 0
   325 0000039D 0000               
   326 0000039F DD05[47000000]          fld qword [fvr]
   327 000003A5 DC25[4F000000]          fsub qword [tmp]
   328                                  
   329 000003AB DD1CCD[90000000]        fstp qword [array3+ecx*8]
   330                                  
   331                                  ;---------
   332 000003B2 6A01                    push 1
   333 000003B4 6A03                    push 3
   334 000003B6 6A04                    push 4
   335 000003B8 6A00                    push 0
   336 000003BA E8AD000000              call getDet
   337 000003BF 5B                      pop ebx
   338 000003C0 5B                      pop ebx
   339 000003C1 5B                      pop ebx
   340 000003C2 5B                      pop ebx
   341 000003C3 B908000000              mov ecx, 8
   342 000003C8 DD1CCD[90000000]        fstp qword [array3+ecx*8]
   343                                  
   344                                  ;;;;;;;;;;;;;;;;;;;;;; getting cofactor over ;;;;;;;;;;;;;
   345                                  
   346                                  ;;;;;;;;;;;;;;;;;;;;; Division by determinant value ;;;;;;;;;;;;;;;
   347 000003CF BB00000000                 mov ebx, 0;
   348                                  
   349                                  nextdiv:
   350 000003D4 DD04DD[90000000]           fld qword [array3+ebx*8]
   351 000003DB DC35[73000000]             fdiv qword [detval]
   352 000003E1 DD1CDD[90000000]           fstp qword [array3+ebx*8]
   353 000003E8 43                         inc ebx
   354                                  
   355 000003E9 83FB09                     cmp ebx, 9
   356 000003EC 7CE6                       jl nextdiv
   357                                  
   358                                  
   359                                  ;;;;;;;;;;;;;;;;;;;;; Division by determinant value over ;;;;;;;;;;;;;;;
   360                                  
   361                                  
   362                                  
   363                                  ;;;;;;;;;;;;;;;;;;;; Print the mat ;;;;;;;;;;;;;;;;;;;;;
   364                                  pmat:
   365 000003EE BB00000000                 mov ebx, 0;
   366                                  
   367                                  printMat:
   368                                  
   369 000003F3 FF34DD[94000000]           push dword [array3+ebx*8+4];
   370 000003FA FF34DD[90000000]           push dword [array3+ebx*8];
   371 00000401 68[06000000]               push formatout;
   372 00000406 E8(00000000)               call printf
   373 0000040B 83C40C                     add esp, 12 
   374 0000040E 43                         inc ebx
   375                                     
   376 0000040F 83FB03                     cmp ebx, 3
   377 00000412 740C                       je wp
   378                                  
   379 00000414 83FB06                     cmp ebx, 6
   380 00000417 7407                       je wp
   381                                  
   382                                  cnt:
   383 00000419 83FB09                     cmp ebx, 9
   384 0000041C 7CD5                       jl printMat
   385                                  
   386 0000041E EB0F                    jmp next
   387                                  
   388                                  
   389                                  
   390                                  wp:
   391 00000420 68[00000000]               push newline
   392 00000425 E8(00000000)               call printf
   393 0000042A 83C404                     add esp, 4
   394 0000042D EBEA                       jmp cnt
   395                                  
   396                                  next:
   397                                  ;;;;;;;;;;;;;;;;;;;;;;;;; Print matrix over ;;;;;;;;;;;;;;;;;;
   398                                  
   399                                  
   400                                  exit:
   401 0000042F 31DB                    xor ebx, ebx
   402 00000431 B801000000              mov eax, 1
   403 00000436 CD80                    int 80h
   404                                  
   405                                  
   406                                  detiszero:
   407                                  
   408 00000438 68[23000000]            push formatdetzero
   409 0000043D E8(00000000)            call printf
   410 00000442 83C404                  add esp, 4
   411                                  
   412 00000445 31DB                    xor ebx, ebx
   413 00000447 B801000000              mov eax, 1
   414 0000044C CD80                    int 80h
   415                                  
   416                                  ;;;;;;;;;;;;;;;;;;;;; Read float value function ;;;;;;;;;;;;;;;;;;;;
   417                                  readfloat:
   418 0000044E 55                      push ebp
   419 0000044F 89E5                    mov ebp, esp
   420 00000451 83EC08                  sub esp, 8
   421 00000454 8D0424                  lea eax, [esp]
   422 00000457 50                      push eax
   423 00000458 68[02000000]            push formatin
   424 0000045D E8(00000000)            call scanf
   425 00000462 83C408                  add esp, 8
   426 00000465 DD45F8                  fld qword [ebp - 8]
   427 00000468 89EC                    mov esp, ebp
   428 0000046A 5D                      pop ebp
   429 0000046B C3                      ret
   430                                  ;;;;;;;;;;;;;;;;;;;; Read float value fuction over ;;;;;;;;;;;;;;;
   431                                  
   432                                  ;;;;;;;;;;;;;;;;;;;;;; Finding determinant of minor matrices function ;;;;;;;;;;;;;;;;;;
   433                                  getDet:
   434                                  
   435 0000046C 8B4C240C                mov ecx, [esp+12]
   436 00000470 DD04CD[48000000]        fld qword [array2+ecx*8] ; bottom left element
   437 00000477 8B4C2410                mov ecx, [esp+16]
   438 0000047B DC0CCD[48000000]        fmul qword [array2+ecx*8] ; top right element
   439 00000482 DD1D[4F000000]          fstp qword [tmp]
   440                                  
   441 00000488 8B4C2404                mov ecx, [esp+4]
   442 0000048C DD04CD[48000000]        fld qword[array2+ecx*8] ; top left element
   443 00000493 8B4C2408                mov ecx, [esp+8]
   444 00000497 DC0CCD[48000000]        fmul qword [array2+ecx*8] ; bottom right element
   445                                  
   446 0000049E DC25[4F000000]          fsub qword[tmp]
   447                                  
   448 000004A4 C3                      ret
   449                                  ;----------
   450                                  
   451                                  
   452                                  
