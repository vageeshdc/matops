     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  section .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21                                  
    22 00000046 207C2025642000          	format: db " | %d ",0
    23 0000004D 207C200A00              	format2: db " | ",10,0
    24 00000052 2074696D652074616B-     	format3: db " time taken %lld cycles .. ",10,0
    25 0000005B 656E20256C6C642063-
    26 00000064 79636C6573202E2E20-
    27 0000006D 0A00               
    28                                  
    29 0000006F 00000000                	CHval: dd 0
    30 00000073 00000000                	CLval: dd 0
    31                                  
    32 00000077 00000000                	loop_i: dd 0
    33 0000007B 00000000                	loop_j: dd 0
    34                                  	
    35 0000007F 00000000                	aVec: dd 0
    36 00000083 00000000                	bVec: dd 0
    37                                  	
    38 00000087 00000000                	aOff: dd 0
    39 0000008B 00000000                	bOff: dd 0
    40 0000008F 00000000                	cOff: dd 0
    41                                  
    42 00000093 00000000                	lop_i: dd 0
    43 00000097 00000000                	lop_j: dd 0
    44 0000009B 00000000                	lop_k: dd 0
    45                                  	
    46 0000009F 00000000                	Av: dd 0
    47 000000A3 00000000                	Bv: dd 0
    48 000000A7 00000000                	Cv: dd 0
    49 000000AB 00000000                	Dv: dd 0
    50 000000AF 00000000                	Nval: dd 0
    51 000000B3 00000000                	Bval: dd 0
    52                                  
    53 000000B7 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    54 000000C0 000000040000000500-
    55 000000C9 000006000000070000-
    56 000000D2 000800000009000000-
    57 000000DB 0A0000000B0000000C-
    58 000000E4 0000000D0000000E00-
    59 000000ED 00000F000000100000-
    60 000000F6 00                 
    61 000000F7 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    62 00000100 000000040000000500-
    63 00000109 000006000000070000-
    64 00000112 000800000009000000-
    65 0000011B 0A0000000B0000000C-
    66 00000124 0000000D0000000E00-
    67 0000012D 00000F000000100000-
    68 00000136 00                 
    69                                  
    70 00000137 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    71 00000140 000000000000000000-
    72 00000149 000000000000000000-
    73 00000152 000000000000000000-
    74 0000015B 000000000000000000-
    75 00000164 000000000000000000-
    76 0000016D 000000000000000000-
    77 00000176 00                 
    78                                  
    79 00000177 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    80 00000180 000000000000000000-
    81 00000189 000000000000000000-
    82 00000192 000000000000000000-
    83 0000019B 000000000000000000-
    84 000001A4 000000000000000000-
    85 000001AD 000000000000000000-
    86 000001B6 00                 
    87                                  
    88                                  section .text:
    89                                  	global main
    90                                  	extern printf
    91                                  
    92                                  main:
    93                                  
    94                                  	;getting initial time
    95 00000000 31C0                    	xor eax,eax
    96                                  	
    97                                  	;cpuid
    98 00000002 0F31                    	rdtsc
    99                                  
   100 00000004 8915[6F000000]          	mov [CHval],edx
   101 0000000A A3[73000000]            	mov [CLval],eax
   102                                  
   103                                  	;b
   104 0000000F B802000000              	mov eax,2
   105 00000014 50                          push eax
   106                                  
   107                                  	;N
   108 00000015 B804000000              	mov eax,4
   109 0000001A 50                      	push eax
   110                                  
   111                                  	;D
   112 0000001B B8[77010000]            	mov eax,DD
   113 00000020 50                      	push eax
   114                                  
   115                                  	;C
   116 00000021 B8[37010000]            	mov eax,CC
   117 00000026 50                      	push eax
   118                                  
   119                                  	;B
   120 00000027 B8[F7000000]            	mov eax,BB
   121 0000002C 50                      	push eax
   122                                  
   123                                  	;A
   124 0000002D B8[B7000000]            	mov eax,AA
   125 00000032 50                      	push eax
   126                                  
   127 00000033 E8B8000000              	call mult_block_2d
   128                                  
   129                                  print_timer:
   130                                  	;;getting later time
   131                                  
   132 00000038 31C0                    	xor eax,eax
   133                                  	;cpuid
   134 0000003A 0F31                    	rdtsc
   135                                  
   136 0000003C 2B05[73000000]          	sub eax,[CLval]
   137 00000042 2B15[6F000000]          	sub edx,[CHval]
   138                                  
   139 00000048 50                      	push eax
   140 00000049 52                      	push edx
   141 0000004A 68[52000000]            	push format3
   142 0000004F E8(00000000)            	call printf
   143                                  
   144                                  	;; print the matrix C
   145                                  
   146 00000054 B804000000              	mov eax,4
   147 00000059 A3[93000000]            	mov [lop_i],eax
   148                                  
   149 0000005E BB00000000              	mov ebx,0
   150 00000063 891D[77000000]          	mov [loop_i],ebx
   151 00000069 891D[7B000000]          	mov [loop_j],ebx
   152                                  
   153                                  pl1:
   154                                  
   155                                  pl2:
   156                                  
   157                                  	;; print to screen
   158                                  
   159 0000006F 8B0D[77000000]          	mov ecx,[loop_i]
   160 00000075 0FAF0D[93000000]        	imul ecx,[lop_i]
   161 0000007C 030D[7B000000]          	add ecx,[loop_j]
   162 00000082 69C904000000            	imul ecx,4
   163 00000088 81C1[37010000]          	add ecx,CC
   164                                  	
   165 0000008E 8B01                    	mov eax,[ecx]
   166 00000090 50                      	push eax
   167 00000091 68[46000000]            	push format
   168 00000096 E8(00000000)            	call printf
   169                                  
   170                                  	;;end of print
   171                                  
   172                                  	;update
   173                                  	
   174 0000009B 8B1D[7B000000]          	mov ebx,[loop_j]
   175 000000A1 81C301000000            	add ebx,1
   176 000000A7 891D[7B000000]          	mov [loop_j],ebx
   177                                  
   178 000000AD 3B1D[93000000]          	cmp ebx,[lop_i]
   179 000000B3 7CBA                    	jl pl2
   180                                  
   181                                  pl2_out:
   182                                  
   183                                  	;new line print
   184                                  
   185 000000B5 68[4D000000]            	push format2
   186 000000BA E8(00000000)            	call printf
   187                                  	;;
   188                                  
   189 000000BF BB00000000              	mov ebx,0
   190 000000C4 891D[7B000000]          	mov [loop_j],ebx
   191                                  
   192 000000CA 8B1D[77000000]          	mov ebx,[loop_i]
   193 000000D0 81C301000000            	add ebx,1
   194 000000D6 891D[77000000]          	mov [loop_i],ebx
   195                                  
   196 000000DC 3B1D[93000000]          	cmp ebx,[lop_i]
   197 000000E2 7C8B                    	jl pl1
   198                                  
   199                                  pl1_out:
   200                                  
   201                                  	;; end of print bye
   202                                  
   203 000000E4 B801000000              	mov eax,1
   204 000000E9 BB00000000              	mov ebx,0
   205 000000EE CD80                    	int 80h
   206                                  
   207                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   208                                  
   209                                  mult_block_2d:
   210                                  
   211                                  	;the params are A[],B[],C[],D[],N,b
   212                                  	; A,B are the ip C is the OP
   213                                  	; D is the dummy 
   214                                  	; N is the dimension
   215                                  	; b is the block parameter
   216                                  
   217 000000F0 8B442404                	mov eax,[esp+4]
   218 000000F4 A3[9F000000]            	mov [Av],eax
   219                                  
   220 000000F9 8B442408                	mov eax,[esp+8]
   221 000000FD A3[A3000000]            	mov [Bv],eax
   222                                  
   223 00000102 8B44240C                	mov eax,[esp+12]
   224 00000106 A3[A7000000]            	mov [Cv],eax
   225                                  
   226 0000010B 8B442410                	mov eax,[esp+16]
   227 0000010F A3[AB000000]            	mov [Dv],eax
   228                                  
   229 00000114 8B442414                	mov eax,[esp+20]
   230 00000118 A3[AF000000]            	mov [Nval],eax
   231                                  
   232 0000011D 8B442418                	mov eax,[esp+24]
   233 00000121 A3[B3000000]            	mov [Bval],eax
   234                                  
   235 00000126 A1[AF000000]            	mov eax,[Nval]
   236 0000012B 8B1D[B3000000]          	mov ebx,[Bval]
   237 00000131 F7F3                    	div ebx
   238                                  
   239 00000133 81FA00000000            	cmp edx,0
   240 00000139 0F8539010000            	jne exit_error_noerror
   241                                  
   242                                  	;use lop_i,lop_j,lop_k
   243                                  	;ind ia ja ib jb ic jc id jd
   244                                  	
   245 0000013F B800000000              	mov eax,0
   246 00000144 A3[93000000]            	mov [lop_i],eax
   247 00000149 A3[97000000]            	mov [lop_j],eax
   248                                  
   249                                  
   250                                  l1:
   251                                  	
   252                                  l2:
   253 0000014E B800000000              	mov eax,0
   254 00000153 A3[9B000000]            	mov [lop_k],eax
   255                                  	
   256                                  l3:
   257                                  	
   258                                  	;;mult here
   259                                  	
   260                                  	;jc
   261 00000158 A1[9B000000]            	mov eax,[lop_k]
   262 0000015D 50                      	push eax
   263                                  
   264                                  	;ic
   265 0000015E B800000000              	mov eax,0
   266 00000163 50                      	push eax
   267                                  
   268                                  	;Wid
   269 00000164 A1[AF000000]            	mov eax,[Nval]
   270 00000169 50                      	push eax
   271                                  
   272                                  	;jb
   273 0000016A A1[97000000]            	mov eax,[lop_j]
   274 0000016F 50                      	push eax
   275                                  
   276                                  	;ib
   277 00000170 A1[9B000000]            	mov eax,[lop_k]
   278 00000175 50                      	push eax
   279                                  
   280                                  	;ja
   281 00000176 A1[9B000000]            	mov eax,[lop_k]
   282 0000017B 50                      	push eax
   283                                  
   284                                  	;ia
   285 0000017C A1[93000000]            	mov eax,[lop_i]
   286 00000181 50                      	push eax
   287                                  
   288                                  	;C
   289 00000182 A1[AB000000]            	mov eax,[Dv]
   290 00000187 50                      	push eax
   291                                  
   292                                  	;n
   293 00000188 A1[B3000000]            	mov eax,[Bval]
   294 0000018D 50                      	push eax
   295                                  
   296                                  	;b
   297 0000018E A1[A3000000]            	mov eax,[Bv]
   298 00000193 50                      	push eax
   299                                  
   300                                  	;a
   301 00000194 A1[9F000000]            	mov eax,[Av]
   302 00000199 50                      	push eax
   303                                  
   304                                  	;; call the function
   305 0000019A E8DA000000              	call mult_mat_2d
   306                                  
   307                                  	;; mult ends
   308                                  
   309 0000019F 58                      	pop eax
   310 000001A0 58                      	pop eax	
   311 000001A1 58                      	pop eax
   312 000001A2 58                      	pop eax	
   313 000001A3 58                      	pop eax	
   314 000001A4 58                      	pop eax	
   315 000001A5 58                      	pop eax	
   316 000001A6 58                      	pop eax	
   317 000001A7 58                      	pop eax	
   318 000001A8 58                      	pop eax	
   319 000001A9 58                      	pop eax	
   320                                  	
   321                                  	;loop management
   322 000001AA A1[9B000000]            	mov eax,[lop_k]
   323 000001AF 0305[B3000000]          	add eax,[Bval]
   324 000001B5 A3[9B000000]            	mov [lop_k],eax
   325                                  
   326 000001BA 3B05[AF000000]          	cmp eax,[Nval]
   327 000001C0 7C96                    	jl l3
   328                                  
   329                                  l3_out:
   330                                  
   331                                  	;; add ops here
   332                                  	
   333 000001C2 B800000000              	mov eax,0
   334 000001C7 A3[9B000000]            	mov [lop_k],eax
   335                                  
   336                                  l4:
   337                                  
   338                                  	;; push ops
   339                                  
   340                                  	;jc
   341 000001CC A1[97000000]            	mov eax,[lop_j]
   342 000001D1 50                      	push eax
   343                                  
   344                                  	;ic
   345 000001D2 A1[93000000]            	mov eax,[lop_i]
   346 000001D7 50                      	push eax
   347                                  
   348                                  	;Wid
   349 000001D8 A1[AF000000]            	mov eax,[Nval]
   350 000001DD 50                      	push eax
   351                                  
   352                                  	;jb
   353 000001DE A1[97000000]            	mov eax,[lop_j]
   354 000001E3 50                      	push eax
   355                                  
   356                                  	;ib
   357 000001E4 A1[93000000]            	mov eax,[lop_i]
   358 000001E9 50                      	push eax
   359                                  
   360                                  	;ja
   361 000001EA A1[9B000000]            	mov eax,[lop_k]
   362 000001EF 50                      	push eax
   363                                  
   364                                  	;ia
   365 000001F0 B800000000              	mov eax,0
   366 000001F5 50                      	push eax
   367                                  
   368                                  	;C
   369 000001F6 A1[A7000000]            	mov eax,[Cv]
   370 000001FB 50                      	push eax
   371                                  
   372                                  	;n
   373 000001FC A1[B3000000]            	mov eax,[Bval]
   374 00000201 50                      	push eax
   375                                  
   376                                  	;b
   377 00000202 A1[A7000000]            	mov eax,[Cv]
   378 00000207 50                      	push eax
   379                                  
   380                                  	;a
   381 00000208 A1[AB000000]            	mov eax,[Dv]
   382 0000020D 50                      	push eax
   383                                  
   384                                  	;; call
   385 0000020E E8BE010000              	call add_mat_2d
   386                                  
   387                                  	;;end of pushops
   388                                  	
   389 00000213 58                      	pop eax
   390 00000214 58                      	pop eax	
   391 00000215 58                      	pop eax
   392 00000216 58                      	pop eax	
   393 00000217 58                      	pop eax	
   394 00000218 58                      	pop eax	
   395 00000219 58                      	pop eax	
   396 0000021A 58                      	pop eax	
   397 0000021B 58                      	pop eax	
   398 0000021C 58                      	pop eax	
   399 0000021D 58                      	pop eax	
   400                                  
   401 0000021E A1[9B000000]            	mov eax,[lop_k]
   402 00000223 0305[B3000000]          	add eax,[Bval]
   403 00000229 A3[9B000000]            	mov [lop_k],eax
   404                                  
   405 0000022E 3B05[AF000000]          	cmp eax,[Nval]
   406 00000234 7C96                    	jl l4
   407                                  
   408                                  l4_out:
   409                                  
   410                                  	;; end of add ops
   411                                  
   412                                  
   413                                  
   414 00000236 A1[97000000]            	mov eax,[lop_j]
   415 0000023B 0305[B3000000]          	add eax,[Bval]
   416 00000241 A3[97000000]            	mov [lop_j],eax
   417                                  
   418 00000246 3B05[AF000000]          	cmp eax,[Nval]
   419 0000024C 0F8CFCFEFFFF            	jl l2
   420                                  
   421                                  l2_out:
   422                                  	
   423 00000252 B800000000              	mov eax,0
   424 00000257 A3[97000000]            	mov [lop_j],eax
   425                                  
   426 0000025C A1[93000000]            	mov eax,[lop_i]
   427 00000261 0305[B3000000]          	add eax,[Bval]
   428 00000267 A3[93000000]            	mov [lop_i],eax
   429                                  
   430 0000026C 3B05[AF000000]          	cmp eax,[Nval]
   431 00000272 0F8CD6FEFFFF            	jl l1
   432                                  
   433                                  l1_out:
   434                                  	
   435                                  
   436                                  exit_error_noerror:
   437 00000278 C3                      	ret;;
   438                                  
   439                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   440                                  
   441                                  mult_mat_2d:
   442                                  	
   443                                  	;args a[],b[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   444                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   445                                  	;Wid is the Width of parent matrix
   446                                  	;Work under assumption that it is a square
   447                                  	; A,B,C are the references of parent matrices only
   448                                  	
   449 00000279 8B44240C                	mov eax,[esp+12]
   450 0000027D 2D01000000              	sub eax,1
   451                                  
   452 00000282 A3[77000000]            	mov dword [loop_i],eax
   453 00000287 A3[7B000000]            	mov dword [loop_j],eax
   454                                  	;done with setting loop variables
   455                                  	;push and pop eax for counter ops
   456                                  	
   457                                  	;find offset
   458                                  	
   459                                  	;;A's offset
   460 0000028C 8B542414                	mov edx,[esp+20]
   461 00000290 81EA01000000            	sub edx,1
   462 00000296 0FAF542424              	imul edx,[esp+36]
   463 0000029B 03542418                	add edx,[esp+24]
   464 0000029F 69D204000000            	imul edx,4
   465 000002A5 8915[87000000]          	mov [aOff],edx
   466                                  	
   467                                  	;;B's offset
   468 000002AB 8B54241C                	mov edx,[esp+28]
   469 000002AF 81EA01000000            	sub edx,1
   470 000002B5 0FAF542424              	imul edx,[esp+36]
   471 000002BA 03542420                	add edx,[esp+32]
   472 000002BE 69D204000000            	imul edx,4
   473 000002C4 8915[8B000000]          	mov [bOff],edx
   474                                  	
   475                                  	;;C's offset
   476 000002CA 8B542428                	mov edx,[esp+40]
   477 000002CE 81EA01000000            	sub edx,1
   478 000002D4 0FAF542424              	imul edx,[esp+36]
   479 000002D9 0354242C                	add edx,[esp+44]
   480 000002DD 69D204000000            	imul edx,4
   481 000002E3 8915[8F000000]          	mov [cOff],edx
   482                                  	
   483                                  out_1:
   484                                  
   485                                  	;outer loop
   486                                  out_2:
   487                                  
   488                                  	;inner loop
   489                                  
   490                                  	;current B off
   491 000002E9 A1[7B000000]            	mov eax,[loop_j]
   492 000002EE 69C004000000            	imul eax,4
   493 000002F4 03442408                	add eax,[esp+8]
   494 000002F8 0305[8B000000]          	add eax,[bOff]
   495 000002FE A3[83000000]            	mov dword [bVec],eax
   496                                  
   497                                  	;current A off
   498 00000303 A1[77000000]            	mov eax,[loop_i]
   499 00000308 0FAF442424              	imul eax,[esp+36]
   500 0000030D 69C004000000            	imul eax,4
   501 00000313 03442404                	add eax,[esp+4]
   502 00000317 0305[87000000]          	add eax,[aOff]
   503 0000031D A3[7F000000]            	mov dword [aVec],eax
   504                                  	
   505                                  	;;;row multiplication ops here...
   506                                  	
   507 00000322 BB00000000              	mov ebx,0
   508 00000327 8B4C240C                	mov ecx,[esp+12]
   509 0000032B 81E901000000            	sub ecx,1
   510                                  	
   511                                  out_3:	
   512 00000331 89C8                    	mov eax,ecx
   513 00000333 0FAF442424              	imul eax,[esp+36]
   514 00000338 69C004000000            	imul eax,4
   515 0000033E 0305[83000000]          	add dword eax,[bVec]
   516 00000344 8B10                    	mov edx,[eax]
   517                                  
   518 00000346 A1[7F000000]            	mov eax,[aVec]
   519 0000034B 51                      	push ecx
   520 0000034C 69C904000000            	imul ecx,4
   521 00000352 01C8                    	add eax,ecx
   522 00000354 59                      	pop ecx
   523                                  
   524 00000355 0FAF10                  	imul edx,[eax]
   525 00000358 01D3                    	add ebx,edx
   526 0000035A 81E901000000            	sub ecx,1
   527                                  	
   528 00000360 81F900000000            	cmp ecx,0
   529 00000366 7DC9                    	jge out_3
   530                                  
   531                                  out_3_exit:
   532                                  	
   533                                      ;;;end of row op...
   534                                  	
   535 00000368 89DA                    	mov edx,ebx
   536                                  
   537                                  	;writing result of C
   538 0000036A A1[77000000]            	mov eax,[loop_i]
   539 0000036F 0FAF442424              	imul eax,[esp+36]
   540 00000374 8B1D[7B000000]          	mov ebx,[loop_j]
   541 0000037A 01D8                    	add eax,ebx
   542 0000037C 69C004000000            	imul eax,4
   543 00000382 0305[8F000000]          	add eax,[cOff]
   544 00000388 03442410                	add eax,[esp+16]
   545 0000038C 8910                    	mov [eax],edx
   546                                  	
   547 0000038E A1[7B000000]            	mov eax,[loop_j]
   548 00000393 2D01000000              	sub eax,1
   549 00000398 A3[7B000000]            	mov dword [loop_j],eax
   550                                  
   551 0000039D 3D00000000              	cmp eax,0
   552                                  
   553 000003A2 0F8D41FFFFFF            	jge out_2
   554                                  
   555                                  out_2_end:
   556                                  
   557                                  
   558 000003A8 8B44240C                	mov eax,[esp+12]
   559 000003AC 2D01000000              	sub eax,1
   560 000003B1 A3[7B000000]            	mov dword [loop_j],eax
   561                                  
   562 000003B6 A1[77000000]            	mov eax,[loop_i]
   563 000003BB 2D01000000              	sub eax,1
   564 000003C0 A3[77000000]            	mov [loop_i],eax
   565                                  
   566 000003C5 3D00000000              	cmp eax,0
   567                                  
   568 000003CA 0F8D19FFFFFF            	jge out_1
   569                                  
   570                                  out_1_end:
   571                                  
   572 000003D0 C3                      	ret;
   573                                  	;end of the procedure
   574                                  
   575                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   576                                  
   577                                  add_mat_2d:
   578                                  	;arr A[],B[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   579                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   580                                  	;Wid is the Width of parent matrix
   581                                  	;Work under assumption that it is a square
   582                                  	; A,B,C are the references of parent matrices only
   583                                  
   584 000003D1 8B44240C                	mov eax,[esp+12]
   585 000003D5 2D01000000              	sub eax,1
   586                                  
   587 000003DA A3[77000000]            	mov [loop_i],eax
   588 000003DF A3[7B000000]            	mov [loop_j],eax
   589                                  
   590                                  out_1a:
   591                                  	
   592                                  out_2a:
   593                                  	
   594                                  	;;addition logic
   595                                  	
   596                                  	;find offset
   597                                  	
   598                                  	;;A's offset
   599 000003E4 8B542414                	mov edx,[esp+20]
   600 000003E8 81EA01000000            	sub edx,1
   601 000003EE 0FAF542424              	imul edx,[esp+36]
   602 000003F3 03542418                	add edx,[esp+24]
   603 000003F7 69D204000000            	imul edx,4
   604 000003FD 8915[87000000]          	mov [aOff],edx
   605                                  	
   606                                  	;;B's offset
   607 00000403 8B54241C                	mov edx,[esp+28]
   608 00000407 81EA01000000            	sub edx,1
   609 0000040D 0FAF542424              	imul edx,[esp+36]
   610 00000412 03542420                	add edx,[esp+32]
   611 00000416 69D204000000            	imul edx,4
   612 0000041C 8915[8B000000]          	mov [bOff],edx
   613                                  	
   614                                  	;;C's offset
   615 00000422 8B542428                	mov edx,[esp+40]
   616 00000426 81EA01000000            	sub edx,1
   617 0000042C 0FAF542424              	imul edx,[esp+36]
   618 00000431 0354242C                	add edx,[esp+44]
   619 00000435 69D204000000            	imul edx,4
   620 0000043B 8915[8F000000]          	mov [cOff],edx
   621                                  	
   622                                  	;common offset
   623 00000441 8B1D[77000000]          	mov ebx,[loop_i]
   624 00000447 0FAF5C2424              	imul ebx,[esp+36]
   625 0000044C 031D[7B000000]          	add ebx,[loop_j]
   626 00000452 69DB04000000            	imul ebx,4
   627                                  
   628                                  	;get B[]
   629 00000458 8B4C2408                	mov ecx,[esp+8]
   630 0000045C 01D9                    	add ecx,ebx
   631 0000045E 030D[8B000000]          	add ecx,[bOff]
   632 00000464 8B01                    	mov eax,[ecx]
   633                                  
   634                                  	;add A[]
   635 00000466 8B4C2404                	mov ecx,[esp+4]
   636 0000046A 01D9                    	add ecx,ebx
   637 0000046C 030D[87000000]          	add ecx,[aOff]
   638 00000472 0301                    	add eax,[ecx]
   639                                  
   640                                  	;store to C[]
   641 00000474 8B4C2410                	mov ecx,[esp+16]
   642 00000478 01D9                    	add ecx,ebx
   643 0000047A 030D[8F000000]          	add ecx,[cOff]
   644 00000480 8901                    	mov [ecx],eax
   645                                  
   646                                  	;;end of addition
   647                                  
   648 00000482 A1[7B000000]            	mov eax,[loop_j]
   649 00000487 2D01000000              	sub eax,1
   650 0000048C A3[7B000000]            	mov [loop_j],eax
   651                                  
   652 00000491 3D00000000              	cmp eax,0
   653 00000496 0F8D4DFEFFFF            	jge out_2
   654                                  
   655                                  out_2a_end:
   656                                  	
   657 0000049C 8B44240C                	mov eax,[esp+12]
   658 000004A0 2D01000000              	sub eax,1
   659 000004A5 A3[7B000000]            	mov [loop_j],eax
   660                                  
   661 000004AA A1[77000000]            	mov eax,[loop_i]
   662 000004AF 2D01000000              	sub eax,1
   663 000004B4 A3[77000000]            	mov [loop_i],eax
   664                                  
   665 000004B9 3D00000000              	cmp eax,0
   666 000004BE 0F8D25FEFFFF            	jge out_1
   667                                  
   668                                  out_1a_end:
   669                                  
   670 000004C4 C3                      	ret;
   671                                  	;end of addition
   672                                  
   673                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
