     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  SECTION .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21                                  
    22 00000046 207C2025642000          	format: db " | %d ",0
    23 0000004D 207C200A00              	format2: db " | ",10,0
    24 00000052 2074696D652074616B-     	format3: db " time taken %lld cycles .. ",10,0
    25 0000005B 656E20256C6C642063-
    26 00000064 79636C6573202E2E20-
    27 0000006D 0A00               
    28                                  
    29 0000006F 00000000                	CHval: dd 0
    30 00000073 00000000                	CLval: dd 0
    31                                  
    32 00000077 00000000                	loop_i: dd 0
    33 0000007B 00000000                	loop_j: dd 0
    34                                  	
    35 0000007F 00000000                	aVec: dd 0
    36 00000083 00000000                	bVec: dd 0
    37                                  	
    38 00000087 00000000                	aOff: dd 0
    39 0000008B 00000000                	bOff: dd 0
    40 0000008F 00000000                	cOff: dd 0
    41                                  
    42 00000093 00000000                	lop_i: dd 0
    43 00000097 00000000                	lop_j: dd 0
    44 0000009B 00000000                	lop_k: dd 0
    45                                  	
    46 0000009F 00000000                	Av: dd 0
    47 000000A3 00000000                	Bv: dd 0
    48 000000A7 00000000                	Cv: dd 0
    49 000000AB 00000000                	Dv: dd 0
    50 000000AF 00000000                	Nval: dd 0
    51 000000B3 00000000                	Bval: dd 0
    52                                  
    53 000000B7 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    54 000000C0 000000040000000500-
    55 000000C9 000006000000070000-
    56 000000D2 000800000009000000-
    57 000000DB 0A0000000B0000000C-
    58 000000E4 0000000D0000000E00-
    59 000000ED 00000F000000100000-
    60 000000F6 00                 
    61 000000F7 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    62 00000100 000000040000000500-
    63 00000109 000006000000070000-
    64 00000112 000800000009000000-
    65 0000011B 0A0000000B0000000C-
    66 00000124 0000000D0000000E00-
    67 0000012D 00000F000000100000-
    68 00000136 00                 
    69                                  
    70 00000137 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    71 00000140 000000000000000000-
    72 00000149 000000000000000000-
    73 00000152 000000000000000000-
    74 0000015B 000000000000000000-
    75 00000164 000000000000000000-
    76 0000016D 000000000000000000-
    77 00000176 00                 
    78                                  
    79 00000177 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    80 00000180 000000000000000000-
    81 00000189 000000000000000000-
    82 00000192 000000000000000000-
    83 0000019B 000000000000000000-
    84 000001A4 000000000000000000-
    85 000001AD 000000000000000000-
    86 000001B6 00                 
    87                                  
    88                                  SECTION .text
    89                                  	global main
    90                                  	extern printf
    91                                  
    92                                  main:
    93                                  
    94                                  	;getting initial time
    95 00000000 31C0                    	xor eax,eax
    96                                  	
    97 00000002 0FA2                    	cpuid
    98 00000004 0F31                    	rdtsc
    99                                  
   100 00000006 8915[6F000000]          	mov [CHval],edx
   101 0000000C A3[73000000]            	mov [CLval],eax
   102                                  
   103                                  	;b
   104 00000011 B802000000              	mov eax,2
   105 00000016 50                          push eax
   106                                  
   107                                  	;N
   108 00000017 B804000000              	mov eax,4
   109 0000001C 50                      	push eax
   110                                  
   111                                  	;D
   112 0000001D B8[77010000]            	mov eax,DD
   113 00000022 50                      	push eax
   114                                  
   115                                  	;C
   116 00000023 B8[37010000]            	mov eax,CC
   117 00000028 50                      	push eax
   118                                  
   119                                  	;B
   120 00000029 B8[F7000000]            	mov eax,BB
   121 0000002E 50                      	push eax
   122                                  
   123                                  	;A
   124 0000002F B8[B7000000]            	mov eax,AA
   125 00000034 50                      	push eax
   126                                  
   127 00000035 E8B1000000              	call mult_block_2d
   128                                  
   129                                  print_timer:
   130                                  	;;getting later time
   131                                  
   132 0000003A 31C0                    	xor eax,eax
   133                                  	
   134 0000003C 0FA2                    	cpuid
   135 0000003E 0F31                    	rdtsc
   136                                  
   137 00000040 2B05[73000000]          	sub eax,[CLval]
   138 00000046 2B15[6F000000]          	sub edx,[CHval]
   139                                  
   140 0000004C 50                      	push eax
   141 0000004D 52                      	push edx
   142 0000004E 68[52000000]            	push format3
   143 00000053 E8(00000000)            	call printf
   144                                  
   145                                  	;; print the matrix C
   146                                  
   147 00000058 B804000000              	mov eax,4
   148 0000005D A3[93000000]            	mov [lop_i],eax
   149                                  
   150 00000062 BB00000000              	mov ebx,0
   151 00000067 891D[77000000]          	mov [loop_i],ebx
   152 0000006D 891D[7B000000]          	mov [loop_j],ebx
   153                                  
   154                                  pl1:
   155                                  
   156                                  pl2:
   157                                  
   158                                  	;; print to screen
   159                                  
   160 00000073 8B0D[77000000]          	mov ecx,[loop_i]
   161 00000079 0FAF0D[93000000]        	imul ecx,[lop_i]
   162 00000080 030D[7B000000]          	add ecx,[loop_j]
   163 00000086 6BC904                  	imul ecx,4
   164 00000089 81C1[37010000]          	add ecx,CC
   165                                  	
   166 0000008F 8B01                    	mov eax,[ecx]
   167 00000091 50                      	push eax
   168 00000092 68[46000000]            	push format
   169 00000097 E8(00000000)            	call printf
   170                                  
   171                                  	;;end of print
   172                                  
   173                                  	;update
   174                                  	
   175 0000009C 8B1D[7B000000]          	mov ebx,[loop_j]
   176 000000A2 83C301                  	add ebx,1
   177 000000A5 891D[7B000000]          	mov [loop_j],ebx
   178                                  
   179 000000AB 3B1D[93000000]          	cmp ebx,[lop_i]
   180 000000B1 7CC0                    	jl pl2
   181                                  
   182                                  pl2_out:
   183                                  
   184                                  	;new line print
   185                                  
   186 000000B3 68[4D000000]            	push format2
   187 000000B8 E8(00000000)            	call printf
   188                                  	;;
   189                                  
   190 000000BD BB00000000              	mov ebx,0
   191 000000C2 891D[7B000000]          	mov [loop_j],ebx
   192                                  
   193 000000C8 8B1D[77000000]          	mov ebx,[loop_i]
   194 000000CE 83C301                  	add ebx,1
   195 000000D1 891D[77000000]          	mov [loop_i],ebx
   196                                  
   197 000000D7 3B1D[93000000]          	cmp ebx,[lop_i]
   198 000000DD 7C94                    	jl pl1
   199                                  
   200                                  pl1_out:
   201                                  
   202                                  	;; end of print bye
   203                                  
   204 000000DF B801000000              	mov eax,1
   205 000000E4 BB00000000              	mov ebx,0
   206 000000E9 CD80                    	int 80h
   207                                  
   208                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   209                                  
   210                                  mult_block_2d:
   211                                  
   212                                  	;the params are A[],B[],C[],D[],N,b
   213                                  	; A,B are the ip C is the OP
   214                                  	; D is the dummy 
   215                                  	; N is the dimension
   216                                  	; b is the block parameter
   217                                  
   218 000000EB 8B442404                	mov eax,[esp+4]
   219 000000EF A3[9F000000]            	mov [Av],eax
   220                                  
   221 000000F4 8B442408                	mov eax,[esp+8]
   222 000000F8 A3[A3000000]            	mov [Bv],eax
   223                                  
   224 000000FD 8B44240C                	mov eax,[esp+12]
   225 00000101 A3[A7000000]            	mov [Cv],eax
   226                                  
   227 00000106 8B442410                	mov eax,[esp+16]
   228 0000010A A3[AB000000]            	mov [Dv],eax
   229                                  
   230 0000010F 8B442414                	mov eax,[esp+20]
   231 00000113 A3[AF000000]            	mov [Nval],eax
   232                                  
   233 00000118 8B442418                	mov eax,[esp+24]
   234 0000011C A3[B3000000]            	mov [Bval],eax
   235                                  
   236 00000121 A1[AF000000]            	mov eax,[Nval]
   237 00000126 8B0D[B3000000]          	mov ecx,[Bval]
   238 0000012C BA00000000              	mov edx,0
   239                                  	;donr specifically
   240 00000131 F7F1                    	div ecx
   241                                  
   242 00000133 83FA00                  	cmp edx,0
   243 00000136 0F8539010000            	jne exit_error_noerror
   244                                  
   245                                  	;use lop_i,lop_j,lop_k
   246                                  	;ind ia ja ib jb ic jc id jd
   247                                  	
   248 0000013C B800000000              	mov eax,0
   249 00000141 A3[93000000]            	mov [lop_i],eax
   250 00000146 A3[97000000]            	mov [lop_j],eax
   251                                  
   252                                  
   253                                  l1:
   254                                  	
   255                                  l2:
   256 0000014B B800000000              	mov eax,0
   257 00000150 A3[9B000000]            	mov [lop_k],eax
   258                                  	
   259                                  l3:
   260                                  	
   261                                  	;;mult here
   262                                  	
   263                                  	;jc
   264 00000155 A1[9B000000]            	mov eax,[lop_k]
   265 0000015A 50                      	push eax
   266                                  
   267                                  	;ic
   268 0000015B B800000000              	mov eax,0
   269 00000160 50                      	push eax
   270                                  
   271                                  	;Wid
   272 00000161 A1[AF000000]            	mov eax,[Nval]
   273 00000166 50                      	push eax
   274                                  
   275                                  	;jb
   276 00000167 A1[97000000]            	mov eax,[lop_j]
   277 0000016C 50                      	push eax
   278                                  
   279                                  	;ib
   280 0000016D A1[9B000000]            	mov eax,[lop_k]
   281 00000172 50                      	push eax
   282                                  
   283                                  	;ja
   284 00000173 A1[9B000000]            	mov eax,[lop_k]
   285 00000178 50                      	push eax
   286                                  
   287                                  	;ia
   288 00000179 A1[93000000]            	mov eax,[lop_i]
   289 0000017E 50                      	push eax
   290                                  
   291                                  	;C
   292 0000017F A1[AB000000]            	mov eax,[Dv]
   293 00000184 50                      	push eax
   294                                  
   295                                  	;n
   296 00000185 A1[B3000000]            	mov eax,[Bval]
   297 0000018A 50                      	push eax
   298                                  
   299                                  	;b
   300 0000018B A1[A3000000]            	mov eax,[Bv]
   301 00000190 50                      	push eax
   302                                  
   303                                  	;a
   304 00000191 A1[9F000000]            	mov eax,[Av]
   305 00000196 50                      	push eax
   306                                  
   307                                  	;; call the function
   308 00000197 E8DA000000              	call mult_mat_2d
   309                                  
   310                                  	;; mult ends
   311                                  
   312 0000019C 58                      	pop eax
   313 0000019D 58                      	pop eax	
   314 0000019E 58                      	pop eax
   315 0000019F 58                      	pop eax	
   316 000001A0 58                      	pop eax	
   317 000001A1 58                      	pop eax	
   318 000001A2 58                      	pop eax	
   319 000001A3 58                      	pop eax	
   320 000001A4 58                      	pop eax	
   321 000001A5 58                      	pop eax	
   322 000001A6 58                      	pop eax	
   323                                  	
   324                                  	;loop management
   325 000001A7 A1[9B000000]            	mov eax,[lop_k]
   326 000001AC 0305[B3000000]          	add eax,[Bval]
   327 000001B2 A3[9B000000]            	mov [lop_k],eax
   328                                  
   329 000001B7 3B05[AF000000]          	cmp eax,[Nval]
   330 000001BD 7C96                    	jl l3
   331                                  
   332                                  l3_out:
   333                                  
   334                                  	;; add ops here
   335                                  	
   336 000001BF B800000000              	mov eax,0
   337 000001C4 A3[9B000000]            	mov [lop_k],eax
   338                                  
   339                                  l4:
   340                                  
   341                                  	;; push ops
   342                                  
   343                                  	;jc
   344 000001C9 A1[97000000]            	mov eax,[lop_j]
   345 000001CE 50                      	push eax
   346                                  
   347                                  	;ic
   348 000001CF A1[93000000]            	mov eax,[lop_i]
   349 000001D4 50                      	push eax
   350                                  
   351                                  	;Wid
   352 000001D5 A1[AF000000]            	mov eax,[Nval]
   353 000001DA 50                      	push eax
   354                                  
   355                                  	;jb
   356 000001DB A1[97000000]            	mov eax,[lop_j]
   357 000001E0 50                      	push eax
   358                                  
   359                                  	;ib
   360 000001E1 A1[93000000]            	mov eax,[lop_i]
   361 000001E6 50                      	push eax
   362                                  
   363                                  	;ja
   364 000001E7 A1[9B000000]            	mov eax,[lop_k]
   365 000001EC 50                      	push eax
   366                                  
   367                                  	;ia
   368 000001ED B800000000              	mov eax,0
   369 000001F2 50                      	push eax
   370                                  
   371                                  	;C
   372 000001F3 A1[A7000000]            	mov eax,[Cv]
   373 000001F8 50                      	push eax
   374                                  
   375                                  	;n
   376 000001F9 A1[B3000000]            	mov eax,[Bval]
   377 000001FE 50                      	push eax
   378                                  
   379                                  	;b
   380 000001FF A1[A7000000]            	mov eax,[Cv]
   381 00000204 50                      	push eax
   382                                  
   383                                  	;a
   384 00000205 A1[AB000000]            	mov eax,[Dv]
   385 0000020A 50                      	push eax
   386                                  
   387                                  	;; call
   388 0000020B E888010000              	call add_mat_2d
   389                                  
   390                                  	;;end of pushops
   391                                  	
   392 00000210 58                      	pop eax
   393 00000211 58                      	pop eax	
   394 00000212 58                      	pop eax
   395 00000213 58                      	pop eax	
   396 00000214 58                      	pop eax	
   397 00000215 58                      	pop eax	
   398 00000216 58                      	pop eax	
   399 00000217 58                      	pop eax	
   400 00000218 58                      	pop eax	
   401 00000219 58                      	pop eax	
   402 0000021A 58                      	pop eax	
   403                                  
   404 0000021B A1[9B000000]            	mov eax,[lop_k]
   405 00000220 0305[B3000000]          	add eax,[Bval]
   406 00000226 A3[9B000000]            	mov [lop_k],eax
   407                                  
   408 0000022B 3B05[AF000000]          	cmp eax,[Nval]
   409 00000231 7C96                    	jl l4
   410                                  
   411                                  l4_out:
   412                                  
   413                                  	;; end of add ops
   414                                  
   415                                  
   416                                  
   417 00000233 A1[97000000]            	mov eax,[lop_j]
   418 00000238 0305[B3000000]          	add eax,[Bval]
   419 0000023E A3[97000000]            	mov [lop_j],eax
   420                                  
   421 00000243 3B05[AF000000]          	cmp eax,[Nval]
   422 00000249 0F8CFCFEFFFF            	jl l2
   423                                  
   424                                  l2_out:
   425                                  	
   426 0000024F B800000000              	mov eax,0
   427 00000254 A3[97000000]            	mov [lop_j],eax
   428                                  
   429 00000259 A1[93000000]            	mov eax,[lop_i]
   430 0000025E 0305[B3000000]          	add eax,[Bval]
   431 00000264 A3[93000000]            	mov [lop_i],eax
   432                                  
   433 00000269 3B05[AF000000]          	cmp eax,[Nval]
   434 0000026F 0F8CD6FEFFFF            	jl l1
   435                                  
   436                                  l1_out:
   437                                  	
   438                                  
   439                                  exit_error_noerror:
   440 00000275 C3                      	ret;;
   441                                  
   442                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   443                                  
   444                                  mult_mat_2d:
   445                                  	
   446                                  	;args a[],b[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   447                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   448                                  	;Wid is the Width of parent matrix
   449                                  	;Work under assumption that it is a square
   450                                  	; A,B,C are the references of parent matrices only
   451                                  	
   452 00000276 8B44240C                	mov eax,[esp+12]
   453 0000027A 83E801                  	sub eax,1
   454                                  
   455 0000027D A3[77000000]            	mov dword [loop_i],eax
   456 00000282 A3[7B000000]            	mov dword [loop_j],eax
   457                                  	;done with setting loop variables
   458                                  	;push and pop eax for counter ops
   459                                  	
   460                                  	;find offset
   461                                  	
   462                                  	;;A's offset
   463 00000287 8B542414                	mov edx,[esp+20]
   464 0000028B 83EA01                  	sub edx,1
   465 0000028E 0FAF542424              	imul edx,[esp+36]
   466 00000293 03542418                	add edx,[esp+24]
   467 00000297 6BD204                  	imul edx,4
   468 0000029A 8915[87000000]          	mov [aOff],edx
   469                                  	
   470                                  	;;B's offset
   471 000002A0 8B54241C                	mov edx,[esp+28]
   472 000002A4 83EA01                  	sub edx,1
   473 000002A7 0FAF542424              	imul edx,[esp+36]
   474 000002AC 03542420                	add edx,[esp+32]
   475 000002B0 6BD204                  	imul edx,4
   476 000002B3 8915[8B000000]          	mov [bOff],edx
   477                                  	
   478                                  	;;C's offset
   479 000002B9 8B542428                	mov edx,[esp+40]
   480 000002BD 83EA01                  	sub edx,1
   481 000002C0 0FAF542424              	imul edx,[esp+36]
   482 000002C5 0354242C                	add edx,[esp+44]
   483 000002C9 6BD204                  	imul edx,4
   484 000002CC 8915[8F000000]          	mov [cOff],edx
   485                                  	
   486                                  out_1:
   487                                  
   488                                  	;outer loop
   489                                  out_2:
   490                                  
   491                                  	;inner loop
   492                                  
   493                                  	;current B off
   494 000002D2 A1[7B000000]            	mov eax,[loop_j]
   495 000002D7 6BC004                  	imul eax,4
   496 000002DA 03442408                	add eax,[esp+8]
   497 000002DE 0305[8B000000]          	add eax,[bOff]
   498 000002E4 A3[83000000]            	mov dword [bVec],eax
   499                                  
   500                                  	;current A off
   501 000002E9 A1[77000000]            	mov eax,[loop_i]
   502 000002EE 0FAF442424              	imul eax,[esp+36]
   503 000002F3 6BC004                  	imul eax,4
   504 000002F6 03442404                	add eax,[esp+4]
   505 000002FA 0305[87000000]          	add eax,[aOff]
   506 00000300 A3[7F000000]            	mov dword [aVec],eax
   507                                  	
   508                                  	;;;row multiplication ops here...
   509                                  	
   510 00000305 BB00000000              	mov ebx,0
   511 0000030A 8B4C240C                	mov ecx,[esp+12]
   512 0000030E 83E901                  	sub ecx,1
   513                                  	
   514                                  out_3:	
   515 00000311 89C8                    	mov eax,ecx
   516 00000313 0FAF442424              	imul eax,[esp+36]
   517 00000318 6BC004                  	imul eax,4
   518 0000031B 0305[83000000]          	add dword eax,[bVec]
   519 00000321 8B10                    	mov edx,[eax]
   520                                  
   521 00000323 A1[7F000000]            	mov eax,[aVec]
   522 00000328 51                      	push ecx
   523 00000329 6BC904                  	imul ecx,4
   524 0000032C 01C8                    	add eax,ecx
   525 0000032E 59                      	pop ecx
   526                                  
   527 0000032F 0FAF10                  	imul edx,[eax]
   528 00000332 01D3                    	add ebx,edx
   529 00000334 83E901                  	sub ecx,1
   530                                  	
   531 00000337 83F900                  	cmp ecx,0
   532 0000033A 7DD5                    	jge out_3
   533                                  
   534                                  out_3_exit:
   535                                  	
   536                                      ;;;end of row op...
   537                                  	
   538 0000033C 89DA                    	mov edx,ebx
   539                                  
   540                                  	;writing result of C
   541 0000033E A1[77000000]            	mov eax,[loop_i]
   542 00000343 0FAF442424              	imul eax,[esp+36]
   543 00000348 8B1D[7B000000]          	mov ebx,[loop_j]
   544 0000034E 01D8                    	add eax,ebx
   545 00000350 6BC004                  	imul eax,4
   546 00000353 0305[8F000000]          	add eax,[cOff]
   547 00000359 03442410                	add eax,[esp+16]
   548 0000035D 8910                    	mov [eax],edx
   549                                  	
   550 0000035F A1[7B000000]            	mov eax,[loop_j]
   551 00000364 83E801                  	sub eax,1
   552 00000367 A3[7B000000]            	mov dword [loop_j],eax
   553                                  
   554 0000036C 83F800                  	cmp eax,0
   555                                  
   556 0000036F 0F8D5DFFFFFF            	jge out_2
   557                                  
   558                                  out_2_end:
   559                                  
   560                                  
   561 00000375 8B44240C                	mov eax,[esp+12]
   562 00000379 83E801                  	sub eax,1
   563 0000037C A3[7B000000]            	mov dword [loop_j],eax
   564                                  
   565 00000381 A1[77000000]            	mov eax,[loop_i]
   566 00000386 83E801                  	sub eax,1
   567 00000389 A3[77000000]            	mov [loop_i],eax
   568                                  
   569 0000038E 83F800                  	cmp eax,0
   570                                  
   571 00000391 0F8D3BFFFFFF            	jge out_1
   572                                  
   573                                  out_1_end:
   574                                  
   575 00000397 C3                      	ret;
   576                                  	;end of the procedure
   577                                  
   578                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   579                                  
   580                                  add_mat_2d:
   581                                  	;arr A[],B[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   582                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   583                                  	;Wid is the Width of parent matrix
   584                                  	;Work under assumption that it is a square
   585                                  	; A,B,C are the references of parent matrices only
   586                                  
   587 00000398 8B44240C                	mov eax,[esp+12]
   588 0000039C 83E801                  	sub eax,1
   589                                  
   590 0000039F A3[77000000]            	mov [loop_i],eax
   591 000003A4 A3[7B000000]            	mov [loop_j],eax
   592                                  
   593                                  out_1a:
   594                                  	
   595                                  out_2a:
   596                                  	
   597                                  	;;addition logic
   598                                  	
   599                                  	;find offset
   600                                  	
   601                                  	;;A's offset
   602 000003A9 8B542414                	mov edx,[esp+20]
   603 000003AD 83EA01                  	sub edx,1
   604 000003B0 0FAF542424              	imul edx,[esp+36]
   605 000003B5 03542418                	add edx,[esp+24]
   606 000003B9 6BD204                  	imul edx,4
   607 000003BC 8915[87000000]          	mov [aOff],edx
   608                                  	
   609                                  	;;B's offset
   610 000003C2 8B54241C                	mov edx,[esp+28]
   611 000003C6 83EA01                  	sub edx,1
   612 000003C9 0FAF542424              	imul edx,[esp+36]
   613 000003CE 03542420                	add edx,[esp+32]
   614 000003D2 6BD204                  	imul edx,4
   615 000003D5 8915[8B000000]          	mov [bOff],edx
   616                                  	
   617                                  	;;C's offset
   618 000003DB 8B542428                	mov edx,[esp+40]
   619 000003DF 83EA01                  	sub edx,1
   620 000003E2 0FAF542424              	imul edx,[esp+36]
   621 000003E7 0354242C                	add edx,[esp+44]
   622 000003EB 6BD204                  	imul edx,4
   623 000003EE 8915[8F000000]          	mov [cOff],edx
   624                                  	
   625                                  	;common offset
   626 000003F4 8B1D[77000000]          	mov ebx,[loop_i]
   627 000003FA 0FAF5C2424              	imul ebx,[esp+36]
   628 000003FF 031D[7B000000]          	add ebx,[loop_j]
   629 00000405 6BDB04                  	imul ebx,4
   630                                  
   631                                  	;get B[]
   632 00000408 8B4C2408                	mov ecx,[esp+8]
   633 0000040C 01D9                    	add ecx,ebx
   634 0000040E 030D[8B000000]          	add ecx,[bOff]
   635 00000414 8B01                    	mov eax,[ecx]
   636                                  
   637                                  	;add A[]
   638 00000416 8B4C2404                	mov ecx,[esp+4]
   639 0000041A 01D9                    	add ecx,ebx
   640 0000041C 030D[87000000]          	add ecx,[aOff]
   641 00000422 0301                    	add eax,[ecx]
   642                                  
   643                                  	;store to C[]
   644 00000424 8B4C2410                	mov ecx,[esp+16]
   645 00000428 01D9                    	add ecx,ebx
   646 0000042A 030D[8F000000]          	add ecx,[cOff]
   647 00000430 8901                    	mov [ecx],eax
   648                                  
   649                                  	;;end of addition
   650                                  
   651 00000432 A1[7B000000]            	mov eax,[loop_j]
   652 00000437 83E801                  	sub eax,1
   653 0000043A A3[7B000000]            	mov [loop_j],eax
   654                                  
   655 0000043F 83F800                  	cmp eax,0
   656 00000442 0F8D8AFEFFFF            	jge out_2
   657                                  
   658                                  out_2a_end:
   659                                  	
   660 00000448 8B44240C                	mov eax,[esp+12]
   661 0000044C 83E801                  	sub eax,1
   662 0000044F A3[7B000000]            	mov [loop_j],eax
   663                                  
   664 00000454 A1[77000000]            	mov eax,[loop_i]
   665 00000459 83E801                  	sub eax,1
   666 0000045C A3[77000000]            	mov [loop_i],eax
   667                                  
   668 00000461 83F800                  	cmp eax,0
   669 00000464 0F8D68FEFFFF            	jge out_1
   670                                  
   671                                  out_1a_end:
   672                                  
   673 0000046A C3                      	ret;
   674                                  	;end of addition
   675                                  
   676                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
