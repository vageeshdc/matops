     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  section .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21                                  
    22 00000046 796F202564206E756D-     	format: db "yo %d num",10,0
    23 0000004F 0A00               
    24                                  	
    25 00000051 00000000                	loop_i: dd 0
    26 00000055 00000000                	loop_j: dd 0
    27                                  	
    28 00000059 00000000                	aVec: dd 0
    29 0000005D 00000000                	bVec: dd 0
    30                                  	
    31 00000061 00000000                	aOff: dd 0
    32 00000065 00000000                	bOff: dd 0
    33 00000069 00000000                	cOff: dd 0
    34                                  
    35 0000006D 00000000                	lop_i: dd 0
    36 00000071 00000000                	lop_j: dd 0
    37 00000075 00000000                	lop_k: dd 0
    38                                  	
    39 00000079 00000000                	Av: dd 0
    40 0000007D 00000000                	Bv: dd 0
    41 00000081 00000000                	Cv: dd 0
    42 00000085 00000000                	Dv: dd 0
    43 00000089 00000000                	Nval: dd 0
    44 0000008D 00000000                	Bval: dd 0
    45                                  
    46 00000091 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    47 0000009A 000000040000000500-
    48 000000A3 000006000000070000-
    49 000000AC 000800000009000000-
    50 000000B5 0A0000000B0000000C-
    51 000000BE 0000000D0000000E00-
    52 000000C7 00000F000000100000-
    53 000000D0 00                 
    54 000000D1 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    55 000000DA 000000040000000500-
    56 000000E3 000006000000070000-
    57 000000EC 000800000009000000-
    58 000000F5 0A0000000B0000000C-
    59 000000FE 0000000D0000000E00-
    60 00000107 00000F000000100000-
    61 00000110 00                 
    62                                  
    63 00000111 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    64 0000011A 000000000000000000-
    65 00000123 000000000000000000-
    66 0000012C 000000000000000000-
    67 00000135 000000000000000000-
    68 0000013E 000000000000000000-
    69 00000147 000000000000000000-
    70 00000150 00                 
    71                                  
    72 00000151 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    73 0000015A 000000000000000000-
    74 00000163 000000000000000000-
    75 0000016C 000000000000000000-
    76 00000175 000000000000000000-
    77 0000017E 000000000000000000-
    78 00000187 000000000000000000-
    79 00000190 00                 
    80                                  
    81                                  section .text:
    82                                  	global main
    83                                  	extern printf
    84                                  
    85                                  main:
    86                                  	
    87                                  	;b
    88 00000000 B802000000              	mov eax,2
    89 00000005 50                          push eax
    90                                  
    91                                  	;N
    92 00000006 B804000000              	mov eax,4
    93 0000000B 50                      	push eax
    94                                  
    95                                  	;D
    96 0000000C B8[51010000]            	mov eax,DD
    97 00000011 50                      	push eax
    98                                  
    99                                  	;C
   100 00000012 B8[11010000]            	mov eax,CC
   101 00000017 50                      	push eax
   102                                  
   103                                  	;B
   104 00000018 B8[D1000000]            	mov eax,BB
   105 0000001D 50                      	push eax
   106                                  
   107                                  	;A
   108 0000001E B8[91000000]            	mov eax,AA
   109 00000023 50                      	push eax
   110                                  
   111                                  	;call add_mat_2d
   112 00000024 E80C000000              	call mult_block_2d
   113                                  
   114 00000029 B801000000              	mov eax,1
   115 0000002E BB00000000              	mov ebx,0
   116 00000033 CD80                    	int 80h
   117                                  
   118                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   119                                  
   120                                  mult_block_2d:
   121                                  
   122                                  	;the params are A[],B[],C[],D[],N,b
   123                                  	; A,B are the ip C is the OP
   124                                  	; D is the dummy 
   125                                  	; N is the dimension
   126                                  	; b is the block parameter
   127                                  
   128 00000035 8B442404                	mov eax,[esp+4]
   129 00000039 A3[79000000]            	mov [Av],eax
   130                                  
   131 0000003E 8B442408                	mov eax,[esp+8]
   132 00000042 A3[7D000000]            	mov [Bv],eax
   133                                  
   134 00000047 8B44240C                	mov eax,[esp+12]
   135 0000004B A3[81000000]            	mov [Cv],eax
   136                                  
   137 00000050 8B442410                	mov eax,[esp+16]
   138 00000054 A3[85000000]            	mov [Dv],eax
   139                                  
   140 00000059 8B442414                	mov eax,[esp+20]
   141 0000005D A3[89000000]            	mov [Nval],eax
   142                                  
   143 00000062 8B442418                	mov eax,[esp+24]
   144 00000066 A3[8D000000]            	mov [Bval],eax
   145                                  
   146 0000006B A1[89000000]            	mov eax,[Nval]
   147 00000070 8B1D[8D000000]          	mov ebx,[Bval]
   148 00000076 F7F3                    	div ebx
   149                                  
   150 00000078 81FA00000000            	cmp edx,0
   151 0000007E 0F8539010000            	jne exit_error_noerror
   152                                  
   153                                  	;use lop_i,lop_j,lop_k
   154                                  	;ind ia ja ib jb ic jc id jd
   155                                  	
   156 00000084 B800000000              	mov eax,0
   157 00000089 A3[6D000000]            	mov [lop_i],eax
   158 0000008E A3[71000000]            	mov [lop_j],eax
   159                                  
   160                                  
   161                                  l1:
   162                                  	
   163                                  l2:
   164 00000093 B800000000              	mov eax,0
   165 00000098 A3[75000000]            	mov [lop_k],eax
   166                                  	
   167                                  l3:
   168                                  	
   169                                  	;;mult here
   170                                  	
   171                                  	;jc
   172 0000009D A1[75000000]            	mov eax,[lop_k]
   173 000000A2 50                      	push eax
   174                                  
   175                                  	;ic
   176 000000A3 B800000000              	mov eax,0
   177 000000A8 50                      	push eax
   178                                  
   179                                  	;Wid
   180 000000A9 A1[89000000]            	mov eax,[Nval]
   181 000000AE 50                      	push eax
   182                                  
   183                                  	;jb
   184 000000AF A1[71000000]            	mov eax,[lop_j]
   185 000000B4 50                      	push eax
   186                                  
   187                                  	;ib
   188 000000B5 A1[75000000]            	mov eax,[lop_k]
   189 000000BA 50                      	push eax
   190                                  
   191                                  	;ja
   192 000000BB A1[75000000]            	mov eax,[lop_k]
   193 000000C0 50                      	push eax
   194                                  
   195                                  	;ia
   196 000000C1 A1[6D000000]            	mov eax,[lop_i]
   197 000000C6 50                      	push eax
   198                                  
   199                                  	;C
   200 000000C7 A1[85000000]            	mov eax,[Dv]
   201 000000CC 50                      	push eax
   202                                  
   203                                  	;n
   204 000000CD A1[8D000000]            	mov eax,[Bval]
   205 000000D2 50                      	push eax
   206                                  
   207                                  	;b
   208 000000D3 A1[7D000000]            	mov eax,[Bv]
   209 000000D8 50                      	push eax
   210                                  
   211                                  	;a
   212 000000D9 A1[79000000]            	mov eax,[Av]
   213 000000DE 50                      	push eax
   214                                  
   215                                  	;; call the function
   216 000000DF E8DA000000              	call mult_mat_2d
   217                                  
   218                                  	;; mult ends
   219                                  
   220 000000E4 58                      	pop eax
   221 000000E5 58                      	pop eax	
   222 000000E6 58                      	pop eax
   223 000000E7 58                      	pop eax	
   224 000000E8 58                      	pop eax	
   225 000000E9 58                      	pop eax	
   226 000000EA 58                      	pop eax	
   227 000000EB 58                      	pop eax	
   228 000000EC 58                      	pop eax	
   229 000000ED 58                      	pop eax	
   230 000000EE 58                      	pop eax	
   231                                  	
   232                                  	;loop management
   233 000000EF A1[75000000]            	mov eax,[lop_k]
   234 000000F4 0305[8D000000]          	add eax,[Bval]
   235 000000FA A3[75000000]            	mov [lop_k],eax
   236                                  
   237 000000FF 3B05[89000000]          	cmp eax,[Nval]
   238 00000105 7C96                    	jl l3
   239                                  
   240                                  l3_out:
   241                                  
   242                                  	;; add ops here
   243                                  	
   244 00000107 B800000000              	mov eax,0
   245 0000010C A3[75000000]            	mov [lop_k],eax
   246                                  
   247                                  l4:
   248                                  
   249                                  	;; push ops
   250                                  
   251                                  	;jc
   252 00000111 A1[71000000]            	mov eax,[lop_j]
   253 00000116 50                      	push eax
   254                                  
   255                                  	;ic
   256 00000117 A1[6D000000]            	mov eax,[lop_i]
   257 0000011C 50                      	push eax
   258                                  
   259                                  	;Wid
   260 0000011D A1[89000000]            	mov eax,[Nval]
   261 00000122 50                      	push eax
   262                                  
   263                                  	;jb
   264 00000123 A1[71000000]            	mov eax,[lop_j]
   265 00000128 50                      	push eax
   266                                  
   267                                  	;ib
   268 00000129 A1[6D000000]            	mov eax,[lop_i]
   269 0000012E 50                      	push eax
   270                                  
   271                                  	;ja
   272 0000012F A1[75000000]            	mov eax,[lop_k]
   273 00000134 50                      	push eax
   274                                  
   275                                  	;ia
   276 00000135 B800000000              	mov eax,0
   277 0000013A 50                      	push eax
   278                                  
   279                                  	;C
   280 0000013B A1[81000000]            	mov eax,[Cv]
   281 00000140 50                      	push eax
   282                                  
   283                                  	;n
   284 00000141 A1[8D000000]            	mov eax,[Bval]
   285 00000146 50                      	push eax
   286                                  
   287                                  	;b
   288 00000147 A1[81000000]            	mov eax,[Cv]
   289 0000014C 50                      	push eax
   290                                  
   291                                  	;a
   292 0000014D A1[85000000]            	mov eax,[Dv]
   293 00000152 50                      	push eax
   294                                  
   295                                  	;; call
   296 00000153 E8BE010000              	call add_mat_2d
   297                                  
   298                                  	;;end of pushops
   299                                  	
   300 00000158 58                      	pop eax
   301 00000159 58                      	pop eax	
   302 0000015A 58                      	pop eax
   303 0000015B 58                      	pop eax	
   304 0000015C 58                      	pop eax	
   305 0000015D 58                      	pop eax	
   306 0000015E 58                      	pop eax	
   307 0000015F 58                      	pop eax	
   308 00000160 58                      	pop eax	
   309 00000161 58                      	pop eax	
   310 00000162 58                      	pop eax	
   311                                  
   312 00000163 A1[75000000]            	mov eax,[lop_k]
   313 00000168 0305[8D000000]          	add eax,[Bval]
   314 0000016E A3[75000000]            	mov [lop_k],eax
   315                                  
   316 00000173 3B05[89000000]          	cmp eax,[Nval]
   317 00000179 7C96                    	jl l4
   318                                  
   319                                  l4_out:
   320                                  
   321                                  	;; end of add ops
   322                                  
   323                                  
   324                                  
   325 0000017B A1[71000000]            	mov eax,[lop_j]
   326 00000180 0305[8D000000]          	add eax,[Bval]
   327 00000186 A3[71000000]            	mov [lop_j],eax
   328                                  
   329 0000018B 3B05[89000000]          	cmp eax,[Nval]
   330 00000191 0F8CFCFEFFFF            	jl l2
   331                                  
   332                                  l2_out:
   333                                  	
   334 00000197 B800000000              	mov eax,0
   335 0000019C A3[71000000]            	mov [lop_j],eax
   336                                  
   337 000001A1 A1[6D000000]            	mov eax,[lop_i]
   338 000001A6 0305[8D000000]          	add eax,[Bval]
   339 000001AC A3[6D000000]            	mov [lop_i],eax
   340                                  
   341 000001B1 3B05[89000000]          	cmp eax,[Nval]
   342 000001B7 0F8CD6FEFFFF            	jl l1
   343                                  
   344                                  l1_out:
   345                                  	
   346                                  
   347                                  exit_error_noerror:
   348 000001BD C3                      	ret;;
   349                                  
   350                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   351                                  
   352                                  mult_mat_2d:
   353                                  	
   354                                  	;args a[],b[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   355                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   356                                  	;Wid is the Width of parent matrix
   357                                  	;Work under assumption that it is a square
   358                                  	; A,B,C are the references of parent matrices only
   359                                  	
   360 000001BE 8B44240C                	mov eax,[esp+12]
   361 000001C2 2D01000000              	sub eax,1
   362                                  
   363 000001C7 A3[51000000]            	mov dword [loop_i],eax
   364 000001CC A3[55000000]            	mov dword [loop_j],eax
   365                                  	;done with setting loop variables
   366                                  	;push and pop eax for counter ops
   367                                  	
   368                                  	;find offset
   369                                  	
   370                                  	;;A's offset
   371 000001D1 8B542414                	mov edx,[esp+20]
   372 000001D5 81EA01000000            	sub edx,1
   373 000001DB 0FAF542424              	imul edx,[esp+36]
   374 000001E0 03542418                	add edx,[esp+24]
   375 000001E4 69D204000000            	imul edx,4
   376 000001EA 8915[61000000]          	mov [aOff],edx
   377                                  	
   378                                  	;;B's offset
   379 000001F0 8B54241C                	mov edx,[esp+28]
   380 000001F4 81EA01000000            	sub edx,1
   381 000001FA 0FAF542424              	imul edx,[esp+36]
   382 000001FF 03542420                	add edx,[esp+32]
   383 00000203 69D204000000            	imul edx,4
   384 00000209 8915[65000000]          	mov [bOff],edx
   385                                  	
   386                                  	;;C's offset
   387 0000020F 8B542428                	mov edx,[esp+40]
   388 00000213 81EA01000000            	sub edx,1
   389 00000219 0FAF542424              	imul edx,[esp+36]
   390 0000021E 0354242C                	add edx,[esp+44]
   391 00000222 69D204000000            	imul edx,4
   392 00000228 8915[69000000]          	mov [cOff],edx
   393                                  	
   394                                  out_1:
   395                                  
   396                                  	;outer loop
   397                                  out_2:
   398                                  
   399                                  	;inner loop
   400                                  
   401                                  	;current B off
   402 0000022E A1[55000000]            	mov eax,[loop_j]
   403 00000233 69C004000000            	imul eax,4
   404 00000239 03442408                	add eax,[esp+8]
   405 0000023D 0305[65000000]          	add eax,[bOff]
   406 00000243 A3[5D000000]            	mov dword [bVec],eax
   407                                  
   408                                  	;current A off
   409 00000248 A1[51000000]            	mov eax,[loop_i]
   410 0000024D 0FAF442424              	imul eax,[esp+36]
   411 00000252 69C004000000            	imul eax,4
   412 00000258 03442404                	add eax,[esp+4]
   413 0000025C 0305[61000000]          	add eax,[aOff]
   414 00000262 A3[59000000]            	mov dword [aVec],eax
   415                                  	
   416                                  	;;;row multiplication ops here...
   417                                  	
   418 00000267 BB00000000              	mov ebx,0
   419 0000026C 8B4C240C                	mov ecx,[esp+12]
   420 00000270 81E901000000            	sub ecx,1
   421                                  	
   422                                  out_3:	
   423 00000276 89C8                    	mov eax,ecx
   424 00000278 0FAF442424              	imul eax,[esp+36]
   425 0000027D 69C004000000            	imul eax,4
   426 00000283 0305[5D000000]          	add dword eax,[bVec]
   427 00000289 8B10                    	mov edx,[eax]
   428                                  
   429 0000028B A1[59000000]            	mov eax,[aVec]
   430 00000290 51                      	push ecx
   431 00000291 69C904000000            	imul ecx,4
   432 00000297 01C8                    	add eax,ecx
   433 00000299 59                      	pop ecx
   434                                  
   435 0000029A 0FAF10                  	imul edx,[eax]
   436 0000029D 01D3                    	add ebx,edx
   437 0000029F 81E901000000            	sub ecx,1
   438                                  	
   439 000002A5 81F900000000            	cmp ecx,0
   440 000002AB 7DC9                    	jge out_3
   441                                  
   442                                  out_3_exit:
   443                                  	
   444                                      ;;;end of row op...
   445                                  	
   446 000002AD 89DA                    	mov edx,ebx
   447                                  
   448                                  	;writing result of C
   449 000002AF A1[51000000]            	mov eax,[loop_i]
   450 000002B4 0FAF442424              	imul eax,[esp+36]
   451 000002B9 8B1D[55000000]          	mov ebx,[loop_j]
   452 000002BF 01D8                    	add eax,ebx
   453 000002C1 69C004000000            	imul eax,4
   454 000002C7 0305[69000000]          	add eax,[cOff]
   455 000002CD 03442410                	add eax,[esp+16]
   456 000002D1 8910                    	mov [eax],edx
   457                                  	
   458 000002D3 A1[55000000]            	mov eax,[loop_j]
   459 000002D8 2D01000000              	sub eax,1
   460 000002DD A3[55000000]            	mov dword [loop_j],eax
   461                                  
   462 000002E2 3D00000000              	cmp eax,0
   463                                  
   464 000002E7 0F8D41FFFFFF            	jge out_2
   465                                  
   466                                  out_2_end:
   467                                  
   468                                  
   469 000002ED 8B44240C                	mov eax,[esp+12]
   470 000002F1 2D01000000              	sub eax,1
   471 000002F6 A3[55000000]            	mov dword [loop_j],eax
   472                                  
   473 000002FB A1[51000000]            	mov eax,[loop_i]
   474 00000300 2D01000000              	sub eax,1
   475 00000305 A3[51000000]            	mov [loop_i],eax
   476                                  
   477 0000030A 3D00000000              	cmp eax,0
   478                                  
   479 0000030F 0F8D19FFFFFF            	jge out_1
   480                                  
   481                                  out_1_end:
   482                                  
   483 00000315 C3                      	ret;
   484                                  	;end of the procedure
   485                                  
   486                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   487                                  
   488                                  add_mat_2d:
   489                                  	;arr A[],B[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   490                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   491                                  	;Wid is the Width of parent matrix
   492                                  	;Work under assumption that it is a square
   493                                  	; A,B,C are the references of parent matrices only
   494                                  
   495 00000316 8B44240C                	mov eax,[esp+12]
   496 0000031A 2D01000000              	sub eax,1
   497                                  
   498 0000031F A3[51000000]            	mov [loop_i],eax
   499 00000324 A3[55000000]            	mov [loop_j],eax
   500                                  
   501                                  out_1a:
   502                                  	
   503                                  out_2a:
   504                                  	
   505                                  	;;addition logic
   506                                  	
   507                                  	;find offset
   508                                  	
   509                                  	;;A's offset
   510 00000329 8B542414                	mov edx,[esp+20]
   511 0000032D 81EA01000000            	sub edx,1
   512 00000333 0FAF542424              	imul edx,[esp+36]
   513 00000338 03542418                	add edx,[esp+24]
   514 0000033C 69D204000000            	imul edx,4
   515 00000342 8915[61000000]          	mov [aOff],edx
   516                                  	
   517                                  	;;B's offset
   518 00000348 8B54241C                	mov edx,[esp+28]
   519 0000034C 81EA01000000            	sub edx,1
   520 00000352 0FAF542424              	imul edx,[esp+36]
   521 00000357 03542420                	add edx,[esp+32]
   522 0000035B 69D204000000            	imul edx,4
   523 00000361 8915[65000000]          	mov [bOff],edx
   524                                  	
   525                                  	;;C's offset
   526 00000367 8B542428                	mov edx,[esp+40]
   527 0000036B 81EA01000000            	sub edx,1
   528 00000371 0FAF542424              	imul edx,[esp+36]
   529 00000376 0354242C                	add edx,[esp+44]
   530 0000037A 69D204000000            	imul edx,4
   531 00000380 8915[69000000]          	mov [cOff],edx
   532                                  	
   533                                  	;common offset
   534 00000386 8B1D[51000000]          	mov ebx,[loop_i]
   535 0000038C 0FAF5C2424              	imul ebx,[esp+36]
   536 00000391 031D[55000000]          	add ebx,[loop_j]
   537 00000397 69DB04000000            	imul ebx,4
   538                                  
   539                                  	;get B[]
   540 0000039D 8B4C2408                	mov ecx,[esp+8]
   541 000003A1 01D9                    	add ecx,ebx
   542 000003A3 030D[65000000]          	add ecx,[bOff]
   543 000003A9 8B01                    	mov eax,[ecx]
   544                                  
   545                                  	;add A[]
   546 000003AB 8B4C2404                	mov ecx,[esp+4]
   547 000003AF 01D9                    	add ecx,ebx
   548 000003B1 030D[61000000]          	add ecx,[aOff]
   549 000003B7 0301                    	add eax,[ecx]
   550                                  
   551                                  	;store to C[]
   552 000003B9 8B4C2410                	mov ecx,[esp+16]
   553 000003BD 01D9                    	add ecx,ebx
   554 000003BF 030D[69000000]          	add ecx,[cOff]
   555 000003C5 8901                    	mov [ecx],eax
   556                                  
   557                                  	;;end of addition
   558                                  
   559 000003C7 A1[55000000]            	mov eax,[loop_j]
   560 000003CC 2D01000000              	sub eax,1
   561 000003D1 A3[55000000]            	mov [loop_j],eax
   562                                  
   563 000003D6 3D00000000              	cmp eax,0
   564 000003DB 0F8D4DFEFFFF            	jge out_2
   565                                  
   566                                  out_2a_end:
   567                                  	
   568 000003E1 8B44240C                	mov eax,[esp+12]
   569 000003E5 2D01000000              	sub eax,1
   570 000003EA A3[55000000]            	mov [loop_j],eax
   571                                  
   572 000003EF A1[51000000]            	mov eax,[loop_i]
   573 000003F4 2D01000000              	sub eax,1
   574 000003F9 A3[51000000]            	mov [loop_i],eax
   575                                  
   576 000003FE 3D00000000              	cmp eax,0
   577 00000403 0F8D25FEFFFF            	jge out_1
   578                                  
   579                                  out_1a_end:
   580                                  
   581 00000409 C3                      	ret;
   582                                  	;end of addition
   583                                  
   584                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
