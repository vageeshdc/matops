     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  SECTION .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21 00000046 000000000000000000-     	arr4: dd 0,0,0,0
    22 0000004F 00000000000000     
    23 00000056 010000000000000000-     	arr5: dd 1,0,0,1
    24 0000005F 00000001000000     
    25                                  
    26 00000066 207C2025642000          	format: db " | %d ",0
    27 0000006D 207C200A00              	format2: db " | ",10,0
    28 00000072 2074696D652074616B-     	format3: db " time taken %lld cycles .. ",10,0
    29 0000007B 656E20256C6C642063-
    30 00000084 79636C6573202E2E20-
    31 0000008D 0A00               
    32                                  
    33 0000008F 00000000                	CHval: dd 0
    34 00000093 00000000                	CLval: dd 0
    35                                  
    36 00000097 00000000                	loop_i: dd 0
    37 0000009B 00000000                	loop_j: dd 0
    38                                  	
    39 0000009F 00000000                	aVec: dd 0
    40 000000A3 00000000                	bVec: dd 0
    41                                  	
    42 000000A7 00000000                	aOff: dd 0
    43 000000AB 00000000                	bOff: dd 0
    44 000000AF 00000000                	cOff: dd 0
    45                                  
    46 000000B3 00000000                	aOff2: dd 0
    47 000000B7 00000000                	bOff2: dd 0
    48 000000BB 00000000                	cOff2: dd 0
    49                                  
    50 000000BF 00000000                	lop_i: dd 0
    51 000000C3 00000000                	lop_j: dd 0
    52 000000C7 00000000                	lop_k: dd 0
    53                                  	
    54 000000CB 00000000                	Av: dd 0
    55 000000CF 00000000                	Bv: dd 0
    56 000000D3 00000000                	Cv: dd 0
    57 000000D7 00000000                	Dv: dd 0
    58 000000DB 00000000                	Nval: dd 0
    59 000000DF 00000000                	Bval: dd 0
    60                                  
    61 000000E3 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    62 000000EC 000000040000000500-
    63 000000F5 000006000000070000-
    64 000000FE 000800000009000000-
    65 00000107 0A0000000B0000000C-
    66 00000110 0000000D0000000E00-
    67 00000119 00000F000000100000-
    68 00000122 00                 
    69 00000123 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    70 0000012C 000000040000000500-
    71 00000135 000006000000070000-
    72 0000013E 000800000009000000-
    73 00000147 0A0000000B0000000C-
    74 00000150 0000000D0000000E00-
    75 00000159 00000F000000100000-
    76 00000162 00                 
    77 00000163 010000000000000000-     	BB1: dd 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1
    78 0000016C 000000000000000000-
    79 00000175 000001000000000000-
    80 0000017E 000000000000000000-
    81 00000187 000000000100000000-
    82 00000190 000000000000000000-
    83 00000199 000000000000010000-
    84 000001A2 00                 
    85 000001A3 000000000000000000-     	BB2: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    86 000001AC 000000000000000000-
    87 000001B5 000000000000000000-
    88 000001BE 000000000000000000-
    89 000001C7 000000000000000000-
    90 000001D0 000000000000000000-
    91 000001D9 000000000000000000-
    92 000001E2 00                 
    93                                  
    94 000001E3 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    95 000001EC 000000000000000000-
    96 000001F5 000000000000000000-
    97 000001FE 000000000000000000-
    98 00000207 000000000000000000-
    99 00000210 000000000000000000-
   100 00000219 000000000000000000-
   101 00000222 00                 
   102                                  
   103 00000223 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   104 0000022C 000000000000000000-
   105 00000235 000000000000000000-
   106 0000023E 000000000000000000-
   107 00000247 000000000000000000-
   108 00000250 000000000000000000-
   109 00000259 000000000000000000-
   110 00000262 00                 
   111                                  
   112                                  SECTION .text
   113                                  	global main
   114                                  	extern printf
   115                                  
   116                                  main:
   117                                  
   118                                  	;getting initial time
   119 00000000 31C0                    	xor eax,eax
   120                                  	
   121 00000002 0FA2                    	cpuid
   122 00000004 0F31                    	rdtsc
   123                                  
   124 00000006 8915[8F000000]          	mov [CHval],edx
   125 0000000C A3[93000000]            	mov [CLval],eax
   126                                  
   127                                  	;b
   128 00000011 B802000000              	mov eax,2
   129 00000016 50                          push eax
   130                                  
   131                                  	;N
   132 00000017 B804000000              	mov eax,4
   133 0000001C 50                      	push eax
   134                                  
   135                                  	;D
   136 0000001D B8[36000000]            	mov eax,arr3
   137 00000022 50                      	push eax
   138                                  
   139                                  	;C
   140 00000023 B8[46000000]            	mov eax,arr4
   141 00000028 50                      	push eax
   142                                  
   143                                  	;B
   144 00000029 B8[26000000]            	mov eax,arr2
   145 0000002E 50                      	push eax
   146                                  
   147                                  	;A
   148 0000002F B8[26000000]            	mov eax,arr2
   149 00000034 50                      	push eax
   150                                  
   151 00000035 E8B1000000              	call mult_block_2d
   152                                  
   153                                  print_timer:
   154                                  	;;getting later time
   155                                  
   156 0000003A 31C0                    	xor eax,eax
   157                                  	
   158 0000003C 0FA2                    	cpuid
   159 0000003E 0F31                    	rdtsc
   160                                  
   161 00000040 2B05[93000000]          	sub eax,[CLval]
   162 00000046 2B15[8F000000]          	sub edx,[CHval]
   163                                  
   164 0000004C 50                      	push eax
   165 0000004D 52                      	push edx
   166 0000004E 68[72000000]            	push format3
   167 00000053 E8(00000000)            	call printf
   168                                  
   169                                  	;; print the matrix C
   170                                  
   171 00000058 B802000000              	mov eax,2
   172 0000005D A3[BF000000]            	mov [lop_i],eax
   173                                  
   174 00000062 BB00000000              	mov ebx,0
   175 00000067 891D[97000000]          	mov [loop_i],ebx
   176 0000006D 891D[9B000000]          	mov [loop_j],ebx
   177                                  
   178                                  pl1:
   179                                  
   180                                  pl2:
   181                                  
   182                                  	;; print to screen
   183                                  
   184 00000073 8B0D[97000000]          	mov ecx,[loop_i]
   185 00000079 0FAF0D[BF000000]        	imul ecx,[lop_i]
   186 00000080 030D[9B000000]          	add ecx,[loop_j]
   187 00000086 6BC904                  	imul ecx,4
   188 00000089 81C1[46000000]          	add ecx,arr4
   189                                  	
   190 0000008F 8B01                    	mov eax,[ecx]
   191 00000091 50                      	push eax
   192 00000092 68[66000000]            	push format
   193 00000097 E8(00000000)            	call printf
   194                                  
   195                                  	;;end of print
   196                                  
   197                                  	;update
   198                                  	
   199 0000009C 8B1D[9B000000]          	mov ebx,[loop_j]
   200 000000A2 83C301                  	add ebx,1
   201 000000A5 891D[9B000000]          	mov [loop_j],ebx
   202                                  
   203 000000AB 3B1D[BF000000]          	cmp ebx,[lop_i]
   204 000000B1 7CC0                    	jl pl2
   205                                  
   206                                  pl2_out:
   207                                  
   208                                  	;new line print
   209                                  
   210 000000B3 68[6D000000]            	push format2
   211 000000B8 E8(00000000)            	call printf
   212                                  	;;
   213                                  
   214 000000BD BB00000000              	mov ebx,0
   215 000000C2 891D[9B000000]          	mov [loop_j],ebx
   216                                  
   217 000000C8 8B1D[97000000]          	mov ebx,[loop_i]
   218 000000CE 83C301                  	add ebx,1
   219 000000D1 891D[97000000]          	mov [loop_i],ebx
   220                                  
   221 000000D7 3B1D[BF000000]          	cmp ebx,[lop_i]
   222 000000DD 7C94                    	jl pl1
   223                                  
   224                                  pl1_out:
   225                                  
   226                                  	;; end of print bye
   227                                  
   228 000000DF B801000000              	mov eax,1
   229 000000E4 BB00000000              	mov ebx,0
   230 000000E9 CD80                    	int 80h
   231                                  
   232                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   233                                  
   234                                  mult_block_2d:
   235                                  
   236                                  	;the params are A[],B[],C[],D[],N,b
   237                                  	; A,B are the ip C is the OP
   238                                  	; D is the dummy 
   239                                  	; N is the dimension
   240                                  	; b is the block parameter
   241                                  
   242 000000EB 8B442404                	mov eax,[esp+4]
   243 000000EF A3[CB000000]            	mov [Av],eax
   244                                  
   245 000000F4 8B442408                	mov eax,[esp+8]
   246 000000F8 A3[CF000000]            	mov [Bv],eax
   247                                  
   248 000000FD 8B44240C                	mov eax,[esp+12]
   249 00000101 A3[D3000000]            	mov [Cv],eax
   250                                  
   251 00000106 8B442410                	mov eax,[esp+16]
   252 0000010A A3[D7000000]            	mov [Dv],eax
   253                                  
   254 0000010F 8B442414                	mov eax,[esp+20]
   255 00000113 A3[DB000000]            	mov [Nval],eax
   256                                  
   257 00000118 8B442418                	mov eax,[esp+24]
   258 0000011C A3[DF000000]            	mov [Bval],eax
   259                                  
   260 00000121 A1[DB000000]            	mov eax,[Nval]
   261 00000126 8B0D[DF000000]          	mov ecx,[Bval]
   262 0000012C BA00000000              	mov edx,0
   263                                  	;donr specifically
   264 00000131 F7F1                    	div ecx
   265                                  
   266 00000133 83FA00                  	cmp edx,0
   267 00000136 0F8539010000            	jne exit_error_noerror
   268                                  
   269                                  	;use lop_i,lop_j,lop_k
   270                                  	;ind ia ja ib jb ic jc id jd
   271                                  	
   272 0000013C B800000000              	mov eax,0
   273 00000141 A3[BF000000]            	mov [lop_i],eax
   274 00000146 A3[C3000000]            	mov [lop_j],eax
   275                                  
   276                                  
   277                                  l1:
   278                                  	
   279                                  l2:
   280 0000014B B800000000              	mov eax,0
   281 00000150 A3[C7000000]            	mov [lop_k],eax
   282                                  	
   283                                  l3:
   284                                  	
   285                                  	;;mult here
   286                                  	
   287                                  	;jc
   288 00000155 A1[C7000000]            	mov eax,[lop_k]
   289 0000015A 50                      	push eax
   290                                  
   291                                  	;ic
   292 0000015B B800000000              	mov eax,0
   293 00000160 50                      	push eax
   294                                  
   295                                  	;Wid
   296 00000161 A1[DB000000]            	mov eax,[Nval]
   297 00000166 50                      	push eax
   298                                  
   299                                  	;jb
   300 00000167 A1[C3000000]            	mov eax,[lop_j]
   301 0000016C 50                      	push eax
   302                                  
   303                                  	;ib
   304 0000016D A1[C7000000]            	mov eax,[lop_k]
   305 00000172 50                      	push eax
   306                                  
   307                                  	;ja
   308 00000173 A1[C7000000]            	mov eax,[lop_k]
   309 00000178 50                      	push eax
   310                                  
   311                                  	;ia
   312 00000179 A1[BF000000]            	mov eax,[lop_i]
   313 0000017E 50                      	push eax
   314                                  
   315                                  	;C
   316 0000017F A1[D7000000]            	mov eax,[Dv]
   317 00000184 50                      	push eax
   318                                  
   319                                  	;n
   320 00000185 A1[DF000000]            	mov eax,[Bval]
   321 0000018A 50                      	push eax
   322                                  
   323                                  	;b
   324 0000018B A1[CF000000]            	mov eax,[Bv]
   325 00000190 50                      	push eax
   326                                  
   327                                  	;a
   328 00000191 A1[CB000000]            	mov eax,[Av]
   329 00000196 50                      	push eax
   330                                  
   331                                  	;; call the function
   332 00000197 E8DA000000              	call mult_mat_2d
   333                                  
   334                                  	;; mult ends
   335                                  
   336 0000019C 58                      	pop eax
   337 0000019D 58                      	pop eax	
   338 0000019E 58                      	pop eax
   339 0000019F 58                      	pop eax	
   340 000001A0 58                      	pop eax	
   341 000001A1 58                      	pop eax	
   342 000001A2 58                      	pop eax	
   343 000001A3 58                      	pop eax	
   344 000001A4 58                      	pop eax	
   345 000001A5 58                      	pop eax	
   346 000001A6 58                      	pop eax	
   347                                  	
   348                                  	;loop management
   349 000001A7 A1[C7000000]            	mov eax,[lop_k]
   350 000001AC 0305[DF000000]          	add eax,[Bval]
   351 000001B2 A3[C7000000]            	mov [lop_k],eax
   352                                  
   353 000001B7 3B05[DB000000]          	cmp eax,[Nval]
   354 000001BD 7C96                    	jl l3
   355                                  
   356                                  l3_out:
   357                                  
   358                                  	;; add ops here
   359                                  	
   360 000001BF B800000000              	mov eax,0
   361 000001C4 A3[C7000000]            	mov [lop_k],eax
   362                                  
   363                                  l4:
   364                                  
   365                                  	;; push ops
   366                                  
   367                                  	;jc
   368 000001C9 A1[C3000000]            	mov eax,[lop_j]
   369 000001CE 50                      	push eax
   370                                  
   371                                  	;ic
   372 000001CF A1[BF000000]            	mov eax,[lop_i]
   373 000001D4 50                      	push eax
   374                                  
   375                                  	;Wid
   376 000001D5 A1[DB000000]            	mov eax,[Nval]
   377 000001DA 50                      	push eax
   378                                  
   379                                  	;jb
   380 000001DB A1[C3000000]            	mov eax,[lop_j]
   381 000001E0 50                      	push eax
   382                                  
   383                                  	;ib
   384 000001E1 A1[BF000000]            	mov eax,[lop_i]
   385 000001E6 50                      	push eax
   386                                  
   387                                  	;ja
   388 000001E7 A1[C7000000]            	mov eax,[lop_k]
   389 000001EC 50                      	push eax
   390                                  
   391                                  	;ia
   392 000001ED B800000000              	mov eax,0
   393 000001F2 50                      	push eax
   394                                  
   395                                  	;C
   396 000001F3 A1[D3000000]            	mov eax,[Cv]
   397 000001F8 50                      	push eax
   398                                  
   399                                  	;n
   400 000001F9 A1[DF000000]            	mov eax,[Bval]
   401 000001FE 50                      	push eax
   402                                  
   403                                  	;b
   404 000001FF A1[D3000000]            	mov eax,[Cv]
   405 00000204 50                      	push eax
   406                                  
   407                                  	;a
   408 00000205 A1[D7000000]            	mov eax,[Dv]
   409 0000020A 50                      	push eax
   410                                  
   411                                  	;; call
   412 0000020B E888010000              	call add_mat_2d
   413                                  
   414                                  	;;end of pushops
   415                                  	
   416 00000210 58                      	pop eax
   417 00000211 58                      	pop eax	
   418 00000212 58                      	pop eax
   419 00000213 58                      	pop eax	
   420 00000214 58                      	pop eax	
   421 00000215 58                      	pop eax	
   422 00000216 58                      	pop eax	
   423 00000217 58                      	pop eax	
   424 00000218 58                      	pop eax	
   425 00000219 58                      	pop eax	
   426 0000021A 58                      	pop eax	
   427                                  
   428 0000021B A1[C7000000]            	mov eax,[lop_k]
   429 00000220 0305[DF000000]          	add eax,[Bval]
   430 00000226 A3[C7000000]            	mov [lop_k],eax
   431                                  
   432 0000022B 3B05[DB000000]          	cmp eax,[Nval]
   433 00000231 7C96                    	jl l4
   434                                  
   435                                  l4_out:
   436                                  
   437                                  	;; end of add ops
   438                                  
   439                                  
   440                                  
   441 00000233 A1[C3000000]            	mov eax,[lop_j]
   442 00000238 0305[DF000000]          	add eax,[Bval]
   443 0000023E A3[C3000000]            	mov [lop_j],eax
   444                                  
   445 00000243 3B05[DB000000]          	cmp eax,[Nval]
   446 00000249 0F8CFCFEFFFF            	jl l2
   447                                  
   448                                  l2_out:
   449                                  	
   450 0000024F B800000000              	mov eax,0
   451 00000254 A3[C3000000]            	mov [lop_j],eax
   452                                  
   453 00000259 A1[BF000000]            	mov eax,[lop_i]
   454 0000025E 0305[DF000000]          	add eax,[Bval]
   455 00000264 A3[BF000000]            	mov [lop_i],eax
   456                                  
   457 00000269 3B05[DB000000]          	cmp eax,[Nval]
   458 0000026F 0F8CD6FEFFFF            	jl l1
   459                                  
   460                                  l1_out:
   461                                  	
   462                                  
   463                                  exit_error_noerror:
   464 00000275 C3                      	ret;;
   465                                  
   466                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   467                                  
   468                                  mult_mat_2d:
   469                                  	
   470                                  	;args a[],b[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   471                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   472                                  	;Wid is the Width of parent matrix
   473                                  	;Work under assumption that it is a square
   474                                  	; A,B,C are the references of parent matrices only
   475                                  	
   476 00000276 8B44240C                	mov eax,[esp+12]
   477 0000027A 83E801                  	sub eax,1
   478                                  
   479 0000027D A3[97000000]            	mov dword [loop_i],eax
   480 00000282 A3[9B000000]            	mov dword [loop_j],eax
   481                                  	;done with setting loop variables
   482                                  	;push and pop eax for counter ops
   483                                  	
   484                                  	;find offset
   485                                  	
   486                                  	;;A's offset
   487 00000287 8B542414                	mov edx,[esp+20]
   488 0000028B 83EA01                  	sub edx,1
   489 0000028E 0FAF542424              	imul edx,[esp+36]
   490 00000293 03542418                	add edx,[esp+24]
   491 00000297 6BD204                  	imul edx,4
   492 0000029A 8915[A7000000]          	mov [aOff],edx
   493                                  	
   494                                  	;;B's offset
   495 000002A0 8B54241C                	mov edx,[esp+28]
   496 000002A4 83EA01                  	sub edx,1
   497 000002A7 0FAF542424              	imul edx,[esp+36]
   498 000002AC 03542420                	add edx,[esp+32]
   499 000002B0 6BD204                  	imul edx,4
   500 000002B3 8915[AB000000]          	mov [bOff],edx
   501                                  	
   502                                  	;;C's offset
   503 000002B9 8B542428                	mov edx,[esp+40]
   504 000002BD 83EA01                  	sub edx,1
   505 000002C0 0FAF542424              	imul edx,[esp+36]
   506 000002C5 0354242C                	add edx,[esp+44]
   507 000002C9 6BD204                  	imul edx,4
   508 000002CC 8915[AF000000]          	mov [cOff],edx
   509                                  	
   510                                  out_1:
   511                                  
   512                                  	;outer loop
   513                                  out_2:
   514                                  
   515                                  	;inner loop
   516                                  
   517                                  	;current B off
   518 000002D2 A1[9B000000]            	mov eax,[loop_j]
   519 000002D7 6BC004                  	imul eax,4
   520 000002DA 03442408                	add eax,[esp+8]
   521 000002DE 0305[AB000000]          	add eax,[bOff]
   522 000002E4 A3[A3000000]            	mov dword [bVec],eax
   523                                  
   524                                  	;current A off
   525 000002E9 A1[97000000]            	mov eax,[loop_i]
   526 000002EE 0FAF442424              	imul eax,[esp+36]
   527 000002F3 6BC004                  	imul eax,4
   528 000002F6 03442404                	add eax,[esp+4]
   529 000002FA 0305[A7000000]          	add eax,[aOff]
   530 00000300 A3[9F000000]            	mov dword [aVec],eax
   531                                  	
   532                                  	;;;row multiplication ops here...
   533                                  	
   534 00000305 BB00000000              	mov ebx,0
   535 0000030A 8B4C240C                	mov ecx,[esp+12]
   536 0000030E 83E901                  	sub ecx,1
   537                                  	
   538                                  out_3:	
   539 00000311 89C8                    	mov eax,ecx
   540 00000313 0FAF442424              	imul eax,[esp+36]
   541 00000318 6BC004                  	imul eax,4
   542 0000031B 0305[A3000000]          	add dword eax,[bVec]
   543 00000321 8B10                    	mov edx,[eax]
   544                                  
   545 00000323 A1[9F000000]            	mov eax,[aVec]
   546 00000328 51                      	push ecx
   547 00000329 6BC904                  	imul ecx,4
   548 0000032C 01C8                    	add eax,ecx
   549 0000032E 59                      	pop ecx
   550                                  
   551 0000032F 0FAF10                  	imul edx,[eax]
   552 00000332 01D3                    	add ebx,edx
   553 00000334 83E901                  	sub ecx,1
   554                                  	
   555 00000337 83F900                  	cmp ecx,0
   556 0000033A 7DD5                    	jge out_3
   557                                  
   558                                  out_3_exit:
   559                                  	
   560                                      ;;;end of row op...
   561                                  	
   562 0000033C 89DA                    	mov edx,ebx
   563                                  
   564                                  	;writing result of C
   565 0000033E A1[97000000]            	mov eax,[loop_i]
   566 00000343 0FAF442424              	imul eax,[esp+36]
   567 00000348 8B1D[9B000000]          	mov ebx,[loop_j]
   568 0000034E 01D8                    	add eax,ebx
   569 00000350 6BC004                  	imul eax,4
   570 00000353 0305[AF000000]          	add eax,[cOff]
   571 00000359 03442410                	add eax,[esp+16]
   572 0000035D 8910                    	mov [eax],edx
   573                                  	
   574 0000035F A1[9B000000]            	mov eax,[loop_j]
   575 00000364 83E801                  	sub eax,1
   576 00000367 A3[9B000000]            	mov dword [loop_j],eax
   577                                  
   578 0000036C 83F800                  	cmp eax,0
   579                                  
   580 0000036F 0F8D5DFFFFFF            	jge out_2
   581                                  
   582                                  out_2_end:
   583                                  
   584                                  
   585 00000375 8B44240C                	mov eax,[esp+12]
   586 00000379 83E801                  	sub eax,1
   587 0000037C A3[9B000000]            	mov dword [loop_j],eax
   588                                  
   589 00000381 A1[97000000]            	mov eax,[loop_i]
   590 00000386 83E801                  	sub eax,1
   591 00000389 A3[97000000]            	mov [loop_i],eax
   592                                  
   593 0000038E 83F800                  	cmp eax,0
   594                                  
   595 00000391 0F8D3BFFFFFF            	jge out_1
   596                                  
   597                                  out_1_end:
   598                                  
   599 00000397 C3                      	ret;
   600                                  	;end of the procedure
   601                                  
   602                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   603                                  
   604                                  add_mat_2d:
   605                                  	;arr A[],B[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   606                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   607                                  	;Wid is the Width of parent matrix
   608                                  	;Work under assumption that it is a square
   609                                  	; A,B,C are the references of parent matrices only
   610                                  
   611                                  
   612                                  	;find offset
   613                                  	
   614                                  	;;A's offset
   615 00000398 8B542414                	mov edx,[esp+20]
   616 0000039C 83EA01                  	sub edx,1
   617 0000039F 0FAF542424              	imul edx,[esp+36]
   618 000003A4 03542418                	add edx,[esp+24]
   619 000003A8 6BD204                  	imul edx,4
   620 000003AB 8915[B3000000]          	mov [aOff2],edx
   621                                  	
   622                                  	;;B's offset
   623 000003B1 8B54241C                	mov edx,[esp+28]
   624 000003B5 83EA01                  	sub edx,1
   625 000003B8 0FAF542424              	imul edx,[esp+36]
   626 000003BD 03542420                	add edx,[esp+32]
   627 000003C1 6BD204                  	imul edx,4
   628 000003C4 8915[B7000000]          	mov [bOff2],edx
   629                                  	
   630                                  	;;C's offset
   631 000003CA 8B542428                	mov edx,[esp+40]
   632 000003CE 83EA01                  	sub edx,1
   633 000003D1 0FAF542424              	imul edx,[esp+36]
   634 000003D6 0354242C                	add edx,[esp+44]
   635 000003DA 6BD204                  	imul edx,4
   636 000003DD 8915[BB000000]          	mov [cOff2],edx
   637                                  	
   638 000003E3 8B44240C                	mov eax,[esp+12]
   639 000003E7 83E801                  	sub eax,1
   640 000003EA A3[97000000]            	mov [loop_i],eax
   641 000003EF A3[9B000000]            	mov [loop_j],eax
   642                                  
   643                                  out_1a:
   644                                  	
   645                                  out_2a:
   646                                  	
   647                                  	;;addition logic
   648                                  	
   649                                  	;common offset
   650 000003F4 8B1D[97000000]          	mov ebx,[loop_i]
   651 000003FA 0FAF5C2424              	imul ebx,[esp+36]
   652 000003FF 031D[9B000000]          	add ebx,[loop_j]
   653 00000405 6BDB04                  	imul ebx,4
   654                                  
   655                                  	;get B[]
   656 00000408 8B4C2408                	mov ecx,[esp+8]
   657 0000040C 01D9                    	add ecx,ebx
   658 0000040E 030D[B7000000]          	add ecx,[bOff2]
   659 00000414 8B01                    	mov eax,[ecx]
   660                                  
   661                                  	;add A[]
   662 00000416 8B4C2404                	mov ecx,[esp+4]
   663 0000041A 01D9                    	add ecx,ebx
   664 0000041C 030D[B3000000]          	add ecx,[aOff2]
   665 00000422 0301                    	add eax,[ecx]
   666                                  
   667                                  	;store to C[]
   668 00000424 8B4C2410                	mov ecx,[esp+16]
   669 00000428 01D9                    	add ecx,ebx
   670 0000042A 030D[BB000000]          	add ecx,[cOff2]
   671 00000430 8901                    	mov [ecx],eax
   672                                  
   673                                  	;;end of addition
   674                                  
   675 00000432 A1[9B000000]            	mov eax,[loop_j]
   676 00000437 83E801                  	sub eax,1
   677 0000043A A3[9B000000]            	mov [loop_j],eax
   678                                  
   679 0000043F 83F800                  	cmp eax,0
   680 00000442 0F8D8AFEFFFF            	jge out_2
   681                                  
   682                                  out_2a_end:
   683                                  	
   684 00000448 8B44240C                	mov eax,[esp+12]
   685 0000044C 83E801                  	sub eax,1
   686 0000044F A3[9B000000]            	mov [loop_j],eax
   687                                  
   688 00000454 A1[97000000]            	mov eax,[loop_i]
   689 00000459 83E801                  	sub eax,1
   690 0000045C A3[97000000]            	mov [loop_i],eax
   691                                  
   692 00000461 83F800                  	cmp eax,0
   693 00000464 0F8D68FEFFFF            	jge out_1
   694                                  
   695                                  out_1a_end:
   696                                  
   697 0000046A C3                      	ret;
   698                                  	;end of addition
   699                                  
   700                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   701                                  
   702                                  trans_mat_2d:
   703                                  	;args - A[],N
   704                                  	
   705 0000046B 8B442408                	mov eax,[esp+8]
   706                                  
   707 0000046F C705[97000000]0000-     	mov dword [loop_i],0
   708 00000477 0000               
   709 00000479 C705[9B000000]0000-     	mov dword [loop_j],0
   710 00000481 0000               
   711                                  
   712                                  tl_1:
   713                                  
   714                                  tl_2:
   715                                  	
   716                                  	;swap here
   717                                  
   718 00000483 A1[97000000]            	mov eax,[loop_i]
   719 00000488 0FAF442408              	imul eax,[esp+8]
   720 0000048D 0305[9B000000]          	add eax,[loop_j]
   721 00000493 6BC004                  	imul eax,4
   722 00000496 03442404                	add eax,[esp+4]
   723 0000049A 8B18                    	mov ebx,[eax]
   724                                  	
   725 0000049C 8B0D[9B000000]          	mov ecx,[loop_j]
   726 000004A2 0FAF4C2408              	imul ecx,[esp+8]
   727 000004A7 030D[97000000]          	add ecx,[loop_i]
   728 000004AD 6BC904                  	imul ecx,4
   729 000004B0 034C2404                	add ecx,[esp+4]
   730 000004B4 8B11                    	mov edx,[ecx]
   731                                  	
   732 000004B6 8910                    	mov [eax],edx
   733 000004B8 8919                    	mov [ecx],ebx
   734                                  
   735                                  	;end swapping
   736                                  
   737                                  
   738 000004BA A1[9B000000]            	mov eax,[loop_j]
   739 000004BF 83C001                  	add eax,1
   740 000004C2 A3[9B000000]            	mov [loop_j],eax
   741                                  
   742 000004C7 8B1D[97000000]          	mov ebx,[loop_i]
   743 000004CD 39D8                    	cmp eax,ebx
   744 000004CF 7EB2                    	jle tl_2
   745                                  
   746                                  tl2_out:
   747                                  
   748 000004D1 C705[9B000000]0000-     	mov dword [loop_j],0
   749 000004D9 0000               
   750                                  
   751 000004DB A1[97000000]            	mov eax,[loop_i]
   752 000004E0 83C001                  	add eax,1
   753 000004E3 A3[97000000]            	mov [loop_i],eax
   754                                  
   755 000004E8 8B5C2408                	mov ebx,[esp+8]
   756 000004EC 39D8                    	cmp eax,ebx
   757                                  
   758 000004EE 7C93                    	jl tl_1
   759                                  
   760                                  tl1_out:
   761                                  
   762 000004F0 C3                      	ret;;
   763                                  
