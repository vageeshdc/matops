     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  SECTION .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21 00000046 000000000000000000-     	arr4: dd 0,0,0,0
    22 0000004F 00000000000000     
    23 00000056 010000000000000000-     	arr5: dd 1,0,0,1
    24 0000005F 00000001000000     
    25                                  
    26 00000066 207C2025642000          	format: db " | %d ",0
    27 0000006D 207C200A00              	format2: db " | ",10,0
    28 00000072 2074696D652074616B-     	format3: db " time taken %lld cycles .. ",10,0
    29 0000007B 656E20256C6C642063-
    30 00000084 79636C6573202E2E20-
    31 0000008D 0A00               
    32                                  
    33 0000008F 00000000                	CHval: dd 0
    34 00000093 00000000                	CLval: dd 0
    35                                  
    36 00000097 00000000                	loop_i: dd 0
    37 0000009B 00000000                	loop_j: dd 0
    38                                  	
    39 0000009F 00000000                	aVec: dd 0
    40 000000A3 00000000                	bVec: dd 0
    41                                  	
    42 000000A7 00000000                	aOff: dd 0
    43 000000AB 00000000                	bOff: dd 0
    44 000000AF 00000000                	cOff: dd 0
    45                                  
    46 000000B3 00000000                	aOff2: dd 0
    47 000000B7 00000000                	bOff2: dd 0
    48 000000BB 00000000                	cOff2: dd 0
    49                                  
    50 000000BF 00000000                	lop_i: dd 0
    51 000000C3 00000000                	lop_j: dd 0
    52 000000C7 00000000                	lop_k: dd 0
    53                                  	
    54 000000CB 00000000                	Av: dd 0
    55 000000CF 00000000                	Bv: dd 0
    56 000000D3 00000000                	Cv: dd 0
    57 000000D7 00000000                	Dv: dd 0
    58 000000DB 00000000                	Nval: dd 0
    59 000000DF 00000000                	Bval: dd 0
    60                                  
    61 000000E3 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    62 000000EC 000000040000000500-
    63 000000F5 000006000000070000-
    64 000000FE 000800000009000000-
    65 00000107 0A0000000B0000000C-
    66 00000110 0000000D0000000E00-
    67 00000119 00000F000000100000-
    68 00000122 00                 
    69 00000123 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    70 0000012C 000000040000000500-
    71 00000135 000006000000070000-
    72 0000013E 000800000009000000-
    73 00000147 0A0000000B0000000C-
    74 00000150 0000000D0000000E00-
    75 00000159 00000F000000100000-
    76 00000162 00                 
    77 00000163 010000000000000000-     	BB1: dd 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1
    78 0000016C 000000000000000000-
    79 00000175 000001000000000000-
    80 0000017E 000000000000000000-
    81 00000187 000000000100000000-
    82 00000190 000000000000000000-
    83 00000199 000000000000010000-
    84 000001A2 00                 
    85 000001A3 000000000000000000-     	BB2: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    86 000001AC 000000000000000000-
    87 000001B5 000000000000000000-
    88 000001BE 000000000000000000-
    89 000001C7 000000000000000000-
    90 000001D0 000000000000000000-
    91 000001D9 000000000000000000-
    92 000001E2 00                 
    93                                  
    94 000001E3 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    95 000001EC 000000000000000000-
    96 000001F5 000000000000000000-
    97 000001FE 000000000000000000-
    98 00000207 000000000000000000-
    99 00000210 000000000000000000-
   100 00000219 000000000000000000-
   101 00000222 00                 
   102                                  
   103 00000223 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   104 0000022C 000000000000000000-
   105 00000235 000000000000000000-
   106 0000023E 000000000000000000-
   107 00000247 000000000000000000-
   108 00000250 000000000000000000-
   109 00000259 000000000000000000-
   110 00000262 000000000000000000-
   111 0000026B 000000000000000000-
   112 00000274 000000000000000000-
   113 0000027D 000000000000000000-
   114 00000286 000000000000000000-
   115 0000028F 000000000000000000-
   116 00000298 000000000000000000-
   117 000002A1 0000               
   118                                  
   119 000002A3 00000000                	i1: dd 0
   120 000002A7 00000000                	j1: dd 0
   121 000002AB 00000000                	k1: dd 0
   122 000002AF 00000000                	k1_t: dd 0
   123                                  
   124 000002B3 00000000                	i2: dd 0
   125 000002B7 00000000                	j2: dd 0
   126 000002BB 00000000                	k2: dd 0
   127 000002BF 00000000                	ia2: dd 0
   128 000002C3 00000000                	ja2: dd 0
   129 000002C7 00000000                	ib2: dd 0
   130 000002CB 00000000                	jb2: dd 0
   131 000002CF 00000000                	ic2: dd 0
   132 000002D3 00000000                	jc2: dd 0
   133 000002D7 00000000                	k2_t: dd 0
   134 000002DB 00000000                	av2: dd 0
   135 000002DF 00000000                	bv2: dd 0
   136 000002E3 00000000                	cv2: dd 0
   137                                  
   138 000002E7 00000000                	i3: dd 0
   139 000002EB 00000000                	j3: dd 0
   140 000002EF 00000000                	k3: dd 0
   141                                  
   142 000002F3 00000000                	W1: dd 0
   143 000002F7 00000000                	W2: dd 0
   144 000002FB 00000000                	W3: dd 0
   145                                  
   146 000002FF 00000000                	bi: dd 0
   147 00000303 00000000                	bj: dd 0
   148 00000307 00000000                	bk: dd 0
   149                                  
   150                                  SECTION .text
   151                                  	global main
   152                                  	extern printf
   153                                  
   154                                  main:
   155                                  
   156                                  	;getting initial time
   157 00000000 31C0                    	xor eax,eax
   158                                  	
   159 00000002 0FA2                    	cpuid
   160 00000004 0F31                    	rdtsc
   161                                  
   162 00000006 8915[8F000000]          	mov [CHval],edx
   163 0000000C A3[93000000]            	mov [CLval],eax
   164                                  
   165                                  	;transporse
   166 00000011 B804000000              	mov eax,4
   167 00000016 50                      	push eax
   168 00000017 B8[E3000000]            	mov eax,AA
   169 0000001C 50                      	push eax
   170 0000001D E80E060000              	call trans_mat_2d
   171                                  
   172 00000022 B804000000              	mov eax,4
   173 00000027 50                      	push eax
   174 00000028 B8[23010000]            	mov eax,BB
   175 0000002D 50                      	push eax
   176 0000002E E8FD050000              	call trans_mat_2d
   177                                  	;end of transpose
   178                                  
   179                                  	;bj
   180 00000033 B802000000              	mov eax,2
   181 00000038 50                      	push eax
   182                                  
   183                                  	;bk
   184 00000039 B802000000              	mov eax,2
   185 0000003E 50                      	push eax
   186                                  	
   187                                  	;bi
   188 0000003F B802000000              	mov eax,2
   189 00000044 50                      	push eax
   190                                  
   191                                  	;j
   192 00000045 B804000000              	mov eax,4
   193 0000004A 50                      	push eax
   194                                  
   195                                  	;k
   196 0000004B B804000000              	mov eax,4
   197 00000050 50                          push eax
   198                                  
   199                                  	;i
   200 00000051 B804000000              	mov eax,4
   201 00000056 50                      	push eax
   202                                  
   203                                  	;D
   204 00000057 B8[23020000]            	mov eax,DD
   205 0000005C 50                      	push eax
   206                                  
   207                                  	;C
   208 0000005D B8[E3010000]            	mov eax,CC
   209 00000062 50                      	push eax
   210                                  
   211                                  	;B
   212 00000063 B8[E3000000]            	mov eax,AA
   213 00000068 50                      	push eax
   214                                  
   215                                  	;A
   216 00000069 B8[23010000]            	mov eax,BB
   217 0000006E 50                      	push eax
   218                                  
   219 0000006F E8C2000000              	call mult_block_2d
   220                                  
   221                                  	;transporse
   222 00000074 B804000000              	mov eax,4
   223 00000079 50                      	push eax
   224 0000007A B8[E3010000]            	mov eax,CC
   225 0000007F 50                      	push eax
   226 00000080 E8AB050000              	call trans_mat_2d
   227                                  
   228                                  
   229                                  print_timer:
   230                                  	;;getting later time
   231                                  
   232 00000085 31C0                    	xor eax,eax
   233                                  	
   234 00000087 0FA2                    	cpuid
   235 00000089 0F31                    	rdtsc
   236                                  
   237 0000008B 2B05[93000000]          	sub eax,[CLval]
   238 00000091 2B15[8F000000]          	sub edx,[CHval]
   239                                  
   240 00000097 50                      	push eax
   241 00000098 52                      	push edx
   242 00000099 68[72000000]            	push format3
   243 0000009E E8(00000000)            	call printf
   244                                  
   245                                  	;; print the matrix C
   246                                  
   247 000000A3 B804000000              	mov eax,4
   248 000000A8 A3[BF000000]            	mov [lop_i],eax
   249                                  
   250 000000AD BB00000000              	mov ebx,0
   251 000000B2 891D[97000000]          	mov [loop_i],ebx
   252 000000B8 891D[9B000000]          	mov [loop_j],ebx
   253                                  
   254                                  pl1:
   255                                  
   256                                  pl2:
   257                                  
   258                                  	;; print to screen
   259                                  
   260 000000BE 8B0D[97000000]          	mov ecx,[loop_i]
   261 000000C4 0FAF0D[BF000000]        	imul ecx,[lop_i]
   262 000000CB 030D[9B000000]          	add ecx,[loop_j]
   263 000000D1 6BC904                  	imul ecx,4
   264 000000D4 81C1[46000000]          	add ecx,arr4
   265                                  	
   266 000000DA 8B01                    	mov eax,[ecx]
   267 000000DC 50                      	push eax
   268 000000DD 68[66000000]            	push format
   269 000000E2 E8(00000000)            	call printf
   270                                  
   271                                  	;;end of print
   272                                  
   273                                  	;update
   274                                  	
   275 000000E7 8B1D[9B000000]          	mov ebx,[loop_j]
   276 000000ED 83C301                  	add ebx,1
   277 000000F0 891D[9B000000]          	mov [loop_j],ebx
   278                                  
   279 000000F6 3B1D[BF000000]          	cmp ebx,[lop_i]
   280 000000FC 7CC0                    	jl pl2
   281                                  
   282                                  pl2_out:
   283                                  
   284                                  	;new line print
   285                                  
   286 000000FE 68[6D000000]            	push format2
   287 00000103 E8(00000000)            	call printf
   288                                  	;;
   289                                  
   290 00000108 BB00000000              	mov ebx,0
   291 0000010D 891D[9B000000]          	mov [loop_j],ebx
   292                                  
   293 00000113 8B1D[97000000]          	mov ebx,[loop_i]
   294 00000119 83C301                  	add ebx,1
   295 0000011C 891D[97000000]          	mov [loop_i],ebx
   296                                  
   297 00000122 3B1D[BF000000]          	cmp ebx,[lop_i]
   298 00000128 7C94                    	jl pl1
   299                                  
   300                                  pl1_out:
   301                                  
   302                                  	;; end of print bye
   303                                  
   304 0000012A B801000000              	mov eax,1
   305 0000012F BB00000000              	mov ebx,0
   306 00000134 CD80                    	int 80h
   307                                  
   308                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   309                                  
   310                                  mult_block_2d:
   311                                  
   312                                  	;the params are A[],B[],C[],D[],i,k,j,bi,bk,bj
   313                                  	; A,B are the ip C is the OP
   314                                  	; D is the dummy iX[jXk]
   315                                  	; i j k is the dimension
   316                                  	; bi bj is the block parameter
   317                                  
   318 00000136 8B442404                	mov eax,[esp+4]
   319 0000013A A3[CB000000]            	mov [Av],eax
   320                                  
   321 0000013F 8B442408                	mov eax,[esp+8]
   322 00000143 A3[CF000000]            	mov [Bv],eax
   323                                  
   324 00000148 8B44240C                	mov eax,[esp+12]
   325 0000014C A3[D3000000]            	mov [Cv],eax
   326                                  
   327 00000151 8B442410                	mov eax,[esp+16]
   328 00000155 A3[D7000000]            	mov [Dv],eax
   329                                  
   330 0000015A 8B442414                	mov eax,[esp+20]
   331 0000015E A3[A3020000]            	mov [i1],eax
   332                                  
   333 00000163 8B442418                	mov eax,[esp+24]
   334 00000167 A3[AB020000]            	mov [k1],eax
   335                                  	
   336 0000016C 8B44241C                	mov eax,[esp+28]
   337 00000170 A3[A7020000]            	mov [j1],eax
   338                                  
   339 00000175 8B442420                	mov eax,[esp+32]
   340 00000179 A3[FF020000]            	mov [bi],eax
   341                                  
   342 0000017E 8B442424                	mov eax,[esp+36]
   343 00000182 A3[07030000]            	mov [bk],eax
   344                                  
   345 00000187 8B442428                	mov eax,[esp+40]
   346 0000018B A3[03030000]            	mov [bj],eax
   347                                  
   348 00000190 A1[A3020000]            	mov eax,[i1]
   349 00000195 8B0D[FF020000]          	mov ecx,[bi]
   350 0000019B BA00000000              	mov edx,0
   351                                  	;donr specifically
   352 000001A0 F7F1                    	div ecx
   353                                  
   354 000001A2 83FA00                  	cmp edx,0
   355 000001A5 0F8584010000            	jne exit_error_noerror
   356                                  
   357 000001AB A1[A7020000]            	mov eax,[j1]
   358 000001B0 8B0D[03030000]          	mov ecx,[bj]
   359 000001B6 BA00000000              	mov edx,0
   360                                  	;donr specifically
   361 000001BB F7F1                    	div ecx
   362                                  
   363 000001BD 83FA00                  	cmp edx,0
   364 000001C0 0F8569010000            	jne exit_error_noerror
   365                                  
   366 000001C6 A1[AB020000]            	mov eax,[k1]
   367 000001CB 8B0D[07030000]          	mov ecx,[bk]
   368 000001D1 BA00000000              	mov edx,0
   369                                  	;donr specifically
   370 000001D6 F7F1                    	div ecx
   371                                  
   372 000001D8 83FA00                  	cmp edx,0
   373 000001DB 0F854E010000            	jne exit_error_noerror
   374                                  
   375                                  
   376                                  	;use lop_i,lop_j,lop_k
   377                                  	;ind ia ja ib jb ic jc id jd
   378                                  	
   379 000001E1 B800000000              	mov eax,0
   380 000001E6 A3[BF000000]            	mov [lop_i],eax
   381 000001EB A3[C3000000]            	mov [lop_j],eax
   382                                  
   383                                  
   384                                  l1:
   385                                  	
   386                                  l2:
   387 000001F0 B800000000              	mov eax,0
   388 000001F5 A3[C7000000]            	mov [lop_k],eax
   389                                  	
   390                                  l3:
   391                                  	
   392                                  	;;mult here
   393                                  	
   394                                  	;j
   395 000001FA A1[03030000]            	mov eax,[bj]
   396 000001FF 50                      	push eax
   397                                  
   398                                  	;k
   399 00000200 A1[07030000]            	mov eax,[bk]
   400 00000205 50                      	push eax
   401                                  
   402                                  	;i
   403 00000206 A1[FF020000]            	mov eax,[bi]
   404 0000020B 50                      	push eax
   405                                  
   406                                  	;jc
   407 0000020C A1[C7000000]            	mov eax,[lop_k]
   408 00000211 0FAF05[A7020000]        	imul eax,[j1]
   409 00000218 50                      	push eax
   410                                  
   411                                  	;ic
   412 00000219 B800000000              	mov eax,0
   413 0000021E 50                      	push eax
   414                                  
   415                                  	;jb
   416 0000021F A1[C3000000]            	mov eax,[lop_j]
   417 00000224 50                      	push eax
   418                                  
   419                                  	;ib
   420 00000225 A1[C7000000]            	mov eax,[lop_k]
   421 0000022A 50                      	push eax
   422                                  
   423                                  	;ja
   424 0000022B A1[C7000000]            	mov eax,[lop_k]
   425 00000230 50                      	push eax
   426                                  
   427                                  	;ia
   428 00000231 A1[BF000000]            	mov eax,[lop_i]
   429 00000236 50                      	push eax
   430                                  
   431                                  	;C
   432 00000237 A1[D7000000]            	mov eax,[Dv]
   433 0000023C 50                      	push eax
   434                                  
   435                                  	;b
   436 0000023D A1[CF000000]            	mov eax,[Bv]
   437 00000242 50                      	push eax
   438                                  
   439                                  	;a
   440 00000243 A1[CB000000]            	mov eax,[Av]
   441 00000248 50                      	push eax
   442                                  
   443                                  	;; call the function
   444 00000249 E8E2000000              	call mult_mat_2d
   445                                  
   446                                  	;; mult ends
   447                                  
   448 0000024E 58                      	pop eax
   449 0000024F 58                      	pop eax	
   450 00000250 58                      	pop eax
   451 00000251 58                      	pop eax	
   452 00000252 58                      	pop eax	
   453 00000253 58                      	pop eax	
   454 00000254 58                      	pop eax	
   455 00000255 58                      	pop eax	
   456 00000256 58                      	pop eax	
   457 00000257 58                      	pop eax	
   458 00000258 58                      	pop eax	
   459 00000259 58                      	pop eax
   460                                  
   461                                  	;loop management
   462 0000025A A1[C7000000]            	mov eax,[lop_k]
   463 0000025F 0305[07030000]          	add eax,[bk]
   464 00000265 A3[C7000000]            	mov [lop_k],eax
   465                                  
   466 0000026A 3B05[AB020000]          	cmp eax,[k1]
   467 00000270 7C88                    	jl l3
   468                                  
   469                                  l3_out:
   470                                  
   471                                  	;; add ops here
   472                                  	
   473 00000272 B800000000              	mov eax,0
   474 00000277 A3[C7000000]            	mov [lop_k],eax
   475                                  
   476                                  l4:
   477                                  
   478                                  	;; push ops
   479                                  
   480                                  	;j
   481 0000027C A1[03030000]            	mov eax,[bj]
   482 00000281 50                      	push eax
   483                                  
   484                                  	;i
   485 00000282 A1[FF020000]            	mov eax,[bi]
   486 00000287 50                      	push eax
   487                                  
   488                                  	;jc
   489 00000288 A1[C3000000]            	mov eax,[lop_j]
   490 0000028D 50                      	push eax
   491                                  
   492                                  	;ic
   493 0000028E A1[BF000000]            	mov eax,[lop_i]
   494 00000293 50                      	push eax
   495                                  
   496                                  	;jb
   497 00000294 A1[C7000000]            	mov eax,[lop_k]
   498 00000299 0FAF05[A7020000]        	imul eax,[j1]
   499 000002A0 50                      	push eax
   500                                  
   501                                  	;ib
   502 000002A1 B800000000              	mov eax,0
   503 000002A6 50                      	push eax
   504                                  
   505                                  	;ja
   506 000002A7 A1[C3000000]            	mov eax,[lop_j]
   507 000002AC 50                      	push eax
   508                                  
   509                                  	;ia
   510 000002AD A1[BF000000]            	mov eax,[lop_i]
   511 000002B2 50                      	push eax
   512                                  
   513                                  	;C
   514 000002B3 A1[D3000000]            	mov eax,[Cv]
   515 000002B8 50                      	push eax
   516                                  
   517                                  	;b
   518 000002B9 A1[D7000000]            	mov eax,[Dv]
   519 000002BE 50                      	push eax
   520                                  
   521                                  	;a
   522 000002BF A1[D3000000]            	mov eax,[Cv]
   523 000002C4 50                      	push eax
   524                                  
   525                                  	;; call
   526 000002C5 E815020000              	call add_mat_2d
   527                                  
   528                                  	;;end of pushops
   529                                  	
   530 000002CA 58                      	pop eax
   531 000002CB 58                      	pop eax	
   532 000002CC 58                      	pop eax
   533 000002CD 58                      	pop eax	
   534 000002CE 58                      	pop eax	
   535 000002CF 58                      	pop eax	
   536 000002D0 58                      	pop eax	
   537 000002D1 58                      	pop eax	
   538 000002D2 58                      	pop eax	
   539 000002D3 58                      	pop eax	
   540 000002D4 58                      	pop eax	
   541                                  
   542 000002D5 A1[C7000000]            	mov eax,[lop_k]
   543 000002DA 0305[07030000]          	add eax,[bk]
   544 000002E0 A3[C7000000]            	mov [lop_k],eax
   545                                  
   546 000002E5 3B05[AB020000]          	cmp eax,[k1]
   547 000002EB 7C8F                    	jl l4
   548                                  
   549                                  l4_out:
   550                                  
   551                                  	;; end of add ops
   552                                  
   553                                  
   554                                  
   555 000002ED A1[C3000000]            	mov eax,[lop_j]
   556 000002F2 0305[03030000]          	add eax,[bj]
   557 000002F8 A3[C3000000]            	mov [lop_j],eax
   558                                  
   559 000002FD 3B05[A7020000]          	cmp eax,[j1]
   560 00000303 0F8CE7FEFFFF            	jl l2
   561                                  
   562                                  l2_out:
   563                                  	
   564 00000309 B800000000              	mov eax,0
   565 0000030E A3[C3000000]            	mov [lop_j],eax
   566                                  
   567 00000313 A1[BF000000]            	mov eax,[lop_i]
   568 00000318 0305[FF020000]          	add eax,[bi]
   569 0000031E A3[BF000000]            	mov [lop_i],eax
   570                                  
   571 00000323 3B05[A3020000]          	cmp eax,[i1]
   572 00000329 0F8CC1FEFFFF            	jl l1
   573                                  
   574                                  l1_out:
   575                                  	
   576                                  
   577                                  exit_error_noerror:
   578 0000032F C3                      	ret;;
   579                                  
   580                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   581                                  
   582                                  mult_mat_2d:
   583                                  	
   584                                  	;args a[],b[],C[],ia,ja,ib,jb,ic,jc,i,k,j
   585                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   586                                  	;Wid is the Width of parent matrix
   587                                  	;Work under assumption that it is a square
   588                                  	; A,B,C are the references of parent matrices only
   589                                  
   590                                  
   591 00000330 8B442404                	mov eax,[esp+4]
   592 00000334 A3[DB020000]            	mov [av2],eax
   593                                  
   594 00000339 8B442408                	mov eax,[esp+8]
   595 0000033D A3[DF020000]            	mov [bv2],eax
   596                                  
   597 00000342 8B44240C                	mov eax,[esp+12]
   598 00000346 A3[E3020000]            	mov [cv2],eax
   599                                  
   600 0000034B 8B442410                	mov eax,[esp+16]
   601 0000034F A3[BF020000]            	mov [ia2],eax
   602                                  
   603 00000354 8B442414                	mov eax,[esp+20]
   604 00000358 A3[C3020000]            	mov [ja2],eax
   605                                  
   606 0000035D 8B442418                	mov eax,[esp+24]
   607 00000361 A3[C7020000]            	mov [ib2],eax
   608                                  
   609 00000366 8B44241C                	mov eax,[esp+28]
   610 0000036A A3[CB020000]            	mov [jb2],eax
   611                                  
   612 0000036F 8B442420                	mov eax,[esp+32]
   613 00000373 A3[CF020000]            	mov [ic2],eax
   614                                  
   615 00000378 8B442424                	mov eax,[esp+36]
   616 0000037C A3[D3020000]            	mov [jc2],eax
   617                                  
   618 00000381 8B442428                	mov eax,[esp+40]
   619 00000385 A3[B3020000]            	mov [i2],eax
   620                                  
   621 0000038A 8B44242C                	mov eax,[esp+44]
   622 0000038E A3[BB020000]            	mov [k2],eax
   623                                  
   624 00000393 8B442430                	mov eax,[esp+48]
   625 00000397 A3[B7020000]            	mov [j2],eax
   626                                  
   627 0000039C A1[B3020000]            	mov eax,[i2]
   628 000003A1 83E801                  	sub eax,1
   629 000003A4 A3[97000000]            	mov dword [loop_i],eax
   630                                  
   631 000003A9 A1[B7020000]            	mov eax,[j2]
   632 000003AE 83E801                  	sub eax,1
   633 000003B1 A3[9B000000]            	mov dword [loop_j],eax
   634                                  
   635                                  	;done with setting loop variables
   636                                  	;push and pop eax for counter ops
   637                                  	
   638                                  	;find offset
   639                                  	
   640                                  	;;A's offset
   641 000003B6 8B15[BF020000]          	mov edx,[ia2]
   642                                  	;sub edx,1
   643 000003BC 0FAF15[BB020000]        	imul edx,[k2]
   644 000003C3 0315[C3020000]          	add edx,[ja2]
   645 000003C9 6BD204                  	imul edx,4
   646 000003CC 8915[A7000000]          	mov [aOff],edx
   647                                  	
   648                                  	;;B's offset
   649 000003D2 8B15[C7020000]          	mov edx,[ib2]
   650                                  	;sub edx,1
   651 000003D8 0FAF15[B7020000]        	imul edx,[j2]
   652 000003DF 0315[CB020000]          	add edx,[jb2]
   653 000003E5 6BD204                  	imul edx,4
   654 000003E8 8915[AB000000]          	mov [bOff],edx
   655                                  	
   656                                  	;;C's offset
   657 000003EE 8B15[CF020000]          	mov edx,[ic2]
   658                                  	;sub edx,1
   659 000003F4 0FAF15[B7020000]        	imul edx,[j2]
   660 000003FB 0315[D3020000]          	add edx,[jc2]
   661 00000401 6BD204                  	imul edx,4
   662 00000404 8915[AF000000]          	mov [cOff],edx
   663                                  	
   664                                  out_1:
   665                                  
   666                                  	;outer loop
   667                                  out_2:
   668                                  
   669                                  	;inner loop
   670                                  
   671                                  	;current B off
   672 0000040A A1[9B000000]            	mov eax,[loop_j]
   673 0000040F 6BC004                  	imul eax,4
   674 00000412 0305[DF020000]          	add eax,[bv2]
   675 00000418 0305[AB000000]          	add eax,[bOff]
   676 0000041E A3[A3000000]            	mov dword [bVec],eax
   677                                  
   678                                  	;current A off
   679 00000423 A1[97000000]            	mov eax,[loop_i]
   680 00000428 0FAF05[BB020000]        	imul eax,[k2]
   681 0000042F 6BC004                  	imul eax,4
   682 00000432 0305[DB020000]          	add eax,[av2]
   683 00000438 0305[A7000000]          	add eax,[aOff]
   684 0000043E A3[9F000000]            	mov dword [aVec],eax
   685                                  	
   686                                  	;;;row multiplication ops here...
   687                                  	
   688 00000443 BB00000000              	mov ebx,0
   689 00000448 8B0D[BB020000]          	mov ecx,[k2]
   690 0000044E 83E901                  	sub ecx,1
   691                                  	
   692                                  out_3:	
   693 00000451 89C8                    	mov eax,ecx
   694 00000453 0FAF05[B7020000]        	imul eax,[j2]
   695 0000045A 6BC004                  	imul eax,4
   696 0000045D 0305[A3000000]          	add dword eax,[bVec]
   697 00000463 8B10                    	mov edx,[eax]
   698                                  
   699 00000465 A1[9F000000]            	mov eax,[aVec]
   700 0000046A 51                      	push ecx
   701 0000046B 6BC904                  	imul ecx,4
   702 0000046E 01C8                    	add eax,ecx
   703 00000470 59                      	pop ecx
   704                                  
   705 00000471 0FAF10                  	imul edx,[eax]
   706 00000474 01D3                    	add ebx,edx
   707 00000476 83E901                  	sub ecx,1
   708                                  	
   709 00000479 83F900                  	cmp ecx,0
   710 0000047C 7DD3                    	jge out_3
   711                                  
   712                                  out_3_exit:
   713                                  	
   714                                      ;;;end of row op...
   715                                  	
   716 0000047E 89DA                    	mov edx,ebx
   717                                  
   718                                  	;writing result of C
   719 00000480 A1[97000000]            	mov eax,[loop_i]
   720 00000485 0FAF05[B7020000]        	imul eax,[j2]
   721 0000048C 8B1D[9B000000]          	mov ebx,[loop_j]
   722 00000492 01D8                    	add eax,ebx
   723 00000494 6BC004                  	imul eax,4
   724 00000497 0305[AF000000]          	add eax,[cOff]
   725 0000049D 0305[E3020000]          	add eax,[cv2]
   726 000004A3 8910                    	mov [eax],edx
   727                                  	
   728 000004A5 A1[9B000000]            	mov eax,[loop_j]
   729 000004AA 83E801                  	sub eax,1
   730 000004AD A3[9B000000]            	mov dword [loop_j],eax
   731                                  
   732 000004B2 83F800                  	cmp eax,0
   733                                  
   734 000004B5 0F8D4FFFFFFF            	jge out_2
   735                                  
   736                                  out_2_end:
   737                                  
   738                                  
   739 000004BB A1[B7020000]            	mov eax,[j2]
   740 000004C0 83E801                  	sub eax,1
   741 000004C3 A3[9B000000]            	mov dword [loop_j],eax
   742                                  
   743 000004C8 A1[97000000]            	mov eax,[loop_i]
   744 000004CD 83E801                  	sub eax,1
   745 000004D0 A3[97000000]            	mov [loop_i],eax
   746                                  
   747 000004D5 83F800                  	cmp eax,0
   748                                  
   749 000004D8 0F8D2CFFFFFF            	jge out_1
   750                                  
   751                                  out_1_end:
   752                                  
   753 000004DE C3                      	ret;
   754                                  	;end of the procedure
   755                                  
   756                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   757                                  
   758                                  add_mat_2d:
   759                                  	;arr A[],B[],C[],ia,ja,ib,jb,ic,jc,i,j
   760                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   761                                  	;Wid is the Width of parent matrix
   762                                  	;Work under assumption that it is a square
   763                                  	; A,B,C are the references of parent matrices only
   764                                  
   765                                  
   766 000004DF 8B442404                	mov eax,[esp+4]
   767 000004E3 A3[DB020000]            	mov [av2],eax
   768                                  
   769 000004E8 8B442408                	mov eax,[esp+8]
   770 000004EC A3[DF020000]            	mov [bv2],eax
   771                                  
   772 000004F1 8B44240C                	mov eax,[esp+12]
   773 000004F5 A3[E3020000]            	mov [cv2],eax
   774                                  
   775 000004FA 8B442410                	mov eax,[esp+16]
   776 000004FE A3[BF020000]            	mov [ia2],eax
   777                                  
   778 00000503 8B442414                	mov eax,[esp+20]
   779 00000507 A3[C3020000]            	mov [ja2],eax
   780                                  
   781 0000050C 8B442418                	mov eax,[esp+24]
   782 00000510 A3[C7020000]            	mov [ib2],eax
   783                                  
   784 00000515 8B44241C                	mov eax,[esp+28]
   785 00000519 A3[CB020000]            	mov [jb2],eax
   786                                  
   787 0000051E 8B442420                	mov eax,[esp+32]
   788 00000522 A3[CF020000]            	mov [ic2],eax
   789                                  
   790 00000527 8B442424                	mov eax,[esp+36]
   791 0000052B A3[D3020000]            	mov [jc2],eax
   792                                  
   793 00000530 8B442428                	mov eax,[esp+40]
   794 00000534 A3[B3020000]            	mov [i2],eax
   795                                  
   796 00000539 8B44242C                	mov eax,[esp+44]
   797 0000053D A3[B7020000]            	mov [j2],eax
   798                                  
   799                                  
   800                                  	;find offset
   801                                  	
   802                                  	;;A's offset
   803 00000542 8B15[BF020000]          	mov edx,[ia2]
   804 00000548 0FAF15[B7020000]        	imul edx,[j2]
   805 0000054F 0315[C3020000]          	add edx,[ja2]
   806 00000555 6BD204                  	imul edx,4
   807 00000558 8915[B3000000]          	mov [aOff2],edx
   808                                  	
   809                                  	;;B's offset
   810 0000055E 8B15[C7020000]          	mov edx,[ib2]
   811 00000564 0FAF15[B7020000]        	imul edx,[j2]
   812 0000056B 0315[CB020000]          	add edx,[jb2]
   813 00000571 6BD204                  	imul edx,4
   814 00000574 8915[B7000000]          	mov [bOff2],edx
   815                                  	
   816                                  	;;C's offset
   817 0000057A 8B15[CF020000]          	mov edx,[ic2]
   818 00000580 0FAF15[B7020000]        	imul edx,[j2]
   819 00000587 0315[D3020000]          	add edx,[jc2]
   820 0000058D 6BD204                  	imul edx,4
   821 00000590 8915[BB000000]          	mov [cOff2],edx
   822                                  	
   823 00000596 A1[B3020000]            	mov eax,[i2]
   824 0000059B 83E801                  	sub eax,1
   825 0000059E A3[97000000]            	mov [loop_i],eax
   826                                  
   827 000005A3 A1[B7020000]            	mov eax,[j2]
   828 000005A8 83E801                  	sub eax,1
   829 000005AB A3[9B000000]            	mov [loop_j],eax
   830                                  
   831                                  out_1a:
   832                                  	
   833                                  out_2a:
   834                                  	
   835                                  	;;addition logic
   836                                  	
   837                                  	;common offset
   838 000005B0 8B1D[97000000]          	mov ebx,[loop_i]
   839 000005B6 0FAF1D[B7020000]        	imul ebx,[j2]
   840 000005BD 031D[9B000000]          	add ebx,[loop_j]
   841 000005C3 6BDB04                  	imul ebx,4
   842                                  
   843                                  	;get B[]
   844 000005C6 8B0D[DF020000]          	mov ecx,[bv2]
   845 000005CC 01D9                    	add ecx,ebx
   846 000005CE 030D[B7000000]          	add ecx,[bOff2]
   847 000005D4 8B01                    	mov eax,[ecx]
   848                                  
   849                                  	;add A[]
   850 000005D6 8B0D[DB020000]          	mov ecx,[av2]
   851 000005DC 01D9                    	add ecx,ebx
   852 000005DE 030D[B3000000]          	add ecx,[aOff2]
   853 000005E4 0301                    	add eax,[ecx]
   854                                  
   855                                  	;store to C[]
   856 000005E6 8B0D[E3020000]          	mov ecx,[cv2]
   857 000005EC 01D9                    	add ecx,ebx
   858 000005EE 030D[BB000000]          	add ecx,[cOff2]
   859 000005F4 8901                    	mov [ecx],eax
   860                                  
   861                                  	;;end of addition
   862                                  
   863 000005F6 A1[9B000000]            	mov eax,[loop_j]
   864 000005FB 83E801                  	sub eax,1
   865 000005FE A3[9B000000]            	mov [loop_j],eax
   866                                  
   867 00000603 83F800                  	cmp eax,0
   868 00000606 0F8DFEFDFFFF            	jge out_2
   869                                  
   870                                  out_2a_end:
   871                                  	
   872 0000060C A1[B7020000]            	mov eax,[j2]
   873 00000611 83E801                  	sub eax,1
   874 00000614 A3[9B000000]            	mov [loop_j],eax
   875                                  
   876 00000619 A1[97000000]            	mov eax,[loop_i]
   877 0000061E 83E801                  	sub eax,1
   878 00000621 A3[97000000]            	mov [loop_i],eax
   879                                  
   880 00000626 83F800                  	cmp eax,0
   881 00000629 0F8DDBFDFFFF            	jge out_1
   882                                  
   883                                  out_1a_end:
   884                                  
   885 0000062F C3                      	ret;
   886                                  	;end of addition
   887                                  
   888                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   889                                  
   890                                  trans_mat_2d:
   891                                  	;args - A[],N
   892                                  	
   893 00000630 B800000000              	mov eax,0
   894 00000635 A3[97000000]            	mov [loop_i],eax
   895 0000063A A3[9B000000]            	mov [loop_j],eax
   896                                  
   897                                  tl_1:
   898                                  
   899                                  tl_2:
   900                                  	
   901                                  	;swap here
   902                                  
   903 0000063F A1[97000000]            	mov eax,[loop_i]
   904 00000644 0FAF442408              	imul eax,[esp+8]
   905 00000649 0305[9B000000]          	add eax,[loop_j]
   906 0000064F 6BC004                  	imul eax,4
   907 00000652 03442404                	add eax,[esp+4]
   908 00000656 8B18                    	mov ebx,[eax]
   909                                  	
   910 00000658 8B0D[9B000000]          	mov ecx,[loop_j]
   911 0000065E 0FAF4C2408              	imul ecx,[esp+8]
   912 00000663 030D[97000000]          	add ecx,[loop_i]
   913 00000669 6BC904                  	imul ecx,4
   914 0000066C 034C2404                	add ecx,[esp+4]
   915 00000670 8B11                    	mov edx,[ecx]
   916                                  	
   917 00000672 8910                    	mov [eax],edx
   918 00000674 8919                    	mov [ecx],ebx
   919                                  
   920                                  	;end swapping
   921                                  
   922                                  
   923 00000676 A1[9B000000]            	mov eax,[loop_j]
   924 0000067B 83C001                  	add eax,1
   925 0000067E A3[9B000000]            	mov [loop_j],eax
   926                                  
   927 00000683 3B05[97000000]          	cmp eax,[loop_i]
   928 00000689 7EB4                    	jle tl_2
   929                                  
   930                                  tl2_out:
   931                                  	
   932 0000068B B800000000              	mov eax,0
   933 00000690 A3[9B000000]            	mov [loop_j],eax
   934                                  
   935 00000695 A1[97000000]            	mov eax,[loop_i]
   936 0000069A 83C001                  	add eax,1
   937 0000069D A3[97000000]            	mov [loop_i],eax
   938                                  
   939 000006A2 3B442408                	cmp eax,[esp+8]
   940                                  
   941 000006A6 7C97                    	jl tl_1
   942                                  
   943                                  tl1_out:
   944                                  
   945 000006A8 C3                      	ret;;
   946                                  
