     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  SECTION .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21 00000046 000000000000000000-     	arr4: dd 0,0,0,0
    22 0000004F 00000000000000     
    23 00000056 010000000000000000-     	arr5: dd 1,0,0,1
    24 0000005F 00000001000000     
    25                                  
    26 00000066 207C2025642000          	format: db " | %d ",0
    27 0000006D 207C200A00              	format2: db " | ",10,0
    28 00000072 2074696D652074616B-     	format3: db " time taken %lld cycles .. ",10,0
    29 0000007B 656E20256C6C642063-
    30 00000084 79636C6573202E2E20-
    31 0000008D 0A00               
    32                                  
    33 0000008F 00000000                	CHval: dd 0
    34 00000093 00000000                	CLval: dd 0
    35                                  
    36 00000097 00000000                	loop_i: dd 0
    37 0000009B 00000000                	loop_j: dd 0
    38                                  	
    39 0000009F 00000000                	aVec: dd 0
    40 000000A3 00000000                	bVec: dd 0
    41                                  	
    42 000000A7 00000000                	aOff: dd 0
    43 000000AB 00000000                	bOff: dd 0
    44 000000AF 00000000                	cOff: dd 0
    45                                  
    46 000000B3 00000000                	aOff2: dd 0
    47 000000B7 00000000                	bOff2: dd 0
    48 000000BB 00000000                	cOff2: dd 0
    49                                  
    50 000000BF 00000000                	lop_i: dd 0
    51 000000C3 00000000                	lop_j: dd 0
    52 000000C7 00000000                	lop_k: dd 0
    53                                  	
    54 000000CB 00000000                	Av: dd 0
    55 000000CF 00000000                	Bv: dd 0
    56 000000D3 00000000                	Cv: dd 0
    57 000000D7 00000000                	Dv: dd 0
    58 000000DB 00000000                	Nval: dd 0
    59 000000DF 00000000                	Bval: dd 0
    60                                  
    61 000000E3 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    62 000000EC 000000040000000500-
    63 000000F5 000006000000070000-
    64 000000FE 000800000009000000-
    65 00000107 0A0000000B0000000C-
    66 00000110 0000000D0000000E00-
    67 00000119 00000F000000100000-
    68 00000122 00                 
    69 00000123 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    70 0000012C 000000040000000500-
    71 00000135 000006000000070000-
    72 0000013E 000800000009000000-
    73 00000147 0A0000000B0000000C-
    74 00000150 0000000D0000000E00-
    75 00000159 00000F000000100000-
    76 00000162 00                 
    77 00000163 010000000000000000-     	BB1: dd 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1
    78 0000016C 000000000000000000-
    79 00000175 000001000000000000-
    80 0000017E 000000000000000000-
    81 00000187 000000000100000000-
    82 00000190 000000000000000000-
    83 00000199 000000000000010000-
    84 000001A2 00                 
    85 000001A3 000000000000000000-     	BB2: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    86 000001AC 000000000000000000-
    87 000001B5 000000000000000000-
    88 000001BE 000000000000000000-
    89 000001C7 000000000000000000-
    90 000001D0 000000000000000000-
    91 000001D9 000000000000000000-
    92 000001E2 00                 
    93                                  
    94 000001E3 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    95 000001EC 000000000000000000-
    96 000001F5 000000000000000000-
    97 000001FE 000000000000000000-
    98 00000207 000000000000000000-
    99 00000210 000000000000000000-
   100 00000219 000000000000000000-
   101 00000222 00                 
   102                                  
   103 00000223 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   104 0000022C 000000000000000000-
   105 00000235 000000000000000000-
   106 0000023E 000000000000000000-
   107 00000247 000000000000000000-
   108 00000250 000000000000000000-
   109 00000259 000000000000000000-
   110 00000262 00                 
   111                                  
   112                                  SECTION .text
   113                                  	global main
   114                                  	extern printf
   115                                  
   116                                  main:
   117                                  
   118                                  	;getting initial time
   119 00000000 31C0                    	xor eax,eax
   120                                  	
   121 00000002 0FA2                    	cpuid
   122 00000004 0F31                    	rdtsc
   123                                  
   124 00000006 8915[8F000000]          	mov [CHval],edx
   125 0000000C A3[93000000]            	mov [CLval],eax
   126                                  
   127                                  	;transporse
   128 00000011 B804000000              	mov eax,4
   129 00000016 50                      	push eax
   130 00000017 B8[E3000000]            	mov eax,AA
   131 0000001C 50                      	push eax
   132 0000001D E87C040000              	call trans_mat_2d
   133                                  
   134 00000022 B804000000              	mov eax,4
   135 00000027 50                      	push eax
   136 00000028 B8[23010000]            	mov eax,BB
   137 0000002D 50                      	push eax
   138 0000002E E86B040000              	call trans_mat_2d
   139                                  	;end of transpose
   140                                  
   141                                  	;b
   142 00000033 B802000000              	mov eax,2
   143 00000038 50                          push eax
   144                                  
   145                                  	;N
   146 00000039 B804000000              	mov eax,4
   147 0000003E 50                      	push eax
   148                                  
   149                                  	;D
   150 0000003F B8[23020000]            	mov eax,DD
   151 00000044 50                      	push eax
   152                                  
   153                                  	;C
   154 00000045 B8[E3010000]            	mov eax,CC
   155 0000004A 50                      	push eax
   156                                  
   157                                  	;B
   158 0000004B B8[E3000000]            	mov eax,AA
   159 00000050 50                      	push eax
   160                                  
   161                                  	;A
   162 00000051 B8[23010000]            	mov eax,BB
   163 00000056 50                      	push eax
   164                                  
   165 00000057 E8C2000000              	call mult_block_2d
   166                                  
   167                                  	;transporse
   168 0000005C B804000000              	mov eax,4
   169 00000061 50                      	push eax
   170 00000062 B8[E3010000]            	mov eax,CC
   171 00000067 50                      	push eax
   172 00000068 E831040000              	call trans_mat_2d
   173                                  
   174                                  
   175                                  print_timer:
   176                                  	;;getting later time
   177                                  
   178 0000006D 31C0                    	xor eax,eax
   179                                  	
   180 0000006F 0FA2                    	cpuid
   181 00000071 0F31                    	rdtsc
   182                                  
   183 00000073 2B05[93000000]          	sub eax,[CLval]
   184 00000079 2B15[8F000000]          	sub edx,[CHval]
   185                                  
   186 0000007F 50                      	push eax
   187 00000080 52                      	push edx
   188 00000081 68[72000000]            	push format3
   189 00000086 E8(00000000)            	call printf
   190                                  
   191                                  	;; print the matrix C
   192                                  
   193 0000008B B804000000              	mov eax,4
   194 00000090 A3[BF000000]            	mov [lop_i],eax
   195                                  
   196 00000095 BB00000000              	mov ebx,0
   197 0000009A 891D[97000000]          	mov [loop_i],ebx
   198 000000A0 891D[9B000000]          	mov [loop_j],ebx
   199                                  
   200                                  pl1:
   201                                  
   202                                  pl2:
   203                                  
   204                                  	;; print to screen
   205                                  
   206 000000A6 8B0D[97000000]          	mov ecx,[loop_i]
   207 000000AC 0FAF0D[BF000000]        	imul ecx,[lop_i]
   208 000000B3 030D[9B000000]          	add ecx,[loop_j]
   209 000000B9 6BC904                  	imul ecx,4
   210 000000BC 81C1[46000000]          	add ecx,arr4
   211                                  	
   212 000000C2 8B01                    	mov eax,[ecx]
   213 000000C4 50                      	push eax
   214 000000C5 68[66000000]            	push format
   215 000000CA E8(00000000)            	call printf
   216                                  
   217                                  	;;end of print
   218                                  
   219                                  	;update
   220                                  	
   221 000000CF 8B1D[9B000000]          	mov ebx,[loop_j]
   222 000000D5 83C301                  	add ebx,1
   223 000000D8 891D[9B000000]          	mov [loop_j],ebx
   224                                  
   225 000000DE 3B1D[BF000000]          	cmp ebx,[lop_i]
   226 000000E4 7CC0                    	jl pl2
   227                                  
   228                                  pl2_out:
   229                                  
   230                                  	;new line print
   231                                  
   232 000000E6 68[6D000000]            	push format2
   233 000000EB E8(00000000)            	call printf
   234                                  	;;
   235                                  
   236 000000F0 BB00000000              	mov ebx,0
   237 000000F5 891D[9B000000]          	mov [loop_j],ebx
   238                                  
   239 000000FB 8B1D[97000000]          	mov ebx,[loop_i]
   240 00000101 83C301                  	add ebx,1
   241 00000104 891D[97000000]          	mov [loop_i],ebx
   242                                  
   243 0000010A 3B1D[BF000000]          	cmp ebx,[lop_i]
   244 00000110 7C94                    	jl pl1
   245                                  
   246                                  pl1_out:
   247                                  
   248                                  	;; end of print bye
   249                                  
   250 00000112 B801000000              	mov eax,1
   251 00000117 BB00000000              	mov ebx,0
   252 0000011C CD80                    	int 80h
   253                                  
   254                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   255                                  
   256                                  mult_block_2d:
   257                                  
   258                                  	;the params are A[],B[],C[],D[],N,b
   259                                  	; A,B are the ip C is the OP
   260                                  	; D is the dummy 
   261                                  	; N is the dimension
   262                                  	; b is the block parameter
   263                                  
   264 0000011E 8B442404                	mov eax,[esp+4]
   265 00000122 A3[CB000000]            	mov [Av],eax
   266                                  
   267 00000127 8B442408                	mov eax,[esp+8]
   268 0000012B A3[CF000000]            	mov [Bv],eax
   269                                  
   270 00000130 8B44240C                	mov eax,[esp+12]
   271 00000134 A3[D3000000]            	mov [Cv],eax
   272                                  
   273 00000139 8B442410                	mov eax,[esp+16]
   274 0000013D A3[D7000000]            	mov [Dv],eax
   275                                  
   276 00000142 8B442414                	mov eax,[esp+20]
   277 00000146 A3[DB000000]            	mov [Nval],eax
   278                                  
   279 0000014B 8B442418                	mov eax,[esp+24]
   280 0000014F A3[DF000000]            	mov [Bval],eax
   281                                  
   282 00000154 A1[DB000000]            	mov eax,[Nval]
   283 00000159 8B0D[DF000000]          	mov ecx,[Bval]
   284 0000015F BA00000000              	mov edx,0
   285                                  	;donr specifically
   286 00000164 F7F1                    	div ecx
   287                                  
   288 00000166 83FA00                  	cmp edx,0
   289 00000169 0F8539010000            	jne exit_error_noerror
   290                                  
   291                                  	;use lop_i,lop_j,lop_k
   292                                  	;ind ia ja ib jb ic jc id jd
   293                                  	
   294 0000016F B800000000              	mov eax,0
   295 00000174 A3[BF000000]            	mov [lop_i],eax
   296 00000179 A3[C3000000]            	mov [lop_j],eax
   297                                  
   298                                  
   299                                  l1:
   300                                  	
   301                                  l2:
   302 0000017E B800000000              	mov eax,0
   303 00000183 A3[C7000000]            	mov [lop_k],eax
   304                                  	
   305                                  l3:
   306                                  	
   307                                  	;;mult here
   308                                  	
   309                                  	;jc
   310 00000188 A1[C7000000]            	mov eax,[lop_k]
   311 0000018D 50                      	push eax
   312                                  
   313                                  	;ic
   314 0000018E B800000000              	mov eax,0
   315 00000193 50                      	push eax
   316                                  
   317                                  	;Wid
   318 00000194 A1[DB000000]            	mov eax,[Nval]
   319 00000199 50                      	push eax
   320                                  
   321                                  	;jb
   322 0000019A A1[C3000000]            	mov eax,[lop_j]
   323 0000019F 50                      	push eax
   324                                  
   325                                  	;ib
   326 000001A0 A1[C7000000]            	mov eax,[lop_k]
   327 000001A5 50                      	push eax
   328                                  
   329                                  	;ja
   330 000001A6 A1[C7000000]            	mov eax,[lop_k]
   331 000001AB 50                      	push eax
   332                                  
   333                                  	;ia
   334 000001AC A1[BF000000]            	mov eax,[lop_i]
   335 000001B1 50                      	push eax
   336                                  
   337                                  	;C
   338 000001B2 A1[D7000000]            	mov eax,[Dv]
   339 000001B7 50                      	push eax
   340                                  
   341                                  	;n
   342 000001B8 A1[DF000000]            	mov eax,[Bval]
   343 000001BD 50                      	push eax
   344                                  
   345                                  	;b
   346 000001BE A1[CF000000]            	mov eax,[Bv]
   347 000001C3 50                      	push eax
   348                                  
   349                                  	;a
   350 000001C4 A1[CB000000]            	mov eax,[Av]
   351 000001C9 50                      	push eax
   352                                  
   353                                  	;; call the function
   354 000001CA E8DA000000              	call mult_mat_2d
   355                                  
   356                                  	;; mult ends
   357                                  
   358 000001CF 58                      	pop eax
   359 000001D0 58                      	pop eax	
   360 000001D1 58                      	pop eax
   361 000001D2 58                      	pop eax	
   362 000001D3 58                      	pop eax	
   363 000001D4 58                      	pop eax	
   364 000001D5 58                      	pop eax	
   365 000001D6 58                      	pop eax	
   366 000001D7 58                      	pop eax	
   367 000001D8 58                      	pop eax	
   368 000001D9 58                      	pop eax	
   369                                  	
   370                                  	;loop management
   371 000001DA A1[C7000000]            	mov eax,[lop_k]
   372 000001DF 0305[DF000000]          	add eax,[Bval]
   373 000001E5 A3[C7000000]            	mov [lop_k],eax
   374                                  
   375 000001EA 3B05[DB000000]          	cmp eax,[Nval]
   376 000001F0 7C96                    	jl l3
   377                                  
   378                                  l3_out:
   379                                  
   380                                  	;; add ops here
   381                                  	
   382 000001F2 B800000000              	mov eax,0
   383 000001F7 A3[C7000000]            	mov [lop_k],eax
   384                                  
   385                                  l4:
   386                                  
   387                                  	;; push ops
   388                                  
   389                                  	;jc
   390 000001FC A1[C3000000]            	mov eax,[lop_j]
   391 00000201 50                      	push eax
   392                                  
   393                                  	;ic
   394 00000202 A1[BF000000]            	mov eax,[lop_i]
   395 00000207 50                      	push eax
   396                                  
   397                                  	;Wid
   398 00000208 A1[DB000000]            	mov eax,[Nval]
   399 0000020D 50                      	push eax
   400                                  
   401                                  	;jb
   402 0000020E A1[C3000000]            	mov eax,[lop_j]
   403 00000213 50                      	push eax
   404                                  
   405                                  	;ib
   406 00000214 A1[BF000000]            	mov eax,[lop_i]
   407 00000219 50                      	push eax
   408                                  
   409                                  	;ja
   410 0000021A A1[C7000000]            	mov eax,[lop_k]
   411 0000021F 50                      	push eax
   412                                  
   413                                  	;ia
   414 00000220 B800000000              	mov eax,0
   415 00000225 50                      	push eax
   416                                  
   417                                  	;C
   418 00000226 A1[D3000000]            	mov eax,[Cv]
   419 0000022B 50                      	push eax
   420                                  
   421                                  	;n
   422 0000022C A1[DF000000]            	mov eax,[Bval]
   423 00000231 50                      	push eax
   424                                  
   425                                  	;b
   426 00000232 A1[D3000000]            	mov eax,[Cv]
   427 00000237 50                      	push eax
   428                                  
   429                                  	;a
   430 00000238 A1[D7000000]            	mov eax,[Dv]
   431 0000023D 50                      	push eax
   432                                  
   433                                  	;; call
   434 0000023E E888010000              	call add_mat_2d
   435                                  
   436                                  	;;end of pushops
   437                                  	
   438 00000243 58                      	pop eax
   439 00000244 58                      	pop eax	
   440 00000245 58                      	pop eax
   441 00000246 58                      	pop eax	
   442 00000247 58                      	pop eax	
   443 00000248 58                      	pop eax	
   444 00000249 58                      	pop eax	
   445 0000024A 58                      	pop eax	
   446 0000024B 58                      	pop eax	
   447 0000024C 58                      	pop eax	
   448 0000024D 58                      	pop eax	
   449                                  
   450 0000024E A1[C7000000]            	mov eax,[lop_k]
   451 00000253 0305[DF000000]          	add eax,[Bval]
   452 00000259 A3[C7000000]            	mov [lop_k],eax
   453                                  
   454 0000025E 3B05[DB000000]          	cmp eax,[Nval]
   455 00000264 7C96                    	jl l4
   456                                  
   457                                  l4_out:
   458                                  
   459                                  	;; end of add ops
   460                                  
   461                                  
   462                                  
   463 00000266 A1[C3000000]            	mov eax,[lop_j]
   464 0000026B 0305[DF000000]          	add eax,[Bval]
   465 00000271 A3[C3000000]            	mov [lop_j],eax
   466                                  
   467 00000276 3B05[DB000000]          	cmp eax,[Nval]
   468 0000027C 0F8CFCFEFFFF            	jl l2
   469                                  
   470                                  l2_out:
   471                                  	
   472 00000282 B800000000              	mov eax,0
   473 00000287 A3[C3000000]            	mov [lop_j],eax
   474                                  
   475 0000028C A1[BF000000]            	mov eax,[lop_i]
   476 00000291 0305[DF000000]          	add eax,[Bval]
   477 00000297 A3[BF000000]            	mov [lop_i],eax
   478                                  
   479 0000029C 3B05[DB000000]          	cmp eax,[Nval]
   480 000002A2 0F8CD6FEFFFF            	jl l1
   481                                  
   482                                  l1_out:
   483                                  	
   484                                  
   485                                  exit_error_noerror:
   486 000002A8 C3                      	ret;;
   487                                  
   488                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   489                                  
   490                                  mult_mat_2d:
   491                                  	
   492                                  	;args a[],b[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   493                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   494                                  	;Wid is the Width of parent matrix
   495                                  	;Work under assumption that it is a square
   496                                  	; A,B,C are the references of parent matrices only
   497                                  	
   498 000002A9 8B44240C                	mov eax,[esp+12]
   499 000002AD 83E801                  	sub eax,1
   500                                  
   501 000002B0 A3[97000000]            	mov dword [loop_i],eax
   502 000002B5 A3[9B000000]            	mov dword [loop_j],eax
   503                                  	;done with setting loop variables
   504                                  	;push and pop eax for counter ops
   505                                  	
   506                                  	;find offset
   507                                  	
   508                                  	;;A's offset
   509 000002BA 8B542414                	mov edx,[esp+20]
   510 000002BE 83EA01                  	sub edx,1
   511 000002C1 0FAF542424              	imul edx,[esp+36]
   512 000002C6 03542418                	add edx,[esp+24]
   513 000002CA 6BD204                  	imul edx,4
   514 000002CD 8915[A7000000]          	mov [aOff],edx
   515                                  	
   516                                  	;;B's offset
   517 000002D3 8B54241C                	mov edx,[esp+28]
   518 000002D7 83EA01                  	sub edx,1
   519 000002DA 0FAF542424              	imul edx,[esp+36]
   520 000002DF 03542420                	add edx,[esp+32]
   521 000002E3 6BD204                  	imul edx,4
   522 000002E6 8915[AB000000]          	mov [bOff],edx
   523                                  	
   524                                  	;;C's offset
   525 000002EC 8B542428                	mov edx,[esp+40]
   526 000002F0 83EA01                  	sub edx,1
   527 000002F3 0FAF542424              	imul edx,[esp+36]
   528 000002F8 0354242C                	add edx,[esp+44]
   529 000002FC 6BD204                  	imul edx,4
   530 000002FF 8915[AF000000]          	mov [cOff],edx
   531                                  	
   532                                  out_1:
   533                                  
   534                                  	;outer loop
   535                                  out_2:
   536                                  
   537                                  	;inner loop
   538                                  
   539                                  	;current B off
   540 00000305 A1[9B000000]            	mov eax,[loop_j]
   541 0000030A 6BC004                  	imul eax,4
   542 0000030D 03442408                	add eax,[esp+8]
   543 00000311 0305[AB000000]          	add eax,[bOff]
   544 00000317 A3[A3000000]            	mov dword [bVec],eax
   545                                  
   546                                  	;current A off
   547 0000031C A1[97000000]            	mov eax,[loop_i]
   548 00000321 0FAF442424              	imul eax,[esp+36]
   549 00000326 6BC004                  	imul eax,4
   550 00000329 03442404                	add eax,[esp+4]
   551 0000032D 0305[A7000000]          	add eax,[aOff]
   552 00000333 A3[9F000000]            	mov dword [aVec],eax
   553                                  	
   554                                  	;;;row multiplication ops here...
   555                                  	
   556 00000338 BB00000000              	mov ebx,0
   557 0000033D 8B4C240C                	mov ecx,[esp+12]
   558 00000341 83E901                  	sub ecx,1
   559                                  	
   560                                  out_3:	
   561 00000344 89C8                    	mov eax,ecx
   562 00000346 0FAF442424              	imul eax,[esp+36]
   563 0000034B 6BC004                  	imul eax,4
   564 0000034E 0305[A3000000]          	add dword eax,[bVec]
   565 00000354 8B10                    	mov edx,[eax]
   566                                  
   567 00000356 A1[9F000000]            	mov eax,[aVec]
   568 0000035B 51                      	push ecx
   569 0000035C 6BC904                  	imul ecx,4
   570 0000035F 01C8                    	add eax,ecx
   571 00000361 59                      	pop ecx
   572                                  
   573 00000362 0FAF10                  	imul edx,[eax]
   574 00000365 01D3                    	add ebx,edx
   575 00000367 83E901                  	sub ecx,1
   576                                  	
   577 0000036A 83F900                  	cmp ecx,0
   578 0000036D 7DD5                    	jge out_3
   579                                  
   580                                  out_3_exit:
   581                                  	
   582                                      ;;;end of row op...
   583                                  	
   584 0000036F 89DA                    	mov edx,ebx
   585                                  
   586                                  	;writing result of C
   587 00000371 A1[97000000]            	mov eax,[loop_i]
   588 00000376 0FAF442424              	imul eax,[esp+36]
   589 0000037B 8B1D[9B000000]          	mov ebx,[loop_j]
   590 00000381 01D8                    	add eax,ebx
   591 00000383 6BC004                  	imul eax,4
   592 00000386 0305[AF000000]          	add eax,[cOff]
   593 0000038C 03442410                	add eax,[esp+16]
   594 00000390 8910                    	mov [eax],edx
   595                                  	
   596 00000392 A1[9B000000]            	mov eax,[loop_j]
   597 00000397 83E801                  	sub eax,1
   598 0000039A A3[9B000000]            	mov dword [loop_j],eax
   599                                  
   600 0000039F 83F800                  	cmp eax,0
   601                                  
   602 000003A2 0F8D5DFFFFFF            	jge out_2
   603                                  
   604                                  out_2_end:
   605                                  
   606                                  
   607 000003A8 8B44240C                	mov eax,[esp+12]
   608 000003AC 83E801                  	sub eax,1
   609 000003AF A3[9B000000]            	mov dword [loop_j],eax
   610                                  
   611 000003B4 A1[97000000]            	mov eax,[loop_i]
   612 000003B9 83E801                  	sub eax,1
   613 000003BC A3[97000000]            	mov [loop_i],eax
   614                                  
   615 000003C1 83F800                  	cmp eax,0
   616                                  
   617 000003C4 0F8D3BFFFFFF            	jge out_1
   618                                  
   619                                  out_1_end:
   620                                  
   621 000003CA C3                      	ret;
   622                                  	;end of the procedure
   623                                  
   624                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   625                                  
   626                                  add_mat_2d:
   627                                  	;arr A[],B[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   628                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   629                                  	;Wid is the Width of parent matrix
   630                                  	;Work under assumption that it is a square
   631                                  	; A,B,C are the references of parent matrices only
   632                                  
   633                                  
   634                                  	;find offset
   635                                  	
   636                                  	;;A's offset
   637 000003CB 8B542414                	mov edx,[esp+20]
   638 000003CF 83EA01                  	sub edx,1
   639 000003D2 0FAF542424              	imul edx,[esp+36]
   640 000003D7 03542418                	add edx,[esp+24]
   641 000003DB 6BD204                  	imul edx,4
   642 000003DE 8915[B3000000]          	mov [aOff2],edx
   643                                  	
   644                                  	;;B's offset
   645 000003E4 8B54241C                	mov edx,[esp+28]
   646 000003E8 83EA01                  	sub edx,1
   647 000003EB 0FAF542424              	imul edx,[esp+36]
   648 000003F0 03542420                	add edx,[esp+32]
   649 000003F4 6BD204                  	imul edx,4
   650 000003F7 8915[B7000000]          	mov [bOff2],edx
   651                                  	
   652                                  	;;C's offset
   653 000003FD 8B542428                	mov edx,[esp+40]
   654 00000401 83EA01                  	sub edx,1
   655 00000404 0FAF542424              	imul edx,[esp+36]
   656 00000409 0354242C                	add edx,[esp+44]
   657 0000040D 6BD204                  	imul edx,4
   658 00000410 8915[BB000000]          	mov [cOff2],edx
   659                                  	
   660 00000416 8B44240C                	mov eax,[esp+12]
   661 0000041A 83E801                  	sub eax,1
   662 0000041D A3[97000000]            	mov [loop_i],eax
   663 00000422 A3[9B000000]            	mov [loop_j],eax
   664                                  
   665                                  out_1a:
   666                                  	
   667                                  out_2a:
   668                                  	
   669                                  	;;addition logic
   670                                  	
   671                                  	;common offset
   672 00000427 8B1D[97000000]          	mov ebx,[loop_i]
   673 0000042D 0FAF5C2424              	imul ebx,[esp+36]
   674 00000432 031D[9B000000]          	add ebx,[loop_j]
   675 00000438 6BDB04                  	imul ebx,4
   676                                  
   677                                  	;get B[]
   678 0000043B 8B4C2408                	mov ecx,[esp+8]
   679 0000043F 01D9                    	add ecx,ebx
   680 00000441 030D[B7000000]          	add ecx,[bOff2]
   681 00000447 8B01                    	mov eax,[ecx]
   682                                  
   683                                  	;add A[]
   684 00000449 8B4C2404                	mov ecx,[esp+4]
   685 0000044D 01D9                    	add ecx,ebx
   686 0000044F 030D[B3000000]          	add ecx,[aOff2]
   687 00000455 0301                    	add eax,[ecx]
   688                                  
   689                                  	;store to C[]
   690 00000457 8B4C2410                	mov ecx,[esp+16]
   691 0000045B 01D9                    	add ecx,ebx
   692 0000045D 030D[BB000000]          	add ecx,[cOff2]
   693 00000463 8901                    	mov [ecx],eax
   694                                  
   695                                  	;;end of addition
   696                                  
   697 00000465 A1[9B000000]            	mov eax,[loop_j]
   698 0000046A 83E801                  	sub eax,1
   699 0000046D A3[9B000000]            	mov [loop_j],eax
   700                                  
   701 00000472 83F800                  	cmp eax,0
   702 00000475 0F8D8AFEFFFF            	jge out_2
   703                                  
   704                                  out_2a_end:
   705                                  	
   706 0000047B 8B44240C                	mov eax,[esp+12]
   707 0000047F 83E801                  	sub eax,1
   708 00000482 A3[9B000000]            	mov [loop_j],eax
   709                                  
   710 00000487 A1[97000000]            	mov eax,[loop_i]
   711 0000048C 83E801                  	sub eax,1
   712 0000048F A3[97000000]            	mov [loop_i],eax
   713                                  
   714 00000494 83F800                  	cmp eax,0
   715 00000497 0F8D68FEFFFF            	jge out_1
   716                                  
   717                                  out_1a_end:
   718                                  
   719 0000049D C3                      	ret;
   720                                  	;end of addition
   721                                  
   722                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   723                                  
   724                                  trans_mat_2d:
   725                                  	;args - A[],N
   726                                  	
   727 0000049E B800000000              	mov eax,0
   728 000004A3 A3[97000000]            	mov [loop_i],eax
   729 000004A8 A3[9B000000]            	mov [loop_j],eax
   730                                  
   731                                  tl_1:
   732                                  
   733                                  tl_2:
   734                                  	
   735                                  	;swap here
   736                                  
   737 000004AD A1[97000000]            	mov eax,[loop_i]
   738 000004B2 0FAF442408              	imul eax,[esp+8]
   739 000004B7 0305[9B000000]          	add eax,[loop_j]
   740 000004BD 6BC004                  	imul eax,4
   741 000004C0 03442404                	add eax,[esp+4]
   742 000004C4 8B18                    	mov ebx,[eax]
   743                                  	
   744 000004C6 8B0D[9B000000]          	mov ecx,[loop_j]
   745 000004CC 0FAF4C2408              	imul ecx,[esp+8]
   746 000004D1 030D[97000000]          	add ecx,[loop_i]
   747 000004D7 6BC904                  	imul ecx,4
   748 000004DA 034C2404                	add ecx,[esp+4]
   749 000004DE 8B11                    	mov edx,[ecx]
   750                                  	
   751 000004E0 8910                    	mov [eax],edx
   752 000004E2 8919                    	mov [ecx],ebx
   753                                  
   754                                  	;end swapping
   755                                  
   756                                  
   757 000004E4 A1[9B000000]            	mov eax,[loop_j]
   758 000004E9 83C001                  	add eax,1
   759 000004EC A3[9B000000]            	mov [loop_j],eax
   760                                  
   761 000004F1 8B1D[97000000]          	mov ebx,[loop_i]
   762 000004F7 39D8                    	cmp eax,ebx
   763 000004F9 7EB2                    	jle tl_2
   764                                  
   765                                  tl2_out:
   766                                  	
   767 000004FB B800000000              	mov eax,0
   768 00000500 A3[9B000000]            	mov [loop_j],eax
   769                                  
   770 00000505 A1[97000000]            	mov eax,[loop_i]
   771 0000050A 83C001                  	add eax,1
   772 0000050D A3[97000000]            	mov [loop_i],eax
   773                                  
   774 00000512 8B5C2408                	mov ebx,[esp+8]
   775 00000516 39D8                    	cmp eax,ebx
   776                                  
   777 00000518 7C93                    	jl tl_1
   778                                  
   779                                  tl1_out:
   780                                  
   781 0000051A C3                      	ret;;
   782                                  
