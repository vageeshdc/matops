     1                                  ;assignment 1
     2                                  ;CSD course
     3                                  ;author: vageesh
     4                                  ;
     5                                  ;Info : a matrix multiplication implementation
     6                                  
     7                                  section .data
     8 00000000 737570207468657265-     	msg: db "sup there",16
     9 00000009 10                 
    10                                  	len: equ $-msg
    11                                  
    12 0000000A 0C000000F3E0010013-     	arr: dd 12,123123,2323,454,234,3434,324
    13 00000013 090000C6010000EA00-
    14 0000001C 00006A0D0000440100-
    15 00000025 00                 
    16                                  	
    17 00000026 010000000200000003-     	arr2: dd 1,2,3,4
    18 0000002F 00000004000000     
    19 00000036 000000000000000000-     	arr3: dd 0,0,0,0
    20 0000003F 00000000000000     
    21                                  
    22 00000046 207C2025642000          	format: db " | %d ",0
    23 0000004D 207C200A00              	format2: db " | ",10,0
    24                                  
    25 00000052 00000000                	loop_i: dd 0
    26 00000056 00000000                	loop_j: dd 0
    27                                  	
    28 0000005A 00000000                	aVec: dd 0
    29 0000005E 00000000                	bVec: dd 0
    30                                  	
    31 00000062 00000000                	aOff: dd 0
    32 00000066 00000000                	bOff: dd 0
    33 0000006A 00000000                	cOff: dd 0
    34                                  
    35 0000006E 00000000                	lop_i: dd 0
    36 00000072 00000000                	lop_j: dd 0
    37 00000076 00000000                	lop_k: dd 0
    38                                  	
    39 0000007A 00000000                	Av: dd 0
    40 0000007E 00000000                	Bv: dd 0
    41 00000082 00000000                	Cv: dd 0
    42 00000086 00000000                	Dv: dd 0
    43 0000008A 00000000                	Nval: dd 0
    44 0000008E 00000000                	Bval: dd 0
    45                                  
    46 00000092 010000000200000003-     	AA: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    47 0000009B 000000040000000500-
    48 000000A4 000006000000070000-
    49 000000AD 000800000009000000-
    50 000000B6 0A0000000B0000000C-
    51 000000BF 0000000D0000000E00-
    52 000000C8 00000F000000100000-
    53 000000D1 00                 
    54 000000D2 010000000200000003-     	BB: dd 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
    55 000000DB 000000040000000500-
    56 000000E4 000006000000070000-
    57 000000ED 000800000009000000-
    58 000000F6 0A0000000B0000000C-
    59 000000FF 0000000D0000000E00-
    60 00000108 00000F000000100000-
    61 00000111 00                 
    62                                  
    63 00000112 000000000000000000-     	CC: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    64 0000011B 000000000000000000-
    65 00000124 000000000000000000-
    66 0000012D 000000000000000000-
    67 00000136 000000000000000000-
    68 0000013F 000000000000000000-
    69 00000148 000000000000000000-
    70 00000151 00                 
    71                                  
    72 00000152 000000000000000000-     	DD: dd 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    73 0000015B 000000000000000000-
    74 00000164 000000000000000000-
    75 0000016D 000000000000000000-
    76 00000176 000000000000000000-
    77 0000017F 000000000000000000-
    78 00000188 000000000000000000-
    79 00000191 00                 
    80                                  
    81                                  section .text:
    82                                  	global main
    83                                  	extern printf
    84                                  
    85                                  main:
    86                                  	
    87                                  	;b
    88 00000000 B802000000              	mov eax,2
    89 00000005 50                          push eax
    90                                  
    91                                  	;N
    92 00000006 B804000000              	mov eax,4
    93 0000000B 50                      	push eax
    94                                  
    95                                  	;D
    96 0000000C B8[52010000]            	mov eax,DD
    97 00000011 50                      	push eax
    98                                  
    99                                  	;C
   100 00000012 B8[12010000]            	mov eax,CC
   101 00000017 50                      	push eax
   102                                  
   103                                  	;B
   104 00000018 B8[D2000000]            	mov eax,BB
   105 0000001D 50                      	push eax
   106                                  
   107                                  	;A
   108 0000001E B8[92000000]            	mov eax,AA
   109 00000023 50                      	push eax
   110                                  
   111                                  	;call add_mat_2d
   112 00000024 E89C000000              	call mult_block_2d
   113                                  
   114                                  	;; print the matrix C
   115                                  
   116 00000029 B804000000              	mov eax,4
   117 0000002E A3[6E000000]            	mov [lop_i],eax
   118                                  
   119 00000033 BB00000000              	mov ebx,0
   120 00000038 891D[52000000]          	mov [loop_i],ebx
   121 0000003E 891D[56000000]          	mov [loop_j],ebx
   122                                  
   123                                  pl1:
   124                                  
   125                                  pl2:
   126                                  
   127                                  	;; print to screen
   128                                  
   129 00000044 8B0D[52000000]          	mov ecx,[loop_i]
   130 0000004A 0FAF0D[6E000000]        	imul ecx,[lop_i]
   131 00000051 030D[56000000]          	add ecx,[loop_j]
   132 00000057 69C904000000            	imul ecx,4
   133 0000005D 81C1[12010000]          	add ecx,CC
   134                                  	
   135 00000063 8B01                    	mov eax,[ecx]
   136 00000065 50                      	push eax
   137 00000066 68[46000000]            	push format
   138 0000006B E8(00000000)            	call printf
   139                                  
   140                                  	;;end of print
   141                                  
   142                                  	;update
   143                                  	
   144 00000070 8B1D[56000000]          	mov ebx,[loop_j]
   145 00000076 81C301000000            	add ebx,1
   146 0000007C 891D[56000000]          	mov [loop_j],ebx
   147                                  
   148 00000082 3B1D[6E000000]          	cmp ebx,[lop_i]
   149 00000088 7CBA                    	jl pl2
   150                                  
   151                                  pl2_out:
   152                                  
   153                                  	;new line print
   154                                  
   155 0000008A 68[4D000000]            	push format2
   156 0000008F E8(00000000)            	call printf
   157                                  	;;
   158                                  
   159 00000094 BB00000000              	mov ebx,0
   160 00000099 891D[56000000]          	mov [loop_j],ebx
   161                                  
   162 0000009F 8B1D[52000000]          	mov ebx,[loop_i]
   163 000000A5 81C301000000            	add ebx,1
   164 000000AB 891D[52000000]          	mov [loop_i],ebx
   165                                  
   166 000000B1 3B1D[6E000000]          	cmp ebx,[lop_i]
   167 000000B7 7C8B                    	jl pl1
   168                                  
   169                                  pl1_out:
   170                                  
   171                                  	;; end of print bye
   172                                  
   173 000000B9 B801000000              	mov eax,1
   174 000000BE BB00000000              	mov ebx,0
   175 000000C3 CD80                    	int 80h
   176                                  
   177                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                                  
   179                                  mult_block_2d:
   180                                  
   181                                  	;the params are A[],B[],C[],D[],N,b
   182                                  	; A,B are the ip C is the OP
   183                                  	; D is the dummy 
   184                                  	; N is the dimension
   185                                  	; b is the block parameter
   186                                  
   187 000000C5 8B442404                	mov eax,[esp+4]
   188 000000C9 A3[7A000000]            	mov [Av],eax
   189                                  
   190 000000CE 8B442408                	mov eax,[esp+8]
   191 000000D2 A3[7E000000]            	mov [Bv],eax
   192                                  
   193 000000D7 8B44240C                	mov eax,[esp+12]
   194 000000DB A3[82000000]            	mov [Cv],eax
   195                                  
   196 000000E0 8B442410                	mov eax,[esp+16]
   197 000000E4 A3[86000000]            	mov [Dv],eax
   198                                  
   199 000000E9 8B442414                	mov eax,[esp+20]
   200 000000ED A3[8A000000]            	mov [Nval],eax
   201                                  
   202 000000F2 8B442418                	mov eax,[esp+24]
   203 000000F6 A3[8E000000]            	mov [Bval],eax
   204                                  
   205 000000FB A1[8A000000]            	mov eax,[Nval]
   206 00000100 8B1D[8E000000]          	mov ebx,[Bval]
   207 00000106 F7F3                    	div ebx
   208                                  
   209 00000108 81FA00000000            	cmp edx,0
   210 0000010E 0F8539010000            	jne exit_error_noerror
   211                                  
   212                                  	;use lop_i,lop_j,lop_k
   213                                  	;ind ia ja ib jb ic jc id jd
   214                                  	
   215 00000114 B800000000              	mov eax,0
   216 00000119 A3[6E000000]            	mov [lop_i],eax
   217 0000011E A3[72000000]            	mov [lop_j],eax
   218                                  
   219                                  
   220                                  l1:
   221                                  	
   222                                  l2:
   223 00000123 B800000000              	mov eax,0
   224 00000128 A3[76000000]            	mov [lop_k],eax
   225                                  	
   226                                  l3:
   227                                  	
   228                                  	;;mult here
   229                                  	
   230                                  	;jc
   231 0000012D A1[76000000]            	mov eax,[lop_k]
   232 00000132 50                      	push eax
   233                                  
   234                                  	;ic
   235 00000133 B800000000              	mov eax,0
   236 00000138 50                      	push eax
   237                                  
   238                                  	;Wid
   239 00000139 A1[8A000000]            	mov eax,[Nval]
   240 0000013E 50                      	push eax
   241                                  
   242                                  	;jb
   243 0000013F A1[72000000]            	mov eax,[lop_j]
   244 00000144 50                      	push eax
   245                                  
   246                                  	;ib
   247 00000145 A1[76000000]            	mov eax,[lop_k]
   248 0000014A 50                      	push eax
   249                                  
   250                                  	;ja
   251 0000014B A1[76000000]            	mov eax,[lop_k]
   252 00000150 50                      	push eax
   253                                  
   254                                  	;ia
   255 00000151 A1[6E000000]            	mov eax,[lop_i]
   256 00000156 50                      	push eax
   257                                  
   258                                  	;C
   259 00000157 A1[86000000]            	mov eax,[Dv]
   260 0000015C 50                      	push eax
   261                                  
   262                                  	;n
   263 0000015D A1[8E000000]            	mov eax,[Bval]
   264 00000162 50                      	push eax
   265                                  
   266                                  	;b
   267 00000163 A1[7E000000]            	mov eax,[Bv]
   268 00000168 50                      	push eax
   269                                  
   270                                  	;a
   271 00000169 A1[7A000000]            	mov eax,[Av]
   272 0000016E 50                      	push eax
   273                                  
   274                                  	;; call the function
   275 0000016F E8DA000000              	call mult_mat_2d
   276                                  
   277                                  	;; mult ends
   278                                  
   279 00000174 58                      	pop eax
   280 00000175 58                      	pop eax	
   281 00000176 58                      	pop eax
   282 00000177 58                      	pop eax	
   283 00000178 58                      	pop eax	
   284 00000179 58                      	pop eax	
   285 0000017A 58                      	pop eax	
   286 0000017B 58                      	pop eax	
   287 0000017C 58                      	pop eax	
   288 0000017D 58                      	pop eax	
   289 0000017E 58                      	pop eax	
   290                                  	
   291                                  	;loop management
   292 0000017F A1[76000000]            	mov eax,[lop_k]
   293 00000184 0305[8E000000]          	add eax,[Bval]
   294 0000018A A3[76000000]            	mov [lop_k],eax
   295                                  
   296 0000018F 3B05[8A000000]          	cmp eax,[Nval]
   297 00000195 7C96                    	jl l3
   298                                  
   299                                  l3_out:
   300                                  
   301                                  	;; add ops here
   302                                  	
   303 00000197 B800000000              	mov eax,0
   304 0000019C A3[76000000]            	mov [lop_k],eax
   305                                  
   306                                  l4:
   307                                  
   308                                  	;; push ops
   309                                  
   310                                  	;jc
   311 000001A1 A1[72000000]            	mov eax,[lop_j]
   312 000001A6 50                      	push eax
   313                                  
   314                                  	;ic
   315 000001A7 A1[6E000000]            	mov eax,[lop_i]
   316 000001AC 50                      	push eax
   317                                  
   318                                  	;Wid
   319 000001AD A1[8A000000]            	mov eax,[Nval]
   320 000001B2 50                      	push eax
   321                                  
   322                                  	;jb
   323 000001B3 A1[72000000]            	mov eax,[lop_j]
   324 000001B8 50                      	push eax
   325                                  
   326                                  	;ib
   327 000001B9 A1[6E000000]            	mov eax,[lop_i]
   328 000001BE 50                      	push eax
   329                                  
   330                                  	;ja
   331 000001BF A1[76000000]            	mov eax,[lop_k]
   332 000001C4 50                      	push eax
   333                                  
   334                                  	;ia
   335 000001C5 B800000000              	mov eax,0
   336 000001CA 50                      	push eax
   337                                  
   338                                  	;C
   339 000001CB A1[82000000]            	mov eax,[Cv]
   340 000001D0 50                      	push eax
   341                                  
   342                                  	;n
   343 000001D1 A1[8E000000]            	mov eax,[Bval]
   344 000001D6 50                      	push eax
   345                                  
   346                                  	;b
   347 000001D7 A1[82000000]            	mov eax,[Cv]
   348 000001DC 50                      	push eax
   349                                  
   350                                  	;a
   351 000001DD A1[86000000]            	mov eax,[Dv]
   352 000001E2 50                      	push eax
   353                                  
   354                                  	;; call
   355 000001E3 E8BE010000              	call add_mat_2d
   356                                  
   357                                  	;;end of pushops
   358                                  	
   359 000001E8 58                      	pop eax
   360 000001E9 58                      	pop eax	
   361 000001EA 58                      	pop eax
   362 000001EB 58                      	pop eax	
   363 000001EC 58                      	pop eax	
   364 000001ED 58                      	pop eax	
   365 000001EE 58                      	pop eax	
   366 000001EF 58                      	pop eax	
   367 000001F0 58                      	pop eax	
   368 000001F1 58                      	pop eax	
   369 000001F2 58                      	pop eax	
   370                                  
   371 000001F3 A1[76000000]            	mov eax,[lop_k]
   372 000001F8 0305[8E000000]          	add eax,[Bval]
   373 000001FE A3[76000000]            	mov [lop_k],eax
   374                                  
   375 00000203 3B05[8A000000]          	cmp eax,[Nval]
   376 00000209 7C96                    	jl l4
   377                                  
   378                                  l4_out:
   379                                  
   380                                  	;; end of add ops
   381                                  
   382                                  
   383                                  
   384 0000020B A1[72000000]            	mov eax,[lop_j]
   385 00000210 0305[8E000000]          	add eax,[Bval]
   386 00000216 A3[72000000]            	mov [lop_j],eax
   387                                  
   388 0000021B 3B05[8A000000]          	cmp eax,[Nval]
   389 00000221 0F8CFCFEFFFF            	jl l2
   390                                  
   391                                  l2_out:
   392                                  	
   393 00000227 B800000000              	mov eax,0
   394 0000022C A3[72000000]            	mov [lop_j],eax
   395                                  
   396 00000231 A1[6E000000]            	mov eax,[lop_i]
   397 00000236 0305[8E000000]          	add eax,[Bval]
   398 0000023C A3[6E000000]            	mov [lop_i],eax
   399                                  
   400 00000241 3B05[8A000000]          	cmp eax,[Nval]
   401 00000247 0F8CD6FEFFFF            	jl l1
   402                                  
   403                                  l1_out:
   404                                  	
   405                                  
   406                                  exit_error_noerror:
   407 0000024D C3                      	ret;;
   408                                  
   409                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   410                                  
   411                                  mult_mat_2d:
   412                                  	
   413                                  	;args a[],b[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   414                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   415                                  	;Wid is the Width of parent matrix
   416                                  	;Work under assumption that it is a square
   417                                  	; A,B,C are the references of parent matrices only
   418                                  	
   419 0000024E 8B44240C                	mov eax,[esp+12]
   420 00000252 2D01000000              	sub eax,1
   421                                  
   422 00000257 A3[52000000]            	mov dword [loop_i],eax
   423 0000025C A3[56000000]            	mov dword [loop_j],eax
   424                                  	;done with setting loop variables
   425                                  	;push and pop eax for counter ops
   426                                  	
   427                                  	;find offset
   428                                  	
   429                                  	;;A's offset
   430 00000261 8B542414                	mov edx,[esp+20]
   431 00000265 81EA01000000            	sub edx,1
   432 0000026B 0FAF542424              	imul edx,[esp+36]
   433 00000270 03542418                	add edx,[esp+24]
   434 00000274 69D204000000            	imul edx,4
   435 0000027A 8915[62000000]          	mov [aOff],edx
   436                                  	
   437                                  	;;B's offset
   438 00000280 8B54241C                	mov edx,[esp+28]
   439 00000284 81EA01000000            	sub edx,1
   440 0000028A 0FAF542424              	imul edx,[esp+36]
   441 0000028F 03542420                	add edx,[esp+32]
   442 00000293 69D204000000            	imul edx,4
   443 00000299 8915[66000000]          	mov [bOff],edx
   444                                  	
   445                                  	;;C's offset
   446 0000029F 8B542428                	mov edx,[esp+40]
   447 000002A3 81EA01000000            	sub edx,1
   448 000002A9 0FAF542424              	imul edx,[esp+36]
   449 000002AE 0354242C                	add edx,[esp+44]
   450 000002B2 69D204000000            	imul edx,4
   451 000002B8 8915[6A000000]          	mov [cOff],edx
   452                                  	
   453                                  out_1:
   454                                  
   455                                  	;outer loop
   456                                  out_2:
   457                                  
   458                                  	;inner loop
   459                                  
   460                                  	;current B off
   461 000002BE A1[56000000]            	mov eax,[loop_j]
   462 000002C3 69C004000000            	imul eax,4
   463 000002C9 03442408                	add eax,[esp+8]
   464 000002CD 0305[66000000]          	add eax,[bOff]
   465 000002D3 A3[5E000000]            	mov dword [bVec],eax
   466                                  
   467                                  	;current A off
   468 000002D8 A1[52000000]            	mov eax,[loop_i]
   469 000002DD 0FAF442424              	imul eax,[esp+36]
   470 000002E2 69C004000000            	imul eax,4
   471 000002E8 03442404                	add eax,[esp+4]
   472 000002EC 0305[62000000]          	add eax,[aOff]
   473 000002F2 A3[5A000000]            	mov dword [aVec],eax
   474                                  	
   475                                  	;;;row multiplication ops here...
   476                                  	
   477 000002F7 BB00000000              	mov ebx,0
   478 000002FC 8B4C240C                	mov ecx,[esp+12]
   479 00000300 81E901000000            	sub ecx,1
   480                                  	
   481                                  out_3:	
   482 00000306 89C8                    	mov eax,ecx
   483 00000308 0FAF442424              	imul eax,[esp+36]
   484 0000030D 69C004000000            	imul eax,4
   485 00000313 0305[5E000000]          	add dword eax,[bVec]
   486 00000319 8B10                    	mov edx,[eax]
   487                                  
   488 0000031B A1[5A000000]            	mov eax,[aVec]
   489 00000320 51                      	push ecx
   490 00000321 69C904000000            	imul ecx,4
   491 00000327 01C8                    	add eax,ecx
   492 00000329 59                      	pop ecx
   493                                  
   494 0000032A 0FAF10                  	imul edx,[eax]
   495 0000032D 01D3                    	add ebx,edx
   496 0000032F 81E901000000            	sub ecx,1
   497                                  	
   498 00000335 81F900000000            	cmp ecx,0
   499 0000033B 7DC9                    	jge out_3
   500                                  
   501                                  out_3_exit:
   502                                  	
   503                                      ;;;end of row op...
   504                                  	
   505 0000033D 89DA                    	mov edx,ebx
   506                                  
   507                                  	;writing result of C
   508 0000033F A1[52000000]            	mov eax,[loop_i]
   509 00000344 0FAF442424              	imul eax,[esp+36]
   510 00000349 8B1D[56000000]          	mov ebx,[loop_j]
   511 0000034F 01D8                    	add eax,ebx
   512 00000351 69C004000000            	imul eax,4
   513 00000357 0305[6A000000]          	add eax,[cOff]
   514 0000035D 03442410                	add eax,[esp+16]
   515 00000361 8910                    	mov [eax],edx
   516                                  	
   517 00000363 A1[56000000]            	mov eax,[loop_j]
   518 00000368 2D01000000              	sub eax,1
   519 0000036D A3[56000000]            	mov dword [loop_j],eax
   520                                  
   521 00000372 3D00000000              	cmp eax,0
   522                                  
   523 00000377 0F8D41FFFFFF            	jge out_2
   524                                  
   525                                  out_2_end:
   526                                  
   527                                  
   528 0000037D 8B44240C                	mov eax,[esp+12]
   529 00000381 2D01000000              	sub eax,1
   530 00000386 A3[56000000]            	mov dword [loop_j],eax
   531                                  
   532 0000038B A1[52000000]            	mov eax,[loop_i]
   533 00000390 2D01000000              	sub eax,1
   534 00000395 A3[52000000]            	mov [loop_i],eax
   535                                  
   536 0000039A 3D00000000              	cmp eax,0
   537                                  
   538 0000039F 0F8D19FFFFFF            	jge out_1
   539                                  
   540                                  out_1_end:
   541                                  
   542 000003A5 C3                      	ret;
   543                                  	;end of the procedure
   544                                  
   545                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   546                                  
   547                                  add_mat_2d:
   548                                  	;arr A[],B[],n,C[],ia,ja,ib,jb,Wid,ic,jc
   549                                  	;here  (ij) is the location of blocks A and B wrt to parent matrices
   550                                  	;Wid is the Width of parent matrix
   551                                  	;Work under assumption that it is a square
   552                                  	; A,B,C are the references of parent matrices only
   553                                  
   554 000003A6 8B44240C                	mov eax,[esp+12]
   555 000003AA 2D01000000              	sub eax,1
   556                                  
   557 000003AF A3[52000000]            	mov [loop_i],eax
   558 000003B4 A3[56000000]            	mov [loop_j],eax
   559                                  
   560                                  out_1a:
   561                                  	
   562                                  out_2a:
   563                                  	
   564                                  	;;addition logic
   565                                  	
   566                                  	;find offset
   567                                  	
   568                                  	;;A's offset
   569 000003B9 8B542414                	mov edx,[esp+20]
   570 000003BD 81EA01000000            	sub edx,1
   571 000003C3 0FAF542424              	imul edx,[esp+36]
   572 000003C8 03542418                	add edx,[esp+24]
   573 000003CC 69D204000000            	imul edx,4
   574 000003D2 8915[62000000]          	mov [aOff],edx
   575                                  	
   576                                  	;;B's offset
   577 000003D8 8B54241C                	mov edx,[esp+28]
   578 000003DC 81EA01000000            	sub edx,1
   579 000003E2 0FAF542424              	imul edx,[esp+36]
   580 000003E7 03542420                	add edx,[esp+32]
   581 000003EB 69D204000000            	imul edx,4
   582 000003F1 8915[66000000]          	mov [bOff],edx
   583                                  	
   584                                  	;;C's offset
   585 000003F7 8B542428                	mov edx,[esp+40]
   586 000003FB 81EA01000000            	sub edx,1
   587 00000401 0FAF542424              	imul edx,[esp+36]
   588 00000406 0354242C                	add edx,[esp+44]
   589 0000040A 69D204000000            	imul edx,4
   590 00000410 8915[6A000000]          	mov [cOff],edx
   591                                  	
   592                                  	;common offset
   593 00000416 8B1D[52000000]          	mov ebx,[loop_i]
   594 0000041C 0FAF5C2424              	imul ebx,[esp+36]
   595 00000421 031D[56000000]          	add ebx,[loop_j]
   596 00000427 69DB04000000            	imul ebx,4
   597                                  
   598                                  	;get B[]
   599 0000042D 8B4C2408                	mov ecx,[esp+8]
   600 00000431 01D9                    	add ecx,ebx
   601 00000433 030D[66000000]          	add ecx,[bOff]
   602 00000439 8B01                    	mov eax,[ecx]
   603                                  
   604                                  	;add A[]
   605 0000043B 8B4C2404                	mov ecx,[esp+4]
   606 0000043F 01D9                    	add ecx,ebx
   607 00000441 030D[62000000]          	add ecx,[aOff]
   608 00000447 0301                    	add eax,[ecx]
   609                                  
   610                                  	;store to C[]
   611 00000449 8B4C2410                	mov ecx,[esp+16]
   612 0000044D 01D9                    	add ecx,ebx
   613 0000044F 030D[6A000000]          	add ecx,[cOff]
   614 00000455 8901                    	mov [ecx],eax
   615                                  
   616                                  	;;end of addition
   617                                  
   618 00000457 A1[56000000]            	mov eax,[loop_j]
   619 0000045C 2D01000000              	sub eax,1
   620 00000461 A3[56000000]            	mov [loop_j],eax
   621                                  
   622 00000466 3D00000000              	cmp eax,0
   623 0000046B 0F8D4DFEFFFF            	jge out_2
   624                                  
   625                                  out_2a_end:
   626                                  	
   627 00000471 8B44240C                	mov eax,[esp+12]
   628 00000475 2D01000000              	sub eax,1
   629 0000047A A3[56000000]            	mov [loop_j],eax
   630                                  
   631 0000047F A1[52000000]            	mov eax,[loop_i]
   632 00000484 2D01000000              	sub eax,1
   633 00000489 A3[52000000]            	mov [loop_i],eax
   634                                  
   635 0000048E 3D00000000              	cmp eax,0
   636 00000493 0F8D25FEFFFF            	jge out_1
   637                                  
   638                                  out_1a_end:
   639                                  
   640 00000499 C3                      	ret;
   641                                  	;end of addition
   642                                  
   643                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
